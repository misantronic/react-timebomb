module.exports = { contents: "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a;\n\"use strict\";\nconst lodash_decorators_1 = require(\"lodash-decorators\");\nconst React = require(\"react\");\nconst styled_components_1 = require(\"styled-components\");\nconst utils_1 = require(\"./utils\");\nconst button_1 = require(\"./button\");\nconst Flex = styled_components_1.default.div `\n    display: flex;\n    align-items: center;\n`;\nconst MenuContainer = styled_components_1.default(Flex) `\n    flex-direction: column;\n\n    button {\n        width: 100%;\n    }\n`;\nconst Confirm = styled_components_1.default.div `\n    width: 100%;\n    text-align: center;\n    margin-top: 15px;\n\n    button {\n        padding: 3px 28px;\n    }\n`;\nconst Table = styled_components_1.default.table `\n    margin-bottom: 5px;\n    width: 100%;\n    font-size: 13px;\n    user-select: none;\n\n    td.calendar-week {\n        color: #aaa;\n    }\n\n    th.calendar-week {\n        text-align: left;\n        color: #aaa;\n    }\n\n    tr {\n        ${(props) => props.selectWeek\n    ? styled_components_1.css `\n                      &:hover {\n                          cursor: pointer;\n\n                          td.day {\n                              background-color: #eee;\n                          }\n                      }\n                  `\n    : ''};\n\n        th {\n            padding: 3px 2px;\n        }\n    }\n`;\nconst Day = styled_components_1.default(Flex) `\n    padding: 3px 2px;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    color: ${(props) => (props.current ? '#000' : '#aaa')};\n    background-color: ${(props) => props.selected\n    ? '#ddd'\n    : props.today\n        ? 'rgba(172, 206, 247, 0.4)'\n        : 'transparent'};\n    font-weight: ${(props) => (props.selected ? 'bold' : 'normal')};\n    pointer-events: ${(props) => (props.disabled ? 'none' : 'auto')};\n    user-select: none;\n    opacity: ${(props) => (props.disabled ? 0.3 : 1)};\n\n    &:hover {\n        background-color: ${(props) => props.selected ? '#ddd' : '#eee'};\n    }\n`;\nclass Menu extends React.PureComponent {\n    get now() {\n        return new Date();\n    }\n    get monthMatrix() {\n        const { date } = this.props;\n        const dateMonth = date.getMonth();\n        const dateYear = date.getFullYear();\n        const weeks = [];\n        let base = utils_1.startOfMonth(date);\n        let week = 0;\n        while (utils_1.startOfWeek(base).getMonth() === dateMonth ||\n            utils_1.endOfWeek(base).getMonth() === dateMonth) {\n            const weekStart = utils_1.startOfWeek(new Date(dateYear, dateMonth, week++ * 7 + 1));\n            weeks.push([\n                weekStart,\n                utils_1.addDays(weekStart, 1),\n                utils_1.addDays(weekStart, 2),\n                utils_1.addDays(weekStart, 3),\n                utils_1.addDays(weekStart, 4),\n                utils_1.addDays(weekStart, 5),\n                utils_1.addDays(weekStart, 6)\n            ]);\n            base = utils_1.addDays(base, 7);\n        }\n        return weeks;\n    }\n    render() {\n        const { mode, showConfirm } = this.props;\n        switch (mode) {\n            case 'year':\n                return this.renderMenuYear();\n            case 'months':\n                return this.renderMenuMonths();\n            case 'month':\n                return (React.createElement(React.Fragment, null,\n                    this.renderMonth(),\n                    showConfirm && this.renderConfirm()));\n        }\n    }\n    renderMenuYear() {\n        const { date: currentDate } = this.props;\n        const currentYear = this.now.getFullYear();\n        return (React.createElement(MenuContainer, null, Array(100)\n            .fill(undefined)\n            .map((_, i) => {\n            const newDate = new Date(currentDate);\n            newDate.setFullYear(currentYear - i);\n            const disabled = utils_1.isDisabled(newDate, this.props);\n            return (React.createElement(button_1.Button, { key: i, tabIndex: -1, style: { margin: 5 }, disabled: disabled, onClick: () => {\n                    setTimeout(() => this.props.onSelectYear(newDate), 0);\n                } }, currentYear - i));\n        })));\n    }\n    renderMenuMonths() {\n        const { date } = this.props;\n        const months = utils_1.getMonthNames();\n        return (React.createElement(MenuContainer, null, months.map((str, i) => {\n            const newDate = new Date(date);\n            newDate.setMonth(i);\n            const disabled = utils_1.isDisabled(newDate, this.props);\n            return (React.createElement(button_1.Button, { key: str, tabIndex: -1, style: { margin: 5 }, disabled: disabled, onClick: () => setTimeout(() => this.props.onSelectMonth(newDate), 0) }, str));\n        })));\n    }\n    renderMonth() {\n        const { monthMatrix } = this;\n        const { showCalendarWeek, selectWeek } = this.props;\n        return (React.createElement(Table, { selectWeek: selectWeek, cellSpacing: 0, cellPadding: 0 },\n            React.createElement(\"thead\", null,\n                React.createElement(\"tr\", null,\n                    showCalendarWeek && React.createElement(\"th\", { className: \"calendar-week\" }),\n                    React.createElement(\"th\", null, \"Mo\"),\n                    React.createElement(\"th\", null, \"Di\"),\n                    React.createElement(\"th\", null, \"Mi\"),\n                    React.createElement(\"th\", null, \"Do\"),\n                    React.createElement(\"th\", null, \"Fr\"),\n                    React.createElement(\"th\", null, \"Sa\"),\n                    React.createElement(\"th\", null, \"So\"))),\n            React.createElement(\"tbody\", null, monthMatrix.map((dates, i) => (React.createElement(\"tr\", { key: i },\n                showCalendarWeek && (React.createElement(\"td\", { className: \"calendar-week\" }, utils_1.getWeekOfYear(dates[0]))),\n                dates.map((date, j) => (React.createElement(\"td\", { className: \"day\", key: j }, this.renderDay(date))))))))));\n    }\n    renderDay(day) {\n        const num = day.getDate();\n        const { value, date, selectWeek } = this.props;\n        let selected = value &&\n            day.getDate() === value.getDate() &&\n            day.getMonth() === value.getMonth();\n        const current = day.getMonth() === date.getMonth();\n        const disabled = utils_1.isDisabled(day, this.props);\n        const today = utils_1.isToday(day);\n        if (selectWeek && value) {\n            selected = utils_1.getWeekOfYear(value) === utils_1.getWeekOfYear(day);\n        }\n        return (React.createElement(Day, { \"data-date\": day.toString(), selected: selected, current: current, disabled: disabled, today: today, onClick: this.onSelectDay }, num));\n    }\n    renderConfirm() {\n        const { valueText, format } = this.props;\n        const validDate = utils_1.validateDate(valueText, format);\n        return (React.createElement(Confirm, null,\n            React.createElement(button_1.Button, { tabIndex: -1, disabled: validDate === null, onClick: () => this.props.onSubmit(this.props.onToggle) }, \"Ok\")));\n    }\n    onSelectDay(e) {\n        const date = new Date(e.currentTarget.getAttribute('data-date'));\n        this.props.onSelectDay(date);\n    }\n}\ntslib_1.__decorate([\n    lodash_decorators_1.bind,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = (typeof React !== \"undefined\" && React).SyntheticEvent) === \"function\" && _a || Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Menu.prototype, \"onSelectDay\", null);\nexports.Menu = Menu;\n//# sourceMappingURL=menu.js.map",
dependencies: ["tslib","lodash-decorators","react","styled-components","./utils","./button"],
sourceMap: "{\"version\":3,\"file\":\"menu.jsx\",\"sourceRoot\":\"\",\"sources\":[\"/src/menu.tsx\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"import { bind } from 'lodash-decorators';\\nimport * as React from 'react';\\nimport styled, { css } from 'styled-components';\\nimport { ReactTimebombState, ReactTimebombProps } from '.';\\nimport {\\n    isDisabled,\\n    validateDate,\\n    isToday,\\n    getMonthNames,\\n    getWeekOfYear,\\n    startOfWeek,\\n    addDays,\\n    startOfMonth,\\n    endOfWeek\\n} from './utils';\\nimport { Button } from './button';\\n\\ninterface MenuProps {\\n    showTime: ReactTimebombState['showTime'];\\n    showConfirm: ReactTimebombProps['showConfirm'];\\n    showCalendarWeek: ReactTimebombProps['showCalendarWeek'];\\n    selectWeek: ReactTimebombProps['selectWeek'];\\n    value: ReactTimebombProps['value'];\\n    valueText: ReactTimebombState['valueText'];\\n    minDate: ReactTimebombProps['minDate'];\\n    maxDate: ReactTimebombProps['maxDate'];\\n    date: ReactTimebombState['date'];\\n    mode: ReactTimebombState['mode'];\\n    format: string;\\n    onToggle(): void;\\n    onSelectDay(date: Date): void;\\n    onSelectYear(date: Date): void;\\n    onSelectMonth(date: Date): void;\\n    onSelectTime(time: string): void;\\n    onSubmit(onToggle: () => void): void;\\n}\\n\\ninterface DayProps {\\n    selected?: boolean;\\n    disabled?: boolean;\\n    current: boolean;\\n    today: boolean;\\n}\\n\\ninterface TableProps {\\n    selectWeek?: boolean;\\n}\\n\\nconst Flex = styled.div`\\n    display: flex;\\n    align-items: center;\\n`;\\n\\nconst MenuContainer = styled(Flex)`\\n    flex-direction: column;\\n\\n    button {\\n        width: 100%;\\n    }\\n`;\\n\\nconst Confirm = styled.div`\\n    width: 100%;\\n    text-align: center;\\n    margin-top: 15px;\\n\\n    button {\\n        padding: 3px 28px;\\n    }\\n`;\\n\\nconst Table = styled.table`\\n    margin-bottom: 5px;\\n    width: 100%;\\n    font-size: 13px;\\n    user-select: none;\\n\\n    td.calendar-week {\\n        color: #aaa;\\n    }\\n\\n    th.calendar-week {\\n        text-align: left;\\n        color: #aaa;\\n    }\\n\\n    tr {\\n        ${(props: TableProps) =>\\n            props.selectWeek\\n                ? css`\\n                      &:hover {\\n                          cursor: pointer;\\n\\n                          td.day {\\n                              background-color: #eee;\\n                          }\\n                      }\\n                  `\\n                : ''};\\n\\n        th {\\n            padding: 3px 2px;\\n        }\\n    }\\n`;\\n\\nconst Day = styled(Flex)`\\n    padding: 3px 2px;\\n    justify-content: center;\\n    align-items: center;\\n    cursor: pointer;\\n    color: ${(props: DayProps) => (props.current ? '#000' : '#aaa')};\\n    background-color: ${(props: DayProps) =>\\n        props.selected\\n            ? '#ddd'\\n            : props.today\\n                ? 'rgba(172, 206, 247, 0.4)'\\n                : 'transparent'};\\n    font-weight: ${(props: DayProps) => (props.selected ? 'bold' : 'normal')};\\n    pointer-events: ${(props: DayProps) => (props.disabled ? 'none' : 'auto')};\\n    user-select: none;\\n    opacity: ${(props: DayProps) => (props.disabled ? 0.3 : 1)};\\n\\n    &:hover {\\n        background-color: ${(props: DayProps) =>\\n            props.selected ? '#ddd' : '#eee'};\\n    }\\n`;\\n\\nexport class Menu extends React.PureComponent<MenuProps> {\\n    private get now(): Date {\\n        return new Date();\\n    }\\n\\n    private get monthMatrix(): (Date[])[] {\\n        const { date } = this.props;\\n        const dateMonth = date.getMonth();\\n        const dateYear = date.getFullYear();\\n        const weeks: (Date)[][] = [];\\n\\n        let base = startOfMonth(date);\\n        let week = 0;\\n\\n        while (\\n            startOfWeek(base).getMonth() === dateMonth ||\\n            endOfWeek(base).getMonth() === dateMonth\\n        ) {\\n            const weekStart = startOfWeek(\\n                new Date(dateYear, dateMonth, week++ * 7 + 1)\\n            );\\n\\n            weeks.push([\\n                weekStart,\\n                addDays(weekStart, 1),\\n                addDays(weekStart, 2),\\n                addDays(weekStart, 3),\\n                addDays(weekStart, 4),\\n                addDays(weekStart, 5),\\n                addDays(weekStart, 6)\\n            ]);\\n\\n            base = addDays(base, 7);\\n        }\\n\\n        return weeks;\\n    }\\n\\n    public render(): React.ReactNode {\\n        const { mode, showConfirm } = this.props;\\n\\n        switch (mode) {\\n            case 'year':\\n                return this.renderMenuYear();\\n            case 'months':\\n                return this.renderMenuMonths();\\n            case 'month':\\n                return (\\n                    <>\\n                        {this.renderMonth()}\\n                        {showConfirm && this.renderConfirm()}\\n                    </>\\n                );\\n        }\\n    }\\n\\n    private renderMenuYear(): React.ReactNode {\\n        const { date: currentDate } = this.props;\\n        const currentYear = this.now.getFullYear();\\n\\n        return (\\n            <MenuContainer>\\n                {Array(100)\\n                    .fill(undefined)\\n                    .map((_, i) => {\\n                        const newDate = new Date(currentDate);\\n\\n                        newDate.setFullYear(currentYear - i);\\n\\n                        const disabled = isDisabled(newDate, this.props);\\n\\n                        return (\\n                            <Button\\n                                key={i}\\n                                tabIndex={-1}\\n                                style={{ margin: 5 }}\\n                                disabled={disabled}\\n                                onClick={() => {\\n                                    setTimeout(\\n                                        () => this.props.onSelectYear(newDate),\\n                                        0\\n                                    );\\n                                }}\\n                            >\\n                                {currentYear - i}\\n                            </Button>\\n                        );\\n                    })}\\n            </MenuContainer>\\n        );\\n    }\\n\\n    private renderMenuMonths(): React.ReactNode {\\n        const { date } = this.props;\\n        const months = getMonthNames();\\n\\n        return (\\n            <MenuContainer>\\n                {months.map((str, i) => {\\n                    const newDate = new Date(date);\\n\\n                    newDate.setMonth(i);\\n\\n                    const disabled = isDisabled(newDate, this.props);\\n\\n                    return (\\n                        <Button\\n                            key={str}\\n                            tabIndex={-1}\\n                            style={{ margin: 5 }}\\n                            disabled={disabled}\\n                            onClick={() =>\\n                                setTimeout(\\n                                    () => this.props.onSelectMonth(newDate),\\n                                    0\\n                                )\\n                            }\\n                        >\\n                            {str}\\n                        </Button>\\n                    );\\n                })}\\n            </MenuContainer>\\n        );\\n    }\\n\\n    private renderMonth(): React.ReactNode {\\n        const { monthMatrix } = this;\\n        const { showCalendarWeek, selectWeek } = this.props;\\n\\n        return (\\n            <Table selectWeek={selectWeek} cellSpacing={0} cellPadding={0}>\\n                <thead>\\n                    <tr>\\n                        {showCalendarWeek && <th className=\\\"calendar-week\\\" />}\\n                        <th>Mo</th>\\n                        <th>Di</th>\\n                        <th>Mi</th>\\n                        <th>Do</th>\\n                        <th>Fr</th>\\n                        <th>Sa</th>\\n                        <th>So</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    {monthMatrix.map((dates, i) => (\\n                        <tr key={i}>\\n                            {showCalendarWeek && (\\n                                <td className=\\\"calendar-week\\\">\\n                                    {getWeekOfYear(dates[0])}\\n                                </td>\\n                            )}\\n                            {dates.map((date, j) => (\\n                                <td className=\\\"day\\\" key={j}>\\n                                    {this.renderDay(date)}\\n                                </td>\\n                            ))}\\n                        </tr>\\n                    ))}\\n                </tbody>\\n            </Table>\\n        );\\n    }\\n\\n    private renderDay(day: Date): React.ReactNode {\\n        const num = day.getDate();\\n        const { value, date, selectWeek } = this.props;\\n        let selected =\\n            value &&\\n            day.getDate() === value.getDate() &&\\n            day.getMonth() === value.getMonth();\\n        const current = day.getMonth() === date.getMonth();\\n        const disabled = isDisabled(day, this.props);\\n        const today = isToday(day);\\n\\n        if (selectWeek && value) {\\n            selected = getWeekOfYear(value) === getWeekOfYear(day);\\n        }\\n\\n        return (\\n            <Day\\n                data-date={day.toString()}\\n                selected={selected}\\n                current={current}\\n                disabled={disabled}\\n                today={today}\\n                onClick={this.onSelectDay}\\n            >\\n                {num}\\n            </Day>\\n        );\\n    }\\n\\n    private renderConfirm(): React.ReactNode {\\n        const { valueText, format } = this.props;\\n        const validDate = validateDate(valueText, format);\\n\\n        return (\\n            <Confirm>\\n                <Button\\n                    tabIndex={-1}\\n                    disabled={validDate === null}\\n                    onClick={() => this.props.onSubmit(this.props.onToggle)}\\n                >\\n                    Ok\\n                </Button>\\n            </Confirm>\\n        );\\n    }\\n\\n    @bind\\n    private onSelectDay(e: React.SyntheticEvent<HTMLDivElement>): void {\\n        const date = new Date(e.currentTarget.getAttribute('data-date')!);\\n\\n        this.props.onSelectDay(date);\\n    }\\n}\\n\"]}",
headerContent: undefined,
mtime: 1532271488000,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
