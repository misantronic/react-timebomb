module.exports = { contents: "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// @ts-ignore\nconst moment_1 = require(\"moment\");\nconst momentImport = require(\"moment\");\nconst moment = moment_1.default || momentImport;\nconst formatSplit = /[.|:|-|\\\\|_|\\s]/;\nfunction dateFormat(date, format) {\n    return moment(date).format(format);\n}\nexports.dateFormat = dateFormat;\nfunction validateDate(date, format) {\n    const instance = moment(date, format, true);\n    return instance.isValid() ? instance.toDate() : null;\n}\nexports.validateDate = validateDate;\nfunction getFormatType(format) {\n    if (/d/i.test(format)) {\n        return 'day';\n    }\n    if (/M/.test(format)) {\n        return 'month';\n    }\n    if (/y/i.test(format)) {\n        return 'year';\n    }\n    if (/h/i.test(format)) {\n        return 'hour';\n    }\n    if (/m/.test(format)) {\n        return 'minute';\n    }\n    if (/s/.test(format)) {\n        return 'second';\n    }\n    return undefined;\n}\nexports.getFormatType = getFormatType;\nfunction validateFormatGroup(char, format) {\n    if (isFinite(char)) {\n        const int = parseInt(char, 10);\n        const strLen = char.length;\n        const type = getFormatType(format);\n        switch (type) {\n            case 'day':\n                if (strLen === 1) {\n                    if (int >= 0 && int <= 3) {\n                        return true;\n                    }\n                    else {\n                        return `0${char}`;\n                    }\n                }\n                if (strLen === 2 && int >= 1 && int <= 31) {\n                    return true;\n                }\n                break;\n            case 'month':\n                if (strLen === 1) {\n                    if (int === 0 || int === 1) {\n                        return true;\n                    }\n                    else {\n                        return `0${char}`;\n                    }\n                }\n                if (strLen === 2 && int >= 0 && int <= 12) {\n                    return true;\n                }\n                break;\n            case 'year':\n                if (strLen === 1 && (int === 1 || int === 2)) {\n                    return true;\n                }\n                if (strLen >= 2 &&\n                    (char.startsWith('19') || char.startsWith('20'))) {\n                    return true;\n                }\n                break;\n            case 'hour':\n                if (strLen === 1) {\n                    if (int >= 0 && int <= 2) {\n                        return true;\n                    }\n                    else {\n                        return `0${char}`;\n                    }\n                }\n                if (strLen >= 2 && int >= 0 && int <= 24) {\n                    return true;\n                }\n                break;\n            case 'minute':\n            case 'second':\n                if (strLen === 1) {\n                    if (int >= 0 && int <= 5) {\n                        return true;\n                    }\n                    else {\n                        return `0${char}`;\n                    }\n                }\n                if (strLen >= 2 && int >= 0 && int <= 59) {\n                    return true;\n                }\n                break;\n        }\n    }\n    return false;\n}\nexports.validateFormatGroup = validateFormatGroup;\nfunction stringFromCharCode(keyCode) {\n    const charCode = keyCode - 48 * Math.floor(keyCode / 48);\n    return String.fromCharCode(96 <= keyCode ? charCode : keyCode);\n}\nexports.stringFromCharCode = stringFromCharCode;\nfunction formatNumber(number) {\n    if (number <= 1) {\n        return '01';\n    }\n    if (number <= 9) {\n        return `0${number}`;\n    }\n    return String(number);\n}\nexports.formatNumber = formatNumber;\nfunction splitDate(date, format) {\n    return moment(date)\n        .format(format)\n        .split(formatSplit);\n}\nexports.splitDate = splitDate;\nfunction joinDates(parts, format) {\n    const strParts = parts\n        .map(part => (part instanceof HTMLElement ? part.innerText : part))\n        .filter(val => val);\n    const splittedFormat = format.split(formatSplit);\n    if (strParts.length !== splittedFormat.length) {\n        return '';\n    }\n    const date = strParts.join(' ');\n    const spaceFormat = splittedFormat.join(' ');\n    const momentDate = moment(date, spaceFormat);\n    const parsingFlags = momentDate.parsingFlags();\n    switch (parsingFlags.overflow) {\n        case 2:\n            return moment(\n            // @ts-ignore\n            new Date(...parsingFlags.parsedDateParts)).format(format);\n    }\n    return momentDate.format(format);\n}\nexports.joinDates = joinDates;\nfunction clearSelection() {\n    const sel = getSelection();\n    if (sel.empty) {\n        // Chrome\n        sel.empty();\n    }\n    else if (sel.removeAllRanges) {\n        // Firefox\n        sel.removeAllRanges();\n    }\n}\nexports.clearSelection = clearSelection;\nfunction getWeekOfYear(date) {\n    return moment(date).isoWeek();\n}\nexports.getWeekOfYear = getWeekOfYear;\nfunction startOfWeek(date) {\n    return moment(date)\n        .startOf('isoWeek')\n        .toDate();\n}\nexports.startOfWeek = startOfWeek;\nfunction endOfWeek(date) {\n    return moment(date)\n        .endOf('isoWeek')\n        .toDate();\n}\nexports.endOfWeek = endOfWeek;\nfunction startOfDay(date) {\n    const newDate = new Date(date);\n    newDate.setHours(0, 0, 0, 0);\n    return newDate;\n}\nexports.startOfDay = startOfDay;\nfunction endOfDay(date) {\n    const newDate = new Date(date);\n    newDate.setHours(23, 59, 59, 999);\n    return newDate;\n}\nexports.endOfDay = endOfDay;\nfunction addDays(date, num) {\n    return moment(date)\n        .add(num, 'days')\n        .toDate();\n}\nexports.addDays = addDays;\nfunction addMonths(date, num) {\n    return moment(date)\n        .add(num, 'months')\n        .toDate();\n}\nexports.addMonths = addMonths;\nfunction addYears(date, num) {\n    return moment(date)\n        .add(num, 'years')\n        .toDate();\n}\nexports.addYears = addYears;\nfunction addHours(date, num) {\n    return moment(date)\n        .add(num, 'hours')\n        .toDate();\n}\nexports.addHours = addHours;\nfunction addMinutes(date, num) {\n    return moment(date)\n        .add(num, 'minutes')\n        .toDate();\n}\nexports.addMinutes = addMinutes;\nfunction addSeconds(date, num) {\n    return moment(date)\n        .add(num, 'seconds')\n        .toDate();\n}\nexports.addSeconds = addSeconds;\nfunction subtractSeconds(date, num) {\n    return moment(date)\n        .subtract(num, 'seconds')\n        .toDate();\n}\nexports.subtractSeconds = subtractSeconds;\nfunction subtractMinutes(date, num) {\n    return moment(date)\n        .subtract(num, 'minutes')\n        .toDate();\n}\nexports.subtractMinutes = subtractMinutes;\nfunction subtractHours(date, num) {\n    return moment(date)\n        .subtract(num, 'hours')\n        .toDate();\n}\nexports.subtractHours = subtractHours;\nfunction subtractDays(date, num) {\n    return moment(date)\n        .subtract(num, 'days')\n        .toDate();\n}\nexports.subtractDays = subtractDays;\nfunction subtractMonths(date, num) {\n    return moment(date)\n        .subtract(num, 'months')\n        .toDate();\n}\nexports.subtractMonths = subtractMonths;\nfunction subtractYears(date, num) {\n    return moment(date)\n        .subtract(num, 'years')\n        .toDate();\n}\nexports.subtractYears = subtractYears;\nfunction manipulateDate(date, formatType, direction) {\n    switch (formatType) {\n        case 'day':\n            if (direction === 'add')\n                return addDays(date, 1);\n            if (direction === 'subtract')\n                return subtractDays(date, 1);\n            break;\n        case 'month':\n            if (direction === 'add')\n                return addMonths(date, 1);\n            if (direction === 'subtract')\n                return subtractMonths(date, 1);\n            break;\n        case 'year':\n            if (direction === 'add')\n                return addYears(date, 1);\n            if (direction === 'subtract')\n                return subtractYears(date, 1);\n            break;\n        case 'hour':\n            if (direction === 'add')\n                return addHours(date, 1);\n            if (direction === 'subtract')\n                return subtractHours(date, 1);\n            break;\n        case 'minute':\n            if (direction === 'add')\n                return addMinutes(date, 1);\n            if (direction === 'subtract')\n                return subtractMinutes(date, 1);\n            break;\n        case 'second':\n            if (direction === 'add')\n                return addSeconds(date, 1);\n            if (direction === 'subtract')\n                return subtractSeconds(date, 1);\n            break;\n    }\n    return new Date();\n}\nexports.manipulateDate = manipulateDate;\nfunction startOfMonth(date) {\n    const newDate = new Date(date);\n    newDate.setDate(1);\n    newDate.setHours(0, 0, 0, 0);\n    return newDate;\n}\nexports.startOfMonth = startOfMonth;\nfunction endOfMonth(date) {\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n}\nexports.endOfMonth = endOfMonth;\nfunction isUndefined(val) {\n    return val === null || val === undefined;\n}\nexports.isUndefined = isUndefined;\nfunction setDate(date, hour, min) {\n    const newDate = new Date(date);\n    newDate.setHours(hour, min);\n    return newDate;\n}\nexports.setDate = setDate;\nfunction isToday(date) {\n    return moment(date).isSame(new Date(), 'day');\n}\nexports.isToday = isToday;\nfunction getMonthNames(short) {\n    if (short) {\n        return moment.monthsShort();\n    }\n    return moment.months();\n}\nexports.getMonthNames = getMonthNames;\nfunction isDisabled(date, { minDate, maxDate }) {\n    return ((minDate && date < startOfDay(minDate)) ||\n        (maxDate && date >= endOfDay(maxDate)));\n}\nexports.isDisabled = isDisabled;\nfunction getAttribute(input, attr) {\n    return input.getAttribute(attr);\n}\nexports.getAttribute = getAttribute;\nexports.keys = {\n    ARROW_UP: 38,\n    ARROW_RIGHT: 39,\n    ARROW_DOWN: 40,\n    ARROW_LEFT: 37,\n    ENTER: 13,\n    TAB: 9,\n    ESC: 27,\n    BACKSPACE: 8,\n    DELETE: 46,\n    SPACE: 32,\n    A: 65\n};\n//# sourceMappingURL=react-timebomb.js.map",
dependencies: ["moment","moment"],
sourceMap: "{\"version\":3,\"file\":\"utils.js\",\"sourceRoot\":\"\",\"sources\":[\"/src/utils.ts\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"// @ts-ignore\\nimport momentDefaultImport from 'moment';\\nimport * as momentImport from 'moment';\\n\\nconst moment: typeof momentImport = momentDefaultImport || momentImport;\\nconst formatSplit = /[.|:|-|\\\\\\\\|_|\\\\s]/;\\n\\ntype FormatType = 'day' | 'month' | 'year' | 'hour' | 'minute' | 'second';\\n\\nexport function dateFormat(date: Date, format: string): string {\\n    return moment(date).format(format);\\n}\\n\\nexport function validateDate(\\n    date: string | undefined,\\n    format: string\\n): Date | null {\\n    const instance = moment(date, format, true);\\n\\n    return instance.isValid() ? instance.toDate() : null;\\n}\\n\\nexport function getFormatType(format: string): FormatType | undefined {\\n    if (/d/i.test(format)) {\\n        return 'day';\\n    }\\n\\n    if (/M/.test(format)) {\\n        return 'month';\\n    }\\n\\n    if (/y/i.test(format)) {\\n        return 'year';\\n    }\\n\\n    if (/h/i.test(format)) {\\n        return 'hour';\\n    }\\n\\n    if (/m/.test(format)) {\\n        return 'minute';\\n    }\\n\\n    if (/s/.test(format)) {\\n        return 'second';\\n    }\\n\\n    return undefined;\\n}\\n\\nexport function validateFormatGroup(\\n    char: string,\\n    format: string\\n): boolean | string {\\n    if (isFinite(char as any)) {\\n        const int = parseInt(char, 10);\\n        const strLen = char.length;\\n        const type = getFormatType(format);\\n\\n        switch (type) {\\n            case 'day':\\n                if (strLen === 1) {\\n                    if (int >= 0 && int <= 3) {\\n                        return true;\\n                    } else {\\n                        return `0${char}`;\\n                    }\\n                }\\n\\n                if (strLen === 2 && int >= 1 && int <= 31) {\\n                    return true;\\n                }\\n                break;\\n            case 'month':\\n                if (strLen === 1) {\\n                    if (int === 0 || int === 1) {\\n                        return true;\\n                    } else {\\n                        return `0${char}`;\\n                    }\\n                }\\n\\n                if (strLen === 2 && int >= 0 && int <= 12) {\\n                    return true;\\n                }\\n                break;\\n            case 'year':\\n                if (strLen === 1 && (int === 1 || int === 2)) {\\n                    return true;\\n                }\\n\\n                if (\\n                    strLen >= 2 &&\\n                    (char.startsWith('19') || char.startsWith('20'))\\n                ) {\\n                    return true;\\n                }\\n                break;\\n            case 'hour':\\n                if (strLen === 1) {\\n                    if (int >= 0 && int <= 2) {\\n                        return true;\\n                    } else {\\n                        return `0${char}`;\\n                    }\\n                }\\n\\n                if (strLen >= 2 && int >= 0 && int <= 24) {\\n                    return true;\\n                }\\n                break;\\n            case 'minute':\\n            case 'second':\\n                if (strLen === 1) {\\n                    if (int >= 0 && int <= 5) {\\n                        return true;\\n                    } else {\\n                        return `0${char}`;\\n                    }\\n                }\\n\\n                if (strLen >= 2 && int >= 0 && int <= 59) {\\n                    return true;\\n                }\\n                break;\\n        }\\n    }\\n\\n    return false;\\n}\\n\\nexport function stringFromCharCode(keyCode: number): string {\\n    const charCode = keyCode - 48 * Math.floor(keyCode / 48);\\n\\n    return String.fromCharCode(96 <= keyCode ? charCode : keyCode);\\n}\\n\\nexport function formatNumber(number: Number): string {\\n    if (number <= 1) {\\n        return '01';\\n    }\\n\\n    if (number <= 9) {\\n        return `0${number}`;\\n    }\\n\\n    return String(number);\\n}\\n\\nexport function splitDate(date: Date, format: string): string[] {\\n    return moment(date)\\n        .format(format)\\n        .split(formatSplit);\\n}\\n\\nexport function joinDates(\\n    parts: (string | HTMLElement)[],\\n    format: string\\n): string {\\n    const strParts = parts\\n        .map(part => (part instanceof HTMLElement ? part.innerText : part))\\n        .filter(val => val);\\n    const splittedFormat = format.split(formatSplit);\\n\\n    if (strParts.length !== splittedFormat.length) {\\n        return '';\\n    }\\n\\n    const date = strParts.join(' ');\\n    const spaceFormat = splittedFormat.join(' ');\\n    const momentDate = moment(date, spaceFormat);\\n    const parsingFlags = momentDate.parsingFlags();\\n\\n    switch (parsingFlags.overflow) {\\n        case 2:\\n            return moment(\\n                // @ts-ignore\\n                new Date(...parsingFlags.parsedDateParts)\\n            ).format(format);\\n    }\\n\\n    return momentDate.format(format);\\n}\\n\\nexport function clearSelection(): void {\\n    const sel = getSelection();\\n\\n    if (sel.empty) {\\n        // Chrome\\n        sel.empty();\\n    } else if (sel.removeAllRanges) {\\n        // Firefox\\n        sel.removeAllRanges();\\n    }\\n}\\n\\nexport function getWeekOfYear(date: Date): number {\\n    return moment(date).isoWeek();\\n}\\n\\nexport function startOfWeek(date: Date): Date {\\n    return moment(date)\\n        .startOf('isoWeek')\\n        .toDate();\\n}\\n\\nexport function endOfWeek(date: Date): Date {\\n    return moment(date)\\n        .endOf('isoWeek')\\n        .toDate();\\n}\\n\\nexport function startOfDay(date: Date): Date {\\n    const newDate = new Date(date);\\n\\n    newDate.setHours(0, 0, 0, 0);\\n\\n    return newDate;\\n}\\n\\nexport function endOfDay(date: Date): Date {\\n    const newDate = new Date(date);\\n\\n    newDate.setHours(23, 59, 59, 999);\\n\\n    return newDate;\\n}\\n\\nexport function addDays(date: Date, num: number): Date {\\n    return moment(date)\\n        .add(num, 'days')\\n        .toDate();\\n}\\n\\nexport function addMonths(date: Date, num: number): Date {\\n    return moment(date)\\n        .add(num, 'months')\\n        .toDate();\\n}\\n\\nexport function addYears(date: Date, num: number): Date {\\n    return moment(date)\\n        .add(num, 'years')\\n        .toDate();\\n}\\n\\nexport function addHours(date: Date, num: number): Date {\\n    return moment(date)\\n        .add(num, 'hours')\\n        .toDate();\\n}\\n\\nexport function addMinutes(date: Date, num: number): Date {\\n    return moment(date)\\n        .add(num, 'minutes')\\n        .toDate();\\n}\\n\\nexport function addSeconds(date: Date, num: number): Date {\\n    return moment(date)\\n        .add(num, 'seconds')\\n        .toDate();\\n}\\n\\nexport function subtractSeconds(date: Date, num: number): Date {\\n    return moment(date)\\n        .subtract(num, 'seconds')\\n        .toDate();\\n}\\n\\nexport function subtractMinutes(date: Date, num: number): Date {\\n    return moment(date)\\n        .subtract(num, 'minutes')\\n        .toDate();\\n}\\n\\nexport function subtractHours(date: Date, num: number): Date {\\n    return moment(date)\\n        .subtract(num, 'hours')\\n        .toDate();\\n}\\n\\nexport function subtractDays(date: Date, num: number): Date {\\n    return moment(date)\\n        .subtract(num, 'days')\\n        .toDate();\\n}\\n\\nexport function subtractMonths(date: Date, num: number): Date {\\n    return moment(date)\\n        .subtract(num, 'months')\\n        .toDate();\\n}\\n\\nexport function subtractYears(date: Date, num: number): Date {\\n    return moment(date)\\n        .subtract(num, 'years')\\n        .toDate();\\n}\\n\\nexport function manipulateDate(\\n    date: Date,\\n    formatType: FormatType,\\n    direction: 'add' | 'subtract'\\n): Date {\\n    switch (formatType) {\\n        case 'day':\\n            if (direction === 'add') return addDays(date, 1);\\n            if (direction === 'subtract') return subtractDays(date, 1);\\n            break;\\n        case 'month':\\n            if (direction === 'add') return addMonths(date, 1);\\n            if (direction === 'subtract') return subtractMonths(date, 1);\\n            break;\\n        case 'year':\\n            if (direction === 'add') return addYears(date, 1);\\n            if (direction === 'subtract') return subtractYears(date, 1);\\n            break;\\n        case 'hour':\\n            if (direction === 'add') return addHours(date, 1);\\n            if (direction === 'subtract') return subtractHours(date, 1);\\n            break;\\n        case 'minute':\\n            if (direction === 'add') return addMinutes(date, 1);\\n            if (direction === 'subtract') return subtractMinutes(date, 1);\\n            break;\\n        case 'second':\\n            if (direction === 'add') return addSeconds(date, 1);\\n            if (direction === 'subtract') return subtractSeconds(date, 1);\\n            break;\\n    }\\n\\n    return new Date();\\n}\\n\\nexport function startOfMonth(date: Date): Date {\\n    const newDate = new Date(date);\\n\\n    newDate.setDate(1);\\n    newDate.setHours(0, 0, 0, 0);\\n\\n    return newDate;\\n}\\n\\nexport function endOfMonth(date: Date): Date {\\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\\n}\\n\\nexport function isUndefined(val): val is undefined {\\n    return val === null || val === undefined;\\n}\\n\\nexport function setDate(date: Date, hour: number, min?: number): Date {\\n    const newDate = new Date(date);\\n\\n    newDate.setHours(hour, min);\\n\\n    return newDate;\\n}\\n\\nexport function isToday(date: Date): boolean {\\n    return moment(date).isSame(new Date(), 'day');\\n}\\n\\nexport function getMonthNames(short?: boolean): string[] {\\n    if (short) {\\n        return moment.monthsShort();\\n    }\\n\\n    return moment.months();\\n}\\n\\nexport function isDisabled(\\n    date: Date,\\n    { minDate, maxDate }: { minDate?: Date; maxDate?: Date }\\n): boolean | undefined {\\n    return (\\n        (minDate && date < startOfDay(minDate)) ||\\n        (maxDate && date >= endOfDay(maxDate))\\n    );\\n}\\n\\nexport function getAttribute(input: Element, attr: string): string {\\n    return input.getAttribute(attr)!;\\n}\\n\\nexport const keys = {\\n    ARROW_UP: 38,\\n    ARROW_RIGHT: 39,\\n    ARROW_DOWN: 40,\\n    ARROW_LEFT: 37,\\n    ENTER: 13,\\n    TAB: 9,\\n    ESC: 27,\\n    BACKSPACE: 8,\\n    DELETE: 46,\\n    SPACE: 32,\\n    A: 65\\n};\\n\"]}",
headerContent: undefined,
mtime: 1532271505000,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
