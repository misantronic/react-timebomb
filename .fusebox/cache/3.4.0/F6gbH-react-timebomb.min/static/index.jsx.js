module.exports = { contents: "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a, _b, _c;\n\"use strict\";\nconst lodash_decorators_1 = require(\"lodash-decorators\");\nconst React = require(\"react\");\nconst styled_components_1 = require(\"styled-components\");\nconst react_slct_1 = require(\"react-slct\");\nconst menu_1 = require(\"./menu\");\nconst menu_title_1 = require(\"./menu-title\");\nconst value_1 = require(\"./value\");\nconst utils_1 = require(\"./utils\");\nconst typings_1 = require(\"./typings\");\nexports.ReactTimebombProps = typings_1.ReactTimebombProps;\nexports.ReactTimebombState = typings_1.ReactTimebombState;\nexports.ReactTimebombError = typings_1.ReactTimebombError;\nconst DEFAULT_FORMAT = 'YYYY-MM-DD';\nconst Container = styled_components_1.default.div `\n    width: 100%;\n    position: relative;\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 13px;\n    position: relative;\n`;\nconst MenuWrapper = styled_components_1.default.div `\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    border: 1px solid #ccc;\n    box-sizing: border-box;\n    padding: 10px;\n    background: white;\n    z-index: 1;\n    max-height: ${(props) => props.menuHeight};\n    overflow: auto;\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 13px;\n`;\nconst BlindInput = styled_components_1.default.input `\n    position: absolute;\n    opacity: 0;\n`;\nclass ReactTimebomb extends React.Component {\n    constructor(props) {\n        super(props);\n        const { value, format = DEFAULT_FORMAT } = this.props;\n        this.state = {\n            allowValidation: false,\n            mode: 'month',\n            valueText: value ? utils_1.dateFormat(value, format) : undefined,\n            date: value || utils_1.startOfDay(new Date())\n        };\n    }\n    static getDerivedStateFromProps(props) {\n        return {\n            showTime: Boolean(props.format && /H|h|m|k|a|S|s/.test(props.format))\n        };\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { valueText } = this.state;\n        const { value, format = DEFAULT_FORMAT } = this.props;\n        if (prevProps.format !== format) {\n            this.setState({\n                valueText: value ? utils_1.dateFormat(value, format) : undefined\n            });\n        }\n        if (prevState.valueText !== valueText) {\n            this.valueTextDidUpdate();\n        }\n    }\n    valueTextDidUpdate() {\n        const { valueText, allowValidation } = this.state;\n        const { format = DEFAULT_FORMAT } = this.props;\n        const validDate = utils_1.validateDate(valueText, format);\n        if (validDate) {\n            this.setState({ allowValidation: true }, () => {\n                const disabled = utils_1.isDisabled(validDate, this.props);\n                if (disabled) {\n                    this.emitError('outOfRange', valueText);\n                }\n                else {\n                    this.setState({ date: validDate }, () => this.emitChange(validDate));\n                }\n            });\n        }\n        else if (valueText) {\n            this.emitError('invalidDate', valueText);\n        }\n        else if (!utils_1.isUndefined(valueText) && allowValidation) {\n            this.emitChange(undefined);\n        }\n    }\n    render() {\n        const { minDate, maxDate, value, placeholder, menuWidth, showConfirm, showCalendarWeek, selectWeek, format = DEFAULT_FORMAT } = this.props;\n        const { showTime, valueText, allowValidation } = this.state;\n        const menuHeight = 260;\n        return (React.createElement(react_slct_1.Select, { value: value, placeholder: placeholder }, ({ placeholder, open, onToggle, MenuContainer }) => (React.createElement(Container, { className: \"react-timebomb\" },\n            open ? (React.createElement(MenuContainer, { menuWidth: menuWidth, menuHeight: menuHeight },\n                React.createElement(MenuWrapper, { menuHeight: menuHeight },\n                    React.createElement(menu_title_1.MenuTitle, { date: this.state.date, minDate: minDate, maxDate: maxDate, onMonths: this.onModeMonths, onYear: this.onModeYear, onNextMonth: this.onNextMonth, onPrevMonth: this.onPrevMonth, onToday: this.onToday }),\n                    React.createElement(menu_1.Menu, { showTime: showTime, showConfirm: showConfirm, showCalendarWeek: showCalendarWeek, selectWeek: selectWeek, date: this.state.date, value: value, valueText: valueText, format: format, mode: this.state.mode, minDate: minDate, maxDate: maxDate, onSelectDay: this.onSelectDay, onSelectMonth: this.onSelectMonth, onSelectYear: this.onSelectYear, onSelectTime: this.onSelectTime, onToggle: onToggle, onSubmit: this.onValueSubmit })))) : (React.createElement(React.Fragment, null,\n                this.onClose(),\n                React.createElement(BlindInput, { type: \"text\", onFocus: onToggle }))),\n            React.createElement(value_1.Value, { placeholder: open ? undefined : placeholder, format: format, value: value, valueText: valueText, minDate: minDate, maxDate: maxDate, allowValidation: allowValidation, open: open, onChangeValueText: this.onChangeValueText, onToggle: onToggle, onSubmit: this.onValueSubmit })))));\n    }\n    onClose() {\n        utils_1.clearSelection();\n        setTimeout(() => {\n            const { format = DEFAULT_FORMAT } = this.props;\n            const validDate = utils_1.validateDate(this.state.valueText, format);\n            const isValid = validDate\n                ? !utils_1.isDisabled(validDate, this.props)\n                : validDate;\n            if (!isValid && this.props.value) {\n                const formattedDate = utils_1.dateFormat(this.props.value, format);\n                if (this.state.valueText !== formattedDate) {\n                    this.setState({ valueText: formattedDate });\n                }\n            }\n        }, 0);\n        return null;\n    }\n    emitError(error, value) {\n        if (this.props.onError && this.state.allowValidation) {\n            this.props.onError(error, value);\n        }\n    }\n    emitChange(date) {\n        const { value } = this.props;\n        if (value && date && value.getTime() === date.getTime()) {\n            return;\n        }\n        this.props.onChange(date);\n        this.setState({ allowValidation: Boolean(date) });\n    }\n    onChangeValueText(valueText) {\n        this.setState({ valueText });\n    }\n    onValueSubmit(onToggle) {\n        onToggle();\n        utils_1.clearSelection();\n    }\n    onSelectDay(day) {\n        const { value, format = DEFAULT_FORMAT } = this.props;\n        let date = new Date(day);\n        if (value) {\n            date = utils_1.setDate(day, value.getHours(), value.getMinutes());\n        }\n        const valueText = utils_1.dateFormat(date, format);\n        this.setState({ date, valueText }, () => this.emitChange(date));\n    }\n    onModeYear() {\n        this.setState({ mode: 'year' });\n    }\n    onModeMonths() {\n        this.setState({ mode: 'months' });\n    }\n    onSelectMonth(date) {\n        this.setState({ date, mode: 'month' });\n    }\n    onSelectYear(date) {\n        this.setState({ date, mode: 'months' });\n    }\n    onToday() {\n        const now = utils_1.startOfDay(new Date());\n        this.setState({ date: now });\n    }\n    onNextMonth() {\n        const date = new Date(this.state.date);\n        date.setMonth(date.getMonth() + 1);\n        this.setState({ date });\n    }\n    onPrevMonth() {\n        const date = new Date(this.state.date);\n        date.setMonth(date.getMonth() - 1);\n        this.setState({ date });\n    }\n    onSelectTime(time) {\n        const { format = DEFAULT_FORMAT } = this.props;\n        const value = this.props.value || new Date('1970-01-01');\n        if (!time) {\n            this.emitChange(utils_1.startOfDay(value));\n        }\n        else {\n            const splitted = time.split(':');\n            const newDate = utils_1.setDate(value, parseInt(splitted[0], 10), parseInt(splitted[1], 10));\n            const valueText = utils_1.dateFormat(newDate, format);\n            this.setState({ valueText }, () => this.emitChange(newDate));\n        }\n    }\n}\ntslib_1.__decorate([\n    lodash_decorators_1.bind,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [String]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], ReactTimebomb.prototype, \"onChangeValueText\", null);\ntslib_1.__decorate([\n    lodash_decorators_1.bind,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Function]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], ReactTimebomb.prototype, \"onValueSubmit\", null);\ntslib_1.__decorate([\n    lodash_decorators_1.bind,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof Date !== \"undefined\" && Date) === \"function\" && _a || Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], ReactTimebomb.prototype, \"onSelectDay\", null);\ntslib_1.__decorate([\n    lodash_decorators_1.bind,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", []),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], ReactTimebomb.prototype, \"onModeYear\", null);\ntslib_1.__decorate([\n    lodash_decorators_1.bind,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", []),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], ReactTimebomb.prototype, \"onModeMonths\", null);\ntslib_1.__decorate([\n    lodash_decorators_1.bind,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_b = typeof Date !== \"undefined\" && Date) === \"function\" && _b || Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], ReactTimebomb.prototype, \"onSelectMonth\", null);\ntslib_1.__decorate([\n    lodash_decorators_1.bind,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_c = typeof Date !== \"undefined\" && Date) === \"function\" && _c || Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], ReactTimebomb.prototype, \"onSelectYear\", null);\ntslib_1.__decorate([\n    lodash_decorators_1.bind,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", []),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], ReactTimebomb.prototype, \"onToday\", null);\ntslib_1.__decorate([\n    lodash_decorators_1.bind,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", []),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], ReactTimebomb.prototype, \"onNextMonth\", null);\ntslib_1.__decorate([\n    lodash_decorators_1.bind,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", []),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], ReactTimebomb.prototype, \"onPrevMonth\", null);\ntslib_1.__decorate([\n    lodash_decorators_1.bind,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [String]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], ReactTimebomb.prototype, \"onSelectTime\", null);\nexports.ReactTimebomb = ReactTimebomb;\n//# sourceMappingURL=index.js.map",
dependencies: ["tslib","lodash-decorators","react","styled-components","react-slct","./menu","./menu-title","./value","./utils","./typings"],
sourceMap: "{\"version\":3,\"file\":\"index.jsx\",\"sourceRoot\":\"\",\"sources\":[\"/src/index.tsx\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"import { bind } from 'lodash-decorators';\\nimport * as React from 'react';\\nimport styled from 'styled-components';\\nimport { Select } from 'react-slct';\\nimport { Menu } from './menu';\\nimport { MenuTitle } from './menu-title';\\nimport { Value } from './value';\\nimport {\\n    isUndefined,\\n    startOfDay,\\n    isDisabled,\\n    dateFormat,\\n    validateDate,\\n    setDate,\\n    clearSelection\\n} from './utils';\\nimport {\\n    ReactTimebombProps,\\n    ReactTimebombState,\\n    ReactTimebombError\\n} from './typings';\\n\\nexport { ReactTimebombProps, ReactTimebombState, ReactTimebombError };\\n\\nconst DEFAULT_FORMAT = 'YYYY-MM-DD';\\n\\nconst Container = styled.div`\\n    width: 100%;\\n    position: relative;\\n    font-family: Arial, Helvetica, sans-serif;\\n    font-size: 13px;\\n    position: relative;\\n`;\\n\\nconst MenuWrapper = styled.div`\\n    display: flex;\\n    width: 100%;\\n    flex-direction: column;\\n    border: 1px solid #ccc;\\n    box-sizing: border-box;\\n    padding: 10px;\\n    background: white;\\n    z-index: 1;\\n    max-height: ${(props: { menuHeight: number }) => props.menuHeight};\\n    overflow: auto;\\n    font-family: Arial, Helvetica, sans-serif;\\n    font-size: 13px;\\n`;\\n\\nconst BlindInput = styled.input`\\n    position: absolute;\\n    opacity: 0;\\n`;\\n\\nexport class ReactTimebomb extends React.Component<\\n    ReactTimebombProps,\\n    ReactTimebombState\\n> {\\n    public static getDerivedStateFromProps(\\n        props: ReactTimebombProps\\n    ): Partial<ReactTimebombState> | null {\\n        return {\\n            showTime: Boolean(\\n                props.format && /H|h|m|k|a|S|s/.test(props.format)\\n            )\\n        };\\n    }\\n\\n    constructor(props) {\\n        super(props);\\n\\n        const { value, format = DEFAULT_FORMAT } = this.props;\\n\\n        this.state = {\\n            allowValidation: false,\\n            mode: 'month',\\n            valueText: value ? dateFormat(value, format) : undefined,\\n            date: value || startOfDay(new Date())\\n        };\\n    }\\n\\n    public componentDidUpdate(\\n        prevProps: ReactTimebombProps,\\n        prevState: ReactTimebombState\\n    ): void {\\n        const { valueText } = this.state;\\n        const { value, format = DEFAULT_FORMAT } = this.props;\\n\\n        if (prevProps.format !== format) {\\n            this.setState({\\n                valueText: value ? dateFormat(value, format) : undefined\\n            });\\n        }\\n\\n        if (prevState.valueText !== valueText) {\\n            this.valueTextDidUpdate();\\n        }\\n    }\\n\\n    private valueTextDidUpdate(): void {\\n        const { valueText, allowValidation } = this.state;\\n        const { format = DEFAULT_FORMAT } = this.props;\\n        const validDate = validateDate(valueText, format);\\n\\n        if (validDate) {\\n            this.setState({ allowValidation: true }, () => {\\n                const disabled = isDisabled(validDate, this.props);\\n\\n                if (disabled) {\\n                    this.emitError('outOfRange', valueText!);\\n                } else {\\n                    this.setState({ date: validDate }, () =>\\n                        this.emitChange(validDate)\\n                    );\\n                }\\n            });\\n        } else if (valueText) {\\n            this.emitError('invalidDate', valueText);\\n        } else if (!isUndefined(valueText) && allowValidation) {\\n            this.emitChange(undefined);\\n        }\\n    }\\n\\n    public render(): React.ReactNode {\\n        const {\\n            minDate,\\n            maxDate,\\n            value,\\n            placeholder,\\n            menuWidth,\\n            showConfirm,\\n            showCalendarWeek,\\n            selectWeek,\\n            format = DEFAULT_FORMAT\\n        } = this.props;\\n        const { showTime, valueText, allowValidation } = this.state;\\n        const menuHeight = 260;\\n\\n        return (\\n            <Select<Date> value={value} placeholder={placeholder}>\\n                {({ placeholder, open, onToggle, MenuContainer }) => (\\n                    <Container className=\\\"react-timebomb\\\">\\n                        {open ? (\\n                            <MenuContainer\\n                                menuWidth={menuWidth}\\n                                menuHeight={menuHeight}\\n                            >\\n                                <MenuWrapper menuHeight={menuHeight}>\\n                                    <MenuTitle\\n                                        date={this.state.date}\\n                                        minDate={minDate}\\n                                        maxDate={maxDate}\\n                                        onMonths={this.onModeMonths}\\n                                        onYear={this.onModeYear}\\n                                        onNextMonth={this.onNextMonth}\\n                                        onPrevMonth={this.onPrevMonth}\\n                                        onToday={this.onToday}\\n                                    />\\n                                    <Menu\\n                                        showTime={showTime}\\n                                        showConfirm={showConfirm}\\n                                        showCalendarWeek={showCalendarWeek}\\n                                        selectWeek={selectWeek}\\n                                        date={this.state.date}\\n                                        value={value}\\n                                        valueText={valueText}\\n                                        format={format}\\n                                        mode={this.state.mode}\\n                                        minDate={minDate}\\n                                        maxDate={maxDate}\\n                                        onSelectDay={this.onSelectDay}\\n                                        onSelectMonth={this.onSelectMonth}\\n                                        onSelectYear={this.onSelectYear}\\n                                        onSelectTime={this.onSelectTime}\\n                                        onToggle={onToggle}\\n                                        onSubmit={this.onValueSubmit}\\n                                    />\\n                                </MenuWrapper>\\n                            </MenuContainer>\\n                        ) : (\\n                            <>\\n                                {this.onClose()}\\n                                <BlindInput type=\\\"text\\\" onFocus={onToggle} />\\n                            </>\\n                        )}\\n                        <Value\\n                            placeholder={open ? undefined : placeholder}\\n                            format={format}\\n                            value={value}\\n                            valueText={valueText}\\n                            minDate={minDate}\\n                            maxDate={maxDate}\\n                            allowValidation={allowValidation}\\n                            open={open}\\n                            onChangeValueText={this.onChangeValueText}\\n                            onToggle={onToggle}\\n                            onSubmit={this.onValueSubmit}\\n                        />\\n                    </Container>\\n                )}\\n            </Select>\\n        );\\n    }\\n\\n    private onClose(): null {\\n        clearSelection();\\n\\n        setTimeout(() => {\\n            const { format = DEFAULT_FORMAT } = this.props;\\n            const validDate = validateDate(this.state.valueText, format);\\n            const isValid = validDate\\n                ? !isDisabled(validDate, this.props)\\n                : validDate;\\n\\n            if (!isValid && this.props.value) {\\n                const formattedDate = dateFormat(this.props.value, format);\\n\\n                if (this.state.valueText !== formattedDate) {\\n                    this.setState({ valueText: formattedDate });\\n                }\\n            }\\n        }, 0);\\n\\n        return null;\\n    }\\n\\n    private emitError(error: ReactTimebombError, value: string): void {\\n        if (this.props.onError && this.state.allowValidation) {\\n            this.props.onError(error, value);\\n        }\\n    }\\n\\n    private emitChange(date?: Date): void {\\n        const { value } = this.props;\\n\\n        if (value && date && value.getTime() === date.getTime()) {\\n            return;\\n        }\\n\\n        this.props.onChange(date);\\n\\n        this.setState({ allowValidation: Boolean(date) });\\n    }\\n\\n    @bind\\n    private onChangeValueText(valueText: string): void {\\n        this.setState({ valueText });\\n    }\\n\\n    @bind\\n    private onValueSubmit(onToggle: () => void): void {\\n        onToggle();\\n        clearSelection();\\n    }\\n\\n    @bind\\n    private onSelectDay(day: Date): void {\\n        const { value, format = DEFAULT_FORMAT } = this.props;\\n        let date = new Date(day);\\n\\n        if (value) {\\n            date = setDate(day, value.getHours(), value.getMinutes());\\n        }\\n\\n        const valueText = dateFormat(date, format);\\n\\n        this.setState({ date, valueText }, () => this.emitChange(date));\\n    }\\n\\n    @bind\\n    private onModeYear() {\\n        this.setState({ mode: 'year' });\\n    }\\n\\n    @bind\\n    private onModeMonths() {\\n        this.setState({ mode: 'months' });\\n    }\\n\\n    @bind\\n    private onSelectMonth(date: Date) {\\n        this.setState({ date, mode: 'month' });\\n    }\\n\\n    @bind\\n    private onSelectYear(date: Date) {\\n        this.setState({ date, mode: 'months' });\\n    }\\n\\n    @bind\\n    private onToday(): void {\\n        const now = startOfDay(new Date());\\n\\n        this.setState({ date: now });\\n    }\\n\\n    @bind\\n    private onNextMonth(): void {\\n        const date = new Date(this.state.date);\\n\\n        date.setMonth(date.getMonth() + 1);\\n\\n        this.setState({ date });\\n    }\\n\\n    @bind\\n    private onPrevMonth(): void {\\n        const date = new Date(this.state.date);\\n\\n        date.setMonth(date.getMonth() - 1);\\n\\n        this.setState({ date });\\n    }\\n\\n    @bind\\n    private onSelectTime(time: string): void {\\n        const { format = DEFAULT_FORMAT } = this.props;\\n        const value = this.props.value || new Date('1970-01-01');\\n\\n        if (!time) {\\n            this.emitChange(startOfDay(value));\\n        } else {\\n            const splitted = time.split(':');\\n            const newDate = setDate(\\n                value,\\n                parseInt(splitted[0], 10),\\n                parseInt(splitted[1], 10)\\n            );\\n\\n            const valueText = dateFormat(newDate, format);\\n\\n            this.setState({ valueText }, () => this.emitChange(newDate));\\n        }\\n    }\\n}\\n\"]}",
headerContent: undefined,
mtime: 1532220128000,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
