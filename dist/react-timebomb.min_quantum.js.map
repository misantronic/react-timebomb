{"version":3,"sources":["src/index.tsx","src/menu.tsx","src/utils.ts","src/menu-day.tsx","src/menu-title.tsx","src/value.tsx","src/value-multi.tsx"],"names":["React","$fsx","r","styled_components_1","react_slct_1","menu_1","menu_title_1","value_1","utils_1","typings_1","exports","ReactTimebombProps","ReactTimebombState","ReactTimebombError","value_multi_1","Container","default","div","MenuWrapper","props","menuHeight","BlindInput","input","ReactTimebomb","Component","[object Object]","super","minDate","maxDate","selectRange","showConfirm","isBefore","Error","this","state","initialState","onChangeValueText","bind","onValueSubmit","onSelectDay","onModeYear","onModeMonths","onSelectMonth","onSelectYear","onReset","onNextMonth","onPrevMonth","onSelectTime","onClose","onClear","showTime","Boolean","test","format","className","classNames","push","error","join","defaultDateValue","value","date","Date","isAfter","startOfDay","allowValidation","mode","valueText","dateFormat","undefined","prevProps","prevState","setState","valueTextDidUpdate","commit","validDate","validateDate","Array","isArray","every","d","isEnabled","emitChange","emitError","isUndefined","placeholder","menuWidth","showCalendarWeek","selectWeek","MENU_HEIGHT","endOfDay","createElement","Select","open","onToggle","onRef","MenuContainer","ref","renderValue","Math","max","MENU_WIDTH","MenuTitle","onMonths","onYear","Menu","onSubmit","type","onFocus","multiValue","ValueMulti","Value","clearSelection","setTimeout","onError","onChange","dateEqual","day","valueDate","startOfWeek","endOfWeek","setDate","getHours","getMinutes","dateArr","length","sort","a","b","getTime","currentDate","setMonth","getMonth","time","splitted","split","newDate","map","parseInt","v","defaultProps","button_1","menu_day_1","MonthAndYearContainer","MonthsContainer","MonthContainer","YearContainer","Confirm","Table","table","css","PureComponent","monthMatrixCache","Map","now","monthMatrix","getDate","dateMonth","dateYear","getFullYear","cacheKey","cached","get","weeks","base","startOfMonth","week","weekStart","addDays","set","fullYears","year","currentYear","fill","_","i","setFullYear","enabled","selected","filter","obj","reverse","minYear","array","renderMenuMonths","renderMenuYear","renderMonth","renderConfirm","onYearContainer","fullYear","dateStr","toISOString","Button","key","tabIndex","data-date","onClick","months","getMonthNames","month","str","disabled","cellSpacing","cellPadding","dates","weekNum","getWeekOfYear","WeekDay","Day","isValid","e","getAttribute","currentTarget","el","querySelector","scrollIntoView","scrollBy","top","moment_1","momentImport","moment","formatSplit","getFormatType","num","add","toDate","instance","validateFormatGroup","isFinite","int","char","String","strLen","startsWith","stringFromCharCode","keyCode","charCode","floor","fromCharCode","formatNumber","number","splitDate","joinDates","parts","strParts","part","HTMLElement","innerText","val","splittedFormat","spaceFormat","momentDate","parsingFlags","overflow","parsedDateParts","sel","getSelection","empty","removeAllRanges","isoWeek","startOf","endOf","setHours","subtractDays","manipulateDate","subtract","isSame","inp","dateA","dateB","isSameOrAfter","context","attr","keys","ARROW_UP","ARROW_RIGHT","ARROW_DOWN","ARROW_LEFT","ENTER","TAB","ESC","BACKSPACE","DELETE","SPACE","SHIFT","A","Flex","StyledDay","current","today","dayWeekOfYear","some","dayMonth","isToday","updateState","dayChanged","minMaxChanged","children","show","prevDisabled","firstDate","nextDisabled","lastDate","endOfMonth","Input","span","ArrowButton","ClearButton","Placeholder","Icon","WHITELIST_KEYS","searchInputs","onSearchRef","onKeyDown","onKeyUp","onBlur","formatGroups","reduce","memo","prevChar","substr","focused","document","forEach","focus","selectText","showPlaceholder","data-role","group","separator","contentEditable","data-placeholder","data-separator","data-group","data-react-timebomb-selectable","range","createRange","selectNodeContents","addRange","nextSibling","previousSibling","hasSelection","focusOffset","baseOffset","numericValue","preventDefault","HTMLSpanElement","isArrowUp","isNaN","formatGroup","formatType","direction","dateParts","nextValue","valid","dataValue","dataGroup","groupValue","includes","metaKey","ctrlKey","blur","forbiddenKeys","setAttribute","target","fillZero","stopPropagation"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { Select } from 'react-slct';\nimport { Menu } from './menu';\nimport { MenuTitle } from './menu-title';\nimport { Value } from './value';\nimport {\n    isUndefined,\n    startOfDay,\n    isEnabled,\n    dateFormat,\n    validateDate,\n    setDate,\n    clearSelection,\n    endOfDay,\n    isBefore,\n    isAfter,\n    dateEqual,\n    startOfWeek,\n    endOfWeek\n} from './utils';\nimport {\n    ReactTimebombProps,\n    ReactTimebombState,\n    ReactTimebombError,\n    ReactTimebombDate\n} from './typings';\nimport { ValueMulti } from './value-multi';\n\nexport { ReactTimebombProps, ReactTimebombState, ReactTimebombError };\n\nconst Container = styled.div`\n    width: 100%;\n    position: relative;\n`;\n\nconst MenuWrapper = styled.div`\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    border: 1px solid #ccc;\n    box-sizing: border-box;\n    padding: 0;\n    background: white;\n    z-index: 1;\n    max-height: ${(props: { menuHeight: number }) => props.menuHeight}px;\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 13px;\n`;\n\nconst BlindInput = styled.input`\n    position: absolute;\n    left: 0;\n    top: 0;\n    opacity: 0;\n    pointer-events: none;\n`;\n\nexport class ReactTimebomb extends React.Component<\n    ReactTimebombProps,\n    ReactTimebombState\n> {\n    public static MENU_WIDTH = 320;\n    public static MENU_HEIGHT = 320;\n\n    private onToggle?: () => void;\n\n    /** @internal */\n    public static getDerivedStateFromProps(\n        props: ReactTimebombProps\n    ): Partial<ReactTimebombState> | null {\n        return {\n            showTime: Boolean(/H|h|m|k|a|S|s/.test(props.format!))\n        };\n    }\n\n    /** @internal */\n    public static defaultProps: Partial<ReactTimebombProps> = {\n        format: 'YYYY-MM-DD'\n    };\n\n    private get className() {\n        const classNames = ['react-timebomb'];\n\n        if (this.props.className) {\n            classNames.push(this.props.className);\n        }\n\n        if (this.props.error) {\n            classNames.push('error');\n        }\n\n        return classNames.join(' ');\n    }\n\n    private get defaultDateValue() {\n        const { value, minDate, maxDate } = this.props;\n\n        if (value) {\n            return value;\n        }\n\n        let date = new Date();\n\n        if (maxDate && isBefore(maxDate, date)) {\n            date = maxDate;\n        } else if (minDate && isAfter(minDate, date)) {\n            date = minDate;\n        }\n\n        return startOfDay(date);\n    }\n\n    private get initialState(): ReactTimebombState {\n        return {\n            allowValidation: false,\n            mode: 'month',\n            valueText: this.props.value\n                ? dateFormat(this.props.value, this.props.format!)\n                : undefined,\n            date: this.defaultDateValue\n        };\n    }\n\n    constructor(props: ReactTimebombProps) {\n        super(props);\n\n        const { minDate, maxDate, selectRange, showConfirm } = props;\n\n        if (minDate && maxDate && isBefore(maxDate, minDate)) {\n            throw new Error('minDate must appear before maxDate');\n        }\n\n        if (selectRange && !showConfirm) {\n            throw new Error(\n                'when using `selectRange` please also set `showConfirm`'\n            );\n        }\n\n        this.state = this.initialState;\n\n        this.onChangeValueText = this.onChangeValueText.bind(this);\n        this.onValueSubmit = this.onValueSubmit.bind(this);\n        this.onSelectDay = this.onSelectDay.bind(this);\n        this.onModeYear = this.onModeYear.bind(this);\n        this.onModeMonths = this.onModeMonths.bind(this);\n        this.onSelectMonth = this.onSelectMonth.bind(this);\n        this.onSelectYear = this.onSelectYear.bind(this);\n        this.onReset = this.onReset.bind(this);\n        this.onNextMonth = this.onNextMonth.bind(this);\n        this.onPrevMonth = this.onPrevMonth.bind(this);\n        this.onSelectTime = this.onSelectTime.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.onClear = this.onClear.bind(this);\n    }\n\n    public componentDidUpdate(\n        prevProps: ReactTimebombProps,\n        prevState: ReactTimebombState\n    ): void {\n        const { valueText } = this.state;\n        const { value, format } = this.props;\n\n        if (prevProps.format !== format) {\n            this.setState({\n                valueText: value ? dateFormat(value, format!) : undefined\n            });\n        }\n\n        if (prevState.valueText !== valueText) {\n            this.valueTextDidUpdate(false);\n        }\n    }\n\n    private valueTextDidUpdate(commit: boolean): void {\n        const { valueText, allowValidation } = this.state;\n        const { format } = this.props;\n        const validDate = validateDate(valueText, format!);\n\n        if (validDate) {\n            this.setState({ allowValidation: true }, () => {\n                const enabled = Array.isArray(validDate)\n                    ? validDate.every(d => isEnabled('day', d, this.props))\n                    : isEnabled('day', validDate, this.props);\n\n                if (enabled) {\n                    this.setState({ date: validDate }, () =>\n                        this.emitChange(validDate, commit)\n                    );\n                } else {\n                    this.emitError('outOfRange', valueText!);\n                }\n            });\n        } else if (valueText) {\n            this.emitError('invalidDate', valueText);\n        } else if (!isUndefined(valueText) && allowValidation) {\n            this.emitChange(undefined, commit);\n        }\n    }\n\n    public render(): React.ReactNode {\n        const {\n            placeholder,\n            menuWidth,\n            showConfirm,\n            showCalendarWeek,\n            selectWeek,\n            format,\n            error\n        } = this.props;\n        const { showTime, valueText, mode } = this.state;\n        const menuHeight = ReactTimebomb.MENU_HEIGHT;\n        const minDate = this.props.minDate\n            ? startOfDay(this.props.minDate)\n            : undefined;\n        const maxDate = this.props.maxDate\n            ? endOfDay(this.props.maxDate)\n            : undefined;\n        const value = valueText\n            ? validateDate(valueText, format!)\n            : this.props.value;\n\n        return (\n            <Select<ReactTimebombDate>\n                value={value}\n                placeholder={placeholder}\n                error={error}\n                onClose={this.onClose}\n            >\n                {({ placeholder, open, onToggle, onRef, MenuContainer }) => {\n                    this.onToggle = onToggle;\n\n                    return (\n                        <Container ref={onRef} className={this.className}>\n                            {this.renderValue(value, placeholder, open)}\n                            {open ? (\n                                <MenuContainer\n                                    menuWidth={Math.max(\n                                        ReactTimebomb.MENU_WIDTH,\n                                        menuWidth || 0\n                                    )}\n                                    menuHeight={menuHeight}\n                                >\n                                    <MenuWrapper\n                                        className=\"react-timebomb-menu\"\n                                        menuHeight={menuHeight}\n                                    >\n                                        <MenuTitle\n                                            mode={mode}\n                                            date={this.state.date}\n                                            minDate={minDate}\n                                            maxDate={maxDate}\n                                            onMonths={this.onModeMonths}\n                                            onYear={this.onModeYear}\n                                            onNextMonth={this.onNextMonth}\n                                            onPrevMonth={this.onPrevMonth}\n                                            onReset={this.onReset}\n                                        />\n                                        <Menu\n                                            showTime={showTime}\n                                            showConfirm={showConfirm}\n                                            showCalendarWeek={showCalendarWeek}\n                                            selectWeek={selectWeek}\n                                            date={this.state.date}\n                                            value={value}\n                                            valueText={valueText}\n                                            format={format!}\n                                            mode={mode}\n                                            minDate={minDate}\n                                            maxDate={maxDate}\n                                            onSelectDay={this.onSelectDay}\n                                            onSelectMonth={this.onSelectMonth}\n                                            onSelectYear={this.onSelectYear}\n                                            onSelectTime={this.onSelectTime}\n                                            onSubmit={this.onValueSubmit}\n                                        />\n                                    </MenuWrapper>\n                                </MenuContainer>\n                            ) : (\n                                <BlindInput type=\"text\" onFocus={onToggle} />\n                            )}\n                        </Container>\n                    );\n                }}\n            </Select>\n        );\n    }\n\n    private renderValue(\n        value: ReactTimebombDate,\n        placeholder?: string,\n        open?: boolean\n    ) {\n        placeholder = open ? undefined : placeholder;\n\n        const { minDate, maxDate, format, selectRange } = this.props;\n        const { allowValidation } = this.state;\n\n        if (selectRange || Array.isArray(value)) {\n            const multiValue = value\n                ? Array.isArray(value)\n                    ? value\n                    : [value]\n                : undefined;\n\n            return (\n                <ValueMulti\n                    onClear={this.onClear}\n                    onToggle={this.onToggle!}\n                    open={open}\n                    placeholder={placeholder}\n                    value={multiValue}\n                />\n            );\n        }\n\n        return (\n            <Value\n                placeholder={placeholder}\n                format={format!}\n                value={value}\n                minDate={minDate}\n                maxDate={maxDate}\n                allowValidation={allowValidation}\n                open={open}\n                onClear={this.onClear}\n                onChangeValueText={this.onChangeValueText}\n                onToggle={this.onToggle!}\n                onSubmit={this.onValueSubmit}\n            />\n        );\n    }\n\n    private onClose() {\n        clearSelection();\n\n        setTimeout(() => {\n            clearSelection();\n\n            this.setState(this.initialState);\n        }, 16);\n    }\n\n    private emitError(\n        error: ReactTimebombError,\n        value: ReactTimebombState['valueText']\n    ): void {\n        if (this.state.allowValidation) {\n            this.setState({ allowValidation: false }, () => {\n                if (this.props.onError) {\n                    this.props.onError(error, value);\n                }\n            });\n        }\n    }\n\n    private emitChange(date: ReactTimebombDate, commit: boolean): void {\n        const { value, showConfirm, onChange } = this.props;\n\n        if (!showConfirm) {\n            commit = true;\n        }\n\n        if (dateEqual(value, date)) {\n            return;\n        }\n\n        if (commit) {\n            if (Array.isArray(date)) {\n                onChange(...date);\n            } else {\n                onChange(date);\n            }\n        }\n\n        this.setState({ allowValidation: Boolean(date) });\n    }\n\n    private onClear() {\n        this.setState({ valueText: undefined }, () => {\n            this.emitChange(undefined, true);\n        });\n    }\n\n    private onChangeValueText(valueText: string | undefined): void {\n        this.setState({ valueText });\n    }\n\n    private onValueSubmit(): void {\n        if (this.onToggle) {\n            this.onToggle();\n        }\n        clearSelection();\n\n        this.valueTextDidUpdate(true);\n    }\n\n    private onSelectDay(day: Date): void {\n        const { value, format, selectWeek, selectRange } = this.props;\n\n        const valueDate =\n            value instanceof Date\n                ? value\n                : Array.isArray(value)\n                ? value[0]\n                : undefined;\n\n        if (selectWeek) {\n            const date = [startOfWeek(day), endOfWeek(day)];\n            const valueText = dateFormat(date, format!);\n\n            this.setState({ date, valueText });\n        } else {\n            const date = setDate(\n                day,\n                valueDate ? valueDate.getHours() : 0,\n                valueDate ? valueDate.getMinutes() : 0\n            );\n\n            if (selectRange) {\n                const dateArr =\n                    Array.isArray(this.state.date) &&\n                    this.state.date.length === 1\n                        ? [...this.state.date, date]\n                        : [date];\n\n                dateArr.sort((a, b) => a.getTime() - b.getTime());\n\n                const valueText = dateFormat(dateArr, format!);\n\n                this.setState({ date, valueText });\n            } else {\n                const valueText = dateFormat(date, format!);\n\n                this.setState({ date, valueText });\n            }\n        }\n    }\n\n    private onModeYear() {\n        this.setState({ mode: 'year' });\n    }\n\n    private onModeMonths() {\n        this.setState({ mode: 'months' });\n    }\n\n    private onSelectMonth(date: Date) {\n        this.setState({ date, mode: 'month' });\n    }\n\n    private onSelectYear(date: Date) {\n        this.setState({ date, mode: 'months' });\n    }\n\n    private onReset(): void {\n        this.setState({ date: this.defaultDateValue });\n    }\n\n    private onNextMonth(): void {\n        const currentDate = Array.isArray(this.state.date)\n            ? this.state.date[0]\n            : this.state.date;\n        const date = new Date(currentDate!);\n\n        date.setMonth(date.getMonth() + 1);\n\n        this.setState({ date });\n    }\n\n    private onPrevMonth(): void {\n        const currentDate = Array.isArray(this.state.date)\n            ? this.state.date[0]\n            : this.state.date;\n        const date = new Date(currentDate!);\n\n        date.setMonth(date.getMonth() - 1);\n\n        this.setState({ date });\n    }\n\n    private onSelectTime(time: string): void {\n        const { format } = this.props;\n        let value = this.props.value || new Date('1970-01-01');\n\n        if (!time) {\n            if (Array.isArray(value)) {\n                value = value.map(v => startOfDay(v));\n            }\n\n            this.emitChange(value, false);\n        } else {\n            const splitted = time.split(':');\n            const newDate = Array.isArray(value)\n                ? value.map(d =>\n                      setDate(\n                          d,\n                          parseInt(splitted[0], 10),\n                          parseInt(splitted[1], 10)\n                      )\n                  )\n                : setDate(\n                      value,\n                      parseInt(splitted[0], 10),\n                      parseInt(splitted[1], 10)\n                  );\n\n            const valueText = dateFormat(newDate, format!);\n\n            this.setState({ valueText }, () => this.emitChange(newDate, false));\n        }\n    }\n}\n","import * as React from 'react';\nimport styled, { css } from 'styled-components';\nimport { ReactTimebombState, ReactTimebombProps } from '.';\nimport {\n    isEnabled,\n    validateDate,\n    getMonthNames,\n    getWeekOfYear,\n    startOfWeek,\n    addDays,\n    startOfMonth,\n    endOfWeek,\n    getAttribute\n} from './utils';\nimport { Button } from './button';\nimport { Day, WeekDay } from './menu-day';\nimport { ReactTimebombDate } from './typings';\n\nexport interface MenuProps {\n    showTime: ReactTimebombState['showTime'];\n    showConfirm: ReactTimebombProps['showConfirm'];\n    showCalendarWeek: ReactTimebombProps['showCalendarWeek'];\n    selectWeek: ReactTimebombProps['selectWeek'];\n    value: ReactTimebombProps['value'];\n    valueText: ReactTimebombState['valueText'];\n    minDate: ReactTimebombProps['minDate'];\n    maxDate: ReactTimebombProps['maxDate'];\n    date: ReactTimebombState['date'];\n    mode: ReactTimebombState['mode'];\n    format: string;\n    onSelectDay(date: Date): void;\n    onSelectYear(date: Date): void;\n    onSelectMonth(date: Date): void;\n    onSelectTime(time: string): void;\n    onSubmit(): void;\n}\n\ninterface TableProps {\n    selectWeek?: boolean;\n}\n\nconst MonthAndYearContainer = styled.div`\n    display: flex;\n    height: 220px;\n`;\n\nconst MonthsContainer = styled.div`\n    display: flex;\n    flex: 1;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-self: flex-start;\n    align-items: flex-start;\n    padding: 10px;\n\n    button {\n        width: 33%;\n        font-size: 16px;\n        font-weight: normal;\n        font-style: normal;\n        font-stretch: normal;\n        min-height: 46px;\n        border: none;\n        margin: 0 0 4px;\n    }\n`;\n\nconst MonthContainer = styled.div`\n    padding: 0 0 10px;\n`;\n\nconst YearContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n    border-left: solid 1px #e6e6e6;\n    padding: 10px;\n    flex: 0 0 90px;\n\n    button {\n        width: 100%;\n        font-size: 16px;\n        font-weight: normal;\n        font-style: normal;\n        font-stretch: normal;\n        border: none;\n        padding: 6px 0;\n        margin: 0 0 4px;\n        min-height: 46px;\n    }\n`;\n\nconst Confirm = styled.div`\n    width: 100%;\n    text-align: center;\n    padding: 10px 0 0;\n\n    button {\n        padding: 3px 28px;\n    }\n`;\n\nconst Table = styled.table`\n    width: 100%;\n    font-size: 13px;\n    user-select: none;\n    padding: 0 10px;\n    box-sizing: border-box;\n\n    td.calendar-week {\n        color: #aaa;\n    }\n\n    th.calendar-week {\n        text-align: left;\n        color: #aaa;\n    }\n\n    tr {\n        ${(props: TableProps) =>\n            props.selectWeek\n                ? css`\n                      &:hover {\n                          cursor: pointer;\n\n                          td.day {\n                              background-color: #eee;\n                          }\n                      }\n                  `\n                : ''};\n\n        th {\n            padding: 3px 2px;\n        }\n    }\n`;\n\nexport class Menu extends React.PureComponent<MenuProps> {\n    private get now(): Date {\n        return new Date();\n    }\n\n    private getDate(date: ReactTimebombDate) {\n        return (Array.isArray(date) ? date[0] : date)!;\n    }\n\n    private monthMatrixCache = new Map<string, (Date[])[]>();\n\n    private get monthMatrix(): (Date[])[] {\n        const date = this.getDate(this.props.date);\n        const dateMonth = date.getMonth();\n        const dateYear = date.getFullYear();\n\n        // cache\n        const cacheKey = `${dateMonth}-${dateYear}`;\n        const cached = this.monthMatrixCache.get(cacheKey);\n\n        if (cached) {\n            return cached;\n        }\n\n        // generate\n        const weeks: (Date)[][] = [];\n\n        let base = startOfMonth(date);\n        let week = 0;\n\n        while (\n            startOfWeek(base).getMonth() === dateMonth ||\n            endOfWeek(base).getMonth() === dateMonth\n        ) {\n            const weekStart = startOfWeek(\n                new Date(dateYear, dateMonth, week++ * 7 + 1)\n            );\n\n            weeks.push([\n                weekStart,\n                addDays(weekStart, 1),\n                addDays(weekStart, 2),\n                addDays(weekStart, 3),\n                addDays(weekStart, 4),\n                addDays(weekStart, 5),\n                addDays(weekStart, 6)\n            ]);\n\n            base = addDays(base, 7);\n        }\n\n        this.monthMatrixCache.set(cacheKey, weeks);\n\n        return weeks;\n    }\n\n    private get fullYears() {\n        const { minDate, maxDate } = this.props;\n        const year = this.getDate(this.props.date).getFullYear();\n\n        if (minDate && !maxDate) {\n            const currentYear = minDate.getFullYear();\n\n            return Array(120)\n                .fill(undefined)\n                .map((_, i) => {\n                    const date = new Date(minDate);\n\n                    date.setFullYear(currentYear + i);\n\n                    const enabled = isEnabled('year', date, this.props);\n                    const selected = year === date.getFullYear();\n\n                    return { date, enabled, selected };\n                })\n                .filter(obj => obj.enabled);\n        } else if (!minDate && maxDate) {\n            const currentYear = maxDate.getFullYear();\n\n            return Array(120)\n                .fill(undefined)\n                .map((_, i) => {\n                    const date = new Date(maxDate);\n\n                    date.setFullYear(currentYear - i);\n\n                    const enabled = isEnabled('year', date, this.props);\n                    const selected = year === date.getFullYear();\n\n                    return { date, enabled, selected };\n                })\n                .filter(obj => obj.enabled)\n                .reverse();\n        } else if (minDate && maxDate) {\n            const minYear = minDate.getFullYear();\n            const maxYear = maxDate.getFullYear();\n            const array: {\n                date: Date;\n                enabled: boolean;\n                selected: boolean;\n            }[] = [];\n\n            for (let i = maxYear; i >= minYear; i--) {\n                const date = new Date(maxDate);\n\n                date.setFullYear(i);\n\n                const enabled = isEnabled('year', date, this.props);\n                const selected = year === date.getFullYear();\n\n                array.push({ date, enabled, selected });\n            }\n\n            return array.reverse();\n        } else {\n            const currentDate = this.now;\n            const currentYear = currentDate.getFullYear();\n\n            return Array(120)\n                .fill(undefined)\n                .map((_, i) => {\n                    const date = new Date(currentDate);\n\n                    date.setFullYear(currentYear - i);\n\n                    const enabled = isEnabled('year', date, this.props);\n                    const selected = year === date.getFullYear();\n\n                    return { date, enabled, selected };\n                })\n                .filter(obj => obj.enabled)\n                .reverse();\n        }\n    }\n\n    constructor(props: MenuProps) {\n        super(props);\n\n        this.onSelectDay = this.onSelectDay.bind(this);\n        this.onSelectMonth = this.onSelectMonth.bind(this);\n        this.onSelectYear = this.onSelectYear.bind(this);\n    }\n\n    public render(): React.ReactNode {\n        const { mode, showConfirm } = this.props;\n\n        switch (mode) {\n            case 'year':\n            case 'months':\n                return (\n                    <MonthAndYearContainer>\n                        {this.renderMenuMonths()}\n                        {this.renderMenuYear()}\n                    </MonthAndYearContainer>\n                );\n            case 'month':\n                return (\n                    <MonthContainer>\n                        {this.renderMonth()}\n                        {showConfirm && this.renderConfirm()}\n                    </MonthContainer>\n                );\n        }\n    }\n\n    private renderMenuYear(): React.ReactNode {\n        return (\n            <YearContainer ref={this.onYearContainer} className=\"years\">\n                {this.fullYears\n                    .map(({ date, selected }) => {\n                        const fullYear = date.getFullYear();\n                        const dateStr = date.toISOString();\n\n                        return (\n                            <Button\n                                key={dateStr}\n                                tabIndex={-1}\n                                className={selected ? 'selected' : undefined}\n                                selected={selected}\n                                data-date={dateStr}\n                                onClick={this.onSelectYear}\n                            >\n                                {fullYear}\n                            </Button>\n                        );\n                    })\n                    .reverse()}\n            </YearContainer>\n        );\n    }\n\n    private renderMenuMonths(): React.ReactNode {\n        const { value } = this.props;\n        const valueDate = this.getDate(value);\n        const date = this.getDate(this.props.date);\n        const months = getMonthNames(true);\n        const month = value && valueDate.getMonth();\n        const year = value && valueDate.getFullYear();\n\n        return (\n            <MonthsContainer className=\"months\">\n                {months.map((str, i) => {\n                    const newDate = new Date(date);\n\n                    newDate.setMonth(i);\n\n                    const enabled = isEnabled('month', newDate, this.props);\n                    const selected =\n                        month === newDate.getMonth() &&\n                        year === newDate.getFullYear();\n\n                    return (\n                        <Button\n                            key={str}\n                            tabIndex={-1}\n                            className={selected ? 'selected' : undefined}\n                            selected={selected}\n                            disabled={!enabled}\n                            data-date={newDate.toISOString()}\n                            onClick={this.onSelectMonth}\n                        >\n                            {str}\n                        </Button>\n                    );\n                })}\n            </MonthsContainer>\n        );\n    }\n\n    private renderMonth(): React.ReactNode {\n        const { showCalendarWeek, selectWeek } = this.props;\n\n        return (\n            <Table\n                className=\"month\"\n                selectWeek={selectWeek}\n                cellSpacing={0}\n                cellPadding={0}\n            >\n                <thead>\n                    <tr>\n                        {showCalendarWeek && <th className=\"calendar-week\" />}\n                        <th>Mo</th>\n                        <th>Di</th>\n                        <th>Mi</th>\n                        <th>Do</th>\n                        <th>Fr</th>\n                        <th>Sa</th>\n                        <th>So</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.monthMatrix.map(dates => {\n                        const weekNum = getWeekOfYear(dates[0]);\n\n                        return (\n                            <tr key={weekNum}>\n                                {showCalendarWeek && (\n                                    <td className=\"calendar-week\">\n                                        <WeekDay\n                                            day={dates[0]}\n                                            onClick={this.onSelectDay}\n                                        >\n                                            {weekNum}\n                                        </WeekDay>\n                                    </td>\n                                )}\n                                {dates.map(date => (\n                                    <td\n                                        className=\"day\"\n                                        key={date.toISOString()}\n                                    >\n                                        <Day\n                                            day={date}\n                                            date={this.props.date}\n                                            value={this.props.value}\n                                            minDate={this.props.minDate}\n                                            maxDate={this.props.maxDate}\n                                            selectWeek={this.props.selectWeek}\n                                            onSelectDay={this.onSelectDay}\n                                        />\n                                    </td>\n                                ))}\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </Table>\n        );\n    }\n\n    private renderConfirm(): React.ReactNode {\n        const { valueText, format } = this.props;\n        const validDate = validateDate(valueText, format);\n        const isValid = validDate\n            ? Array.isArray(validDate)\n                ? validDate.every(v => isEnabled('day', v, this.props))\n                : isEnabled('day', validDate, this.props)\n            : false;\n\n        return (\n            <Confirm>\n                <Button\n                    tabIndex={-1}\n                    disabled={!isValid}\n                    onClick={() => this.props.onSubmit()}\n                >\n                    Ok\n                </Button>\n            </Confirm>\n        );\n    }\n\n    private onSelectDay(date: Date): void {\n        const { onSelectDay, showConfirm, onSubmit } = this.props;\n\n        onSelectDay(date);\n\n        if (!showConfirm) {\n            onSubmit();\n        }\n    }\n\n    private onSelectMonth(e: React.MouseEvent<HTMLButtonElement>) {\n        const date = new Date(getAttribute(e.currentTarget, 'data-date'));\n\n        setTimeout(() => this.props.onSelectMonth(date), 0);\n    }\n\n    private onSelectYear(e: React.MouseEvent<HTMLButtonElement>) {\n        const date = new Date(getAttribute(e.currentTarget, 'data-date'));\n\n        setTimeout(() => this.props.onSelectYear(date), 0);\n    }\n\n    private onYearContainer(el: HTMLDivElement | null) {\n        if (el) {\n            const selected = el.querySelector('.selected');\n\n            if (selected) {\n                selected.scrollIntoView();\n                el.scrollBy({ top: -10 });\n            }\n        }\n    }\n}\n","// @ts-ignore\nimport momentDefaultImport from 'moment';\nimport * as momentImport from 'moment';\nimport { ReactTimebombDate } from './typings';\n\nconst moment: typeof momentImport = momentDefaultImport || momentImport;\nconst formatSplit = /[.|:|-|\\\\|_|\\s]/;\n\ntype FormatType = 'day' | 'month' | 'year' | 'hour' | 'minute' | 'second';\n\nexport function dateFormat(\n    date: ReactTimebombDate,\n    format: string\n): string | string[] {\n    if (Array.isArray(date)) {\n        return date.map(date => moment(date).format(format));\n    } else {\n        return moment(date).format(format);\n    }\n}\n\nexport function validateDate(\n    date: string | string[] | undefined,\n    format: string\n): ReactTimebombDate {\n    if (Array.isArray(date)) {\n        const dates = date\n            .map(date => {\n                const instance = moment(date, format, true);\n\n                return instance.isValid() ? instance.toDate() : undefined;\n            })\n            .filter(d => Boolean(d)) as Date[];\n\n        return dates.length === 0 ? undefined : dates;\n    } else {\n        const instance = moment(date, format, true);\n\n        return instance.isValid() ? instance.toDate() : undefined;\n    }\n}\n\nexport function getFormatType(format: string): FormatType | undefined {\n    if (/d/i.test(format)) {\n        return 'day';\n    }\n\n    if (/M/.test(format)) {\n        return 'month';\n    }\n\n    if (/y/i.test(format)) {\n        return 'year';\n    }\n\n    if (/h/i.test(format)) {\n        return 'hour';\n    }\n\n    if (/m/.test(format)) {\n        return 'minute';\n    }\n\n    if (/s/.test(format)) {\n        return 'second';\n    }\n\n    return undefined;\n}\n\n/** @return returns a string with transformed value, true for valid input or false for invalid input */\nexport function validateFormatGroup(\n    input: string | number,\n    format: string\n): boolean | string {\n    if (isFinite(input as any)) {\n        const int = typeof input === 'string' ? parseInt(input, 10) : input;\n        const char = String(input);\n        const strLen = char.length;\n        const type = getFormatType(format);\n\n        switch (type) {\n            case 'day':\n                if (strLen === 1) {\n                    if (int >= 0 && int <= 3) {\n                        return true;\n                    } else {\n                        return `0${input}`;\n                    }\n                }\n\n                if (strLen === 2 && int >= 1 && int <= 31) {\n                    return true;\n                }\n                break;\n            case 'month':\n                if (strLen === 1) {\n                    if (int === 0 || int === 1) {\n                        return true;\n                    } else {\n                        return `0${input}`;\n                    }\n                }\n\n                if (strLen === 2 && int >= 0 && int <= 12) {\n                    return true;\n                }\n                break;\n            case 'year':\n                if (strLen === 1 && (int === 1 || int === 2)) {\n                    return true;\n                }\n\n                if (\n                    strLen >= 2 &&\n                    (char.startsWith('19') || char.startsWith('20'))\n                ) {\n                    return true;\n                }\n                break;\n            case 'hour':\n                if (strLen === 1) {\n                    if (int >= 0 && int <= 2) {\n                        return true;\n                    } else {\n                        return `0${input}`;\n                    }\n                }\n\n                if (strLen >= 2 && int >= 0 && int <= 24) {\n                    return true;\n                }\n                break;\n            case 'minute':\n            case 'second':\n                if (strLen === 1) {\n                    if (int >= 0 && int <= 5) {\n                        return true;\n                    } else {\n                        return `0${input}`;\n                    }\n                }\n\n                if (strLen >= 2 && int >= 0 && int <= 59) {\n                    return true;\n                }\n                break;\n        }\n    }\n\n    return false;\n}\n\nexport function stringFromCharCode(keyCode: number): string {\n    const charCode = keyCode - 48 * Math.floor(keyCode / 48);\n\n    return String.fromCharCode(96 <= keyCode ? charCode : keyCode);\n}\n\nexport function formatNumber(number: Number): string {\n    if (number <= 1) {\n        return '01';\n    }\n\n    if (number <= 9) {\n        return `0${number}`;\n    }\n\n    return String(number);\n}\n\nexport function splitDate(date: Date, format: string): string[] {\n    return (dateFormat(date, format) as string).split(formatSplit);\n}\n\nexport function joinDates(\n    parts: (string | HTMLElement)[],\n    format: string\n): string {\n    const strParts = parts\n        .map(part => (part instanceof HTMLElement ? part.innerText : part))\n        .filter(val => val);\n    const splittedFormat = format.split(formatSplit);\n\n    if (strParts.length !== splittedFormat.length) {\n        return '';\n    }\n\n    const date = strParts.join(' ');\n    const spaceFormat = splittedFormat.join(' ');\n    const momentDate = moment(date, spaceFormat);\n    const parsingFlags = momentDate.parsingFlags();\n\n    if (parsingFlags.overflow === 2) {\n        return moment(\n            // @ts-ignore\n            new Date(...parsingFlags.parsedDateParts)\n        ).format(format);\n    }\n\n    return momentDate.format(format);\n}\n\nexport function clearSelection(): void {\n    const sel = getSelection();\n\n    if (sel.empty) {\n        // Chrome\n        sel.empty();\n    } else if (sel.removeAllRanges) {\n        // Firefox\n        sel.removeAllRanges();\n    }\n}\n\nexport function getWeekOfYear(date: Date): number {\n    return moment(date).isoWeek();\n}\n\nexport function startOfWeek(date: Date): Date {\n    return moment(date)\n        .startOf('isoWeek')\n        .toDate();\n}\n\nexport function endOfWeek(date: Date): Date {\n    return moment(date)\n        .endOf('isoWeek')\n        .toDate();\n}\n\nexport function startOfDay(date: Date): Date {\n    const newDate = new Date(date);\n\n    newDate.setHours(0, 0, 0, 0);\n\n    return newDate;\n}\n\nexport function endOfDay(date: Date): Date {\n    const newDate = new Date(date);\n\n    newDate.setHours(23, 59, 59, 999);\n\n    return newDate;\n}\n\nexport function addDays(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'days')\n        .toDate();\n}\n\nexport function addMonths(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'months')\n        .toDate();\n}\n\nexport function addYears(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'years')\n        .toDate();\n}\n\nexport function addHours(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'hours')\n        .toDate();\n}\n\nexport function addMinutes(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'minutes')\n        .toDate();\n}\n\nexport function addSeconds(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'seconds')\n        .toDate();\n}\n\nexport function subtractSeconds(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'seconds')\n        .toDate();\n}\n\nexport function subtractMinutes(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'minutes')\n        .toDate();\n}\n\nexport function subtractHours(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'hours')\n        .toDate();\n}\n\nexport function subtractDays(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'days')\n        .toDate();\n}\n\nexport function subtractMonths(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'months')\n        .toDate();\n}\n\nexport function subtractYears(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'years')\n        .toDate();\n}\n\nexport function manipulateDate(\n    date: Date,\n    formatType: FormatType,\n    direction: 'add' | 'subtract'\n): Date {\n    switch (formatType) {\n        case 'day':\n            if (direction === 'add') return addDays(date, 1);\n            if (direction === 'subtract') return subtractDays(date, 1);\n            break;\n        case 'month':\n            if (direction === 'add') return addMonths(date, 1);\n            if (direction === 'subtract') return subtractMonths(date, 1);\n            break;\n        case 'year':\n            if (direction === 'add') return addYears(date, 1);\n            if (direction === 'subtract') return subtractYears(date, 1);\n            break;\n        case 'hour':\n            if (direction === 'add') return addHours(date, 1);\n            if (direction === 'subtract') return subtractHours(date, 1);\n            break;\n        case 'minute':\n            if (direction === 'add') return addMinutes(date, 1);\n            if (direction === 'subtract') return subtractMinutes(date, 1);\n            break;\n        case 'second':\n            if (direction === 'add') return addSeconds(date, 1);\n            if (direction === 'subtract') return subtractSeconds(date, 1);\n            break;\n    }\n\n    return new Date();\n}\n\nexport function startOfMonth(date: Date): Date {\n    const newDate = new Date(date);\n\n    newDate.setDate(1);\n    newDate.setHours(0, 0, 0, 0);\n\n    return newDate;\n}\n\nexport function endOfMonth(date: Date): Date {\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n}\n\nexport function isUndefined(val): val is undefined {\n    return val === null || val === undefined;\n}\n\nexport function setDate(date: Date, hour: number, min?: number): Date {\n    const newDate = new Date(date);\n\n    newDate.setHours(hour, min);\n\n    return newDate;\n}\n\nexport function isToday(date: Date): boolean {\n    return moment(date).isSame(new Date(), 'day');\n}\n\nexport function isBefore(date: Date, inp: Date) {\n    return moment(date).isBefore(inp, 'day');\n}\n\nexport function isAfter(date: Date, inp: Date) {\n    return moment(date).isAfter(inp, 'day');\n}\n\nexport function dateEqual(\n    dateA?: ReactTimebombDate,\n    dateB?: ReactTimebombDate\n) {\n    if (!dateA || !dateB) {\n        return false;\n    }\n\n    if (Array.isArray(dateA) && Array.isArray(dateB)) {\n        return dateA.every((date, i) => {\n            const dBi = dateB[i];\n\n            if (date && dBi) {\n                return date.getTime() === dBi.getTime();\n            }\n\n            return false;\n        });\n    } else if (Array.isArray(dateA) && dateB instanceof Date) {\n        return dateA.some(d => d.getTime() === dateB.getTime());\n    } else if (Array.isArray(dateB) && dateA instanceof Date) {\n        return dateB.some(d => d.getTime() === dateA.getTime());\n    } else if (!Array.isArray(dateA) && !Array.isArray(dateB)) {\n        return dateA.getTime() === dateB.getTime();\n    }\n\n    return false;\n}\n\nexport function getMonthNames(short?: boolean): string[] {\n    if (short) {\n        return moment.monthsShort();\n    }\n\n    return moment.months();\n}\n\nexport function isEnabled(\n    context: 'year' | 'month' | 'day',\n    date: Date,\n    { minDate, maxDate }: { minDate?: Date; maxDate?: Date }\n): boolean {\n    if (!minDate && !maxDate) {\n        return true;\n    }\n\n    if (minDate && !maxDate) {\n        return moment(date).isSameOrAfter(minDate, context);\n    }\n\n    if (!minDate && maxDate) {\n        return moment(date).isSameOrBefore(maxDate, context);\n    }\n\n    return moment(date).isBetween(minDate, maxDate, context, '[]');\n}\n\nexport function getAttribute(input: Element, attr: string): string {\n    return input.getAttribute(attr)!;\n}\n\nexport const keys = {\n    ARROW_UP: 38,\n    ARROW_RIGHT: 39,\n    ARROW_DOWN: 40,\n    ARROW_LEFT: 37,\n    ENTER: 13,\n    TAB: 9,\n    ESC: 27,\n    BACKSPACE: 8,\n    DELETE: 46,\n    SPACE: 32,\n    SHIFT: 16,\n    A: 65\n};\n","import * as React from 'react';\nimport { getWeekOfYear, dateEqual, isEnabled, isToday } from './utils';\nimport styled from 'styled-components';\nimport { MenuProps } from './menu';\n\ninterface DayProps {\n    day: Date;\n    value: MenuProps['value'];\n    date: MenuProps['date'];\n    selectWeek: MenuProps['selectWeek'];\n    minDate: MenuProps['minDate'];\n    maxDate: MenuProps['maxDate'];\n    onSelectDay: MenuProps['onSelectDay'];\n}\n\ninterface DayState {\n    current: boolean;\n    enabled: boolean;\n    today: boolean;\n    selected: boolean;\n}\n\ninterface StyledDayProps {\n    selected?: boolean;\n    disabled?: boolean;\n    current: boolean;\n    today: boolean;\n}\n\nconst Flex = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst StyledDay = styled(Flex)`\n    padding: 8px 2px;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    color: ${(props: StyledDayProps) => (props.current ? 'inherit' : '#aaa')};\n    background-color: ${(props: StyledDayProps) =>\n        props.selected\n            ? '#ddd'\n            : props.today\n            ? 'rgba(172, 206, 247, 0.4)'\n            : 'transparent'};\n    font-weight: ${(props: StyledDayProps) =>\n        props.selected ? 'bold' : 'normal'};\n    pointer-events: ${(props: StyledDayProps) =>\n        props.disabled ? 'none' : 'auto'};\n    user-select: none;\n    opacity: ${(props: StyledDayProps) => (props.disabled ? 0.3 : 1)};\n\n    &:hover {\n        background-color: ${(props: StyledDayProps) =>\n            props.selected ? '#ddd' : '#eee'};\n    }\n`;\n\nexport class Day extends React.PureComponent<DayProps, DayState> {\n    constructor(props: DayProps) {\n        super(props);\n\n        this.state = {\n            current: false,\n            enabled: true,\n            today: false,\n            selected: false\n        };\n\n        this.onSelectDay = this.onSelectDay.bind(this);\n    }\n\n    private get selected() {\n        const { value, selectWeek, day } = this.props;\n\n        if (selectWeek && value) {\n            const dayWeekOfYear = getWeekOfYear(day);\n\n            if (Array.isArray(value)) {\n                return value.some(v => getWeekOfYear(v) === dayWeekOfYear);\n            }\n\n            return getWeekOfYear(value) === dayWeekOfYear;\n        }\n\n        return dateEqual(value, day);\n    }\n\n    private get current() {\n        const { day, date } = this.props;\n        const dayMonth = day.getMonth();\n\n        if (Array.isArray(date)) {\n            return date.some(d => d.getMonth() === dayMonth);\n        }\n\n        if (date) {\n            return dayMonth === date.getMonth();\n        }\n\n        return false;\n    }\n\n    private get enabled() {\n        return isEnabled('day', this.props.day, this.props);\n    }\n\n    private get today() {\n        return isToday(this.props.day);\n    }\n\n    public componentDidMount() {\n        this.updateState();\n    }\n\n    public componentDidUpdate(prevProps: DayProps) {\n        this.updateState(prevProps);\n    }\n\n    public render() {\n        const { day } = this.props;\n        const { selected, current, enabled, today } = this.state;\n\n        return (\n            <StyledDay\n                className={selected ? 'value selected' : 'value'}\n                selected={selected}\n                current={current}\n                disabled={!enabled}\n                today={today}\n                onClick={this.onSelectDay}\n            >\n                {day.getDate()}\n            </StyledDay>\n        );\n    }\n\n    private updateState(prevProps: Partial<DayProps> = {}) {\n        const { day, minDate, maxDate } = this.props;\n        const dayChanged = !dateEqual(prevProps.day, day);\n        const minMaxChanged =\n            !dateEqual(prevProps.minDate, minDate) ||\n            !dateEqual(prevProps.maxDate, maxDate);\n\n        this.setState({\n            current: this.current,\n            enabled:\n                dayChanged || minMaxChanged ? this.enabled : this.state.enabled,\n            today: dayChanged ? this.today : this.state.today,\n            selected: this.selected\n        });\n    }\n\n    private onSelectDay() {\n        this.props.onSelectDay(this.props.day);\n    }\n}\n\ninterface WeekDayProps {\n    day: Date;\n    onClick(day: Date): void;\n}\n\nexport class WeekDay extends React.PureComponent<WeekDayProps> {\n    constructor(props: WeekDayProps) {\n        super(props);\n\n        this.onClick = this.onClick.bind(this);\n    }\n\n    public render() {\n        return <div onClick={this.onClick}>{this.props.children}</div>;\n    }\n\n    private onClick() {\n        this.props.onClick(this.props.day);\n    }\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { ReactTimebombProps, ReactTimebombState } from './typings';\nimport { Button } from './button';\nimport {\n    subtractDays,\n    startOfMonth,\n    endOfMonth,\n    addDays,\n    getMonthNames\n} from './utils';\n\ninterface MenuTitleProps {\n    date: ReactTimebombState['date'];\n    minDate: ReactTimebombProps['minDate'];\n    maxDate: ReactTimebombProps['maxDate'];\n    mode: ReactTimebombState['mode'];\n    onPrevMonth(): void;\n    onNextMonth(): void;\n    onReset(): void;\n    onMonths(): void;\n    onYear(): void;\n}\n\nconst Container = styled.div`\n    display: ${(props: { show: boolean }) => (props.show ? 'flex' : 'none')};\n    align-items: center;\n    width: 100%;\n    padding: 10px 10px 15px;\n    justify-content: space-between;\n    min-height: 21px;\n    box-sizing: border-box;\n`;\n\nexport class MenuTitle extends React.PureComponent<MenuTitleProps> {\n    private get prevDisabled(): boolean {\n        const { minDate, date } = this.props;\n\n        if (minDate && date) {\n            const firstDate = Array.isArray(date) ? date[0] : date;\n\n            return subtractDays(startOfMonth(firstDate), 1) < minDate;\n        }\n\n        return false;\n    }\n\n    private get nextDisabled(): boolean {\n        const { maxDate, date } = this.props;\n\n        if (maxDate && date) {\n            const lastDate = Array.isArray(date) ? date[date.length - 1] : date;\n\n            return addDays(endOfMonth(lastDate), 1) > maxDate;\n        }\n\n        return false;\n    }\n\n    public render(): React.ReactNode {\n        const {\n            date,\n            mode,\n            onNextMonth,\n            onPrevMonth,\n            onMonths,\n            onReset,\n            onYear\n        } = this.props;\n        const months = getMonthNames();\n        const show = mode === 'month';\n        const firstDate = (Array.isArray(date) ? date[0] : date)!;\n\n        return (\n            <Container show={show}>\n                <div>\n                    <Button tabIndex={-1} onClick={onMonths}>\n                        <b>{months[firstDate.getMonth()]}</b>\n                    </Button>\n                    <Button tabIndex={-1} onClick={onYear}>\n                        {firstDate.getFullYear()}\n                    </Button>\n                </div>\n                <div>\n                    <Button\n                        tabIndex={-1}\n                        disabled={this.prevDisabled}\n                        onClick={onPrevMonth}\n                    >\n                        ◀\n                    </Button>\n                    <Button tabIndex={-1} onClick={onReset}>\n                        ○\n                    </Button>\n                    <Button\n                        tabIndex={-1}\n                        disabled={this.nextDisabled}\n                        onClick={onNextMonth}\n                    >\n                        ▶\n                    </Button>\n                </div>\n            </Container>\n        );\n    }\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport {\n    keys,\n    formatNumber,\n    splitDate,\n    joinDates,\n    stringFromCharCode,\n    validateFormatGroup,\n    getAttribute,\n    getFormatType,\n    manipulateDate,\n    isEnabled\n} from './utils';\nimport { ReactTimebombProps } from './typings';\nimport { Button } from './button';\n\nexport interface ValueProps {\n    open?: boolean;\n    value?: Date;\n    format: string;\n    placeholder: ReactTimebombProps['placeholder'];\n    minDate: ReactTimebombProps['minDate'];\n    maxDate: ReactTimebombProps['maxDate'];\n    allowValidation?: boolean;\n    onToggle(): void;\n    onChangeValueText(valueText?: string, commit?: boolean): void;\n    onSubmit(): void;\n    onClear(): void;\n}\n\nexport const Flex = styled.div`\n    display: flex;\n    align-items: center;\n    white-space: nowrap;\n`;\n\nexport const Container = styled(Flex)`\n    justify-content: space-between;\n    align-items: center;\n    padding: 5px 10px;\n    border: 1px solid #ccc;\n    cursor: pointer;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n`;\n\nconst Input = styled.span`\n    padding: 2px 0 2px 0;\n    min-width: 1px;\n    cursor: text;\n\n    &:focus {\n        outline: none;\n    }\n\n    &:last-of-type {\n        padding: 2px 10px 2px 0;\n    }\n\n    &:not(:last-of-type):after {\n        content: attr(data-separator);\n        width: 4px;\n        display: inline-block;\n    }\n\n    &:empty:before {\n        content: attr(data-placeholder);\n        color: #aaa;\n    }\n\n    &:empty:not(:last-of-type):after {\n        color: #aaa;\n    }\n`;\n\nexport const ArrowButton = styled(Button)`\n    font-size: 13px;\n    color: #ccc;\n    cursor: pointer;\n    border: none;\n    line-height: 1;\n\n    &:hover {\n        color: #333;\n    }\n\n    &:focus {\n        outline: none;\n    }\n`;\n\nexport const ClearButton = styled(ArrowButton)`\n    font-size: 18px;\n`;\n\nexport const Placeholder = styled.span`\n    color: #aaa;\n    user-select: none;\n`;\n\nexport const Icon = styled.span`\n    margin-right: 5px;\n    user-select: none;\n\n    &:after {\n        content: '📅';\n    }\n`;\n\nconst WHITELIST_KEYS = [keys.BACKSPACE, keys.DELETE, keys.TAB];\n\nexport class Value extends React.PureComponent<ValueProps> {\n    private searchInputs: HTMLSpanElement[] = [];\n\n    private get formatGroups(): string[] {\n        return this.props.format.split('').reduce(\n            (memo, char) => {\n                const prevChar = memo[memo.length - 1];\n\n                if (prevChar && char === prevChar.substr(0, 1)) {\n                    memo[memo.length - 1] += char;\n                } else {\n                    memo = [...memo, char];\n                }\n\n                return memo;\n            },\n            [] as string[]\n        );\n    }\n\n    private get focused(): HTMLElement | null {\n        return document.querySelector(':focus');\n    }\n\n    constructor(props: ValueProps) {\n        super(props);\n\n        this.onSearchRef = this.onSearchRef.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onKeyUp = this.onKeyUp.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onClear = this.onClear.bind(this);\n        this.onToggle = this.onToggle.bind(this);\n    }\n\n    public componentDidUpdate(prevProps: ValueProps): void {\n        const { open, value, format } = this.props;\n        const hasFocus = this.searchInputs.some(inp => inp === this.focused);\n\n        if (!hasFocus) {\n            if (open) {\n                if (prevProps.value !== value && value) {\n                    const parts = splitDate(value, format);\n                    const input = this.searchInputs[0];\n\n                    this.searchInputs.forEach(\n                        (input, i) => (input.innerText = parts[i])\n                    );\n\n                    if (input) {\n                        input.focus();\n                    }\n                }\n\n                if (!prevProps.open || value !== prevProps.value) {\n                    const input = this.searchInputs[0];\n\n                    if (input) {\n                        if (input.innerText === '') {\n                            input.focus();\n                        } else {\n                            this.selectText(input);\n                        }\n                    }\n                }\n            }\n        }\n\n        if (!open && value) {\n            const parts = splitDate(value, format);\n\n            this.searchInputs.forEach(\n                (input, i) => (input.innerText = parts[i])\n            );\n        }\n    }\n\n    public render(): React.ReactNode {\n        const { placeholder, value, open } = this.props;\n        const showPlaceholder = placeholder && !open;\n\n        return (\n            <Container\n                data-role=\"value\"\n                className=\"react-slct-value react-timebomb-value\"\n                onClick={this.onToggle}\n            >\n                <Flex>\n                    <Icon className=\"react-timebomb-icon\" />\n                    <Flex>\n                        {this.renderValue()}\n                        {showPlaceholder && (\n                            <Placeholder className=\"react-timebomb-placeholder\">\n                                {placeholder}\n                            </Placeholder>\n                        )}\n                    </Flex>\n                </Flex>\n                <Flex>\n                    {value && (\n                        <ClearButton\n                            className=\"react-timebomb-clearer\"\n                            tabIndex={-1}\n                            onClick={this.onClear}\n                        >\n                            ×\n                        </ClearButton>\n                    )}\n                    <ArrowButton tabIndex={-1} className=\"react-timebomb-arrow\">\n                        {open ? '▲' : '▼'}\n                    </ArrowButton>\n                </Flex>\n            </Container>\n        );\n    }\n\n    private renderValue(): React.ReactNode {\n        const { open, value } = this.props;\n\n        if (!open && !value) {\n            return null;\n        }\n\n        const { formatGroups } = this;\n\n        return (\n            <Flex>\n                {formatGroups.map((group, i) => {\n                    if (group === '.' || group === ':' || group === ' ') {\n                        return null;\n                    } else {\n                        const separator = formatGroups[i + 1];\n\n                        return (\n                            <Input\n                                contentEditable\n                                data-placeholder={group}\n                                data-separator={separator}\n                                key={group}\n                                data-group={group}\n                                ref={this.onSearchRef}\n                                data-react-timebomb-selectable\n                                onKeyDown={this.onKeyDown}\n                                onKeyUp={this.onKeyUp}\n                                onFocus={this.onFocus}\n                                onBlur={this.onBlur}\n                                onClick={this.onFocus}\n                                onChange={this.onChange}\n                            />\n                        );\n                    }\n                })}\n            </Flex>\n        );\n    }\n\n    private selectText(el: HTMLElement | undefined) {\n        if (el) {\n            const range = document.createRange();\n            const sel = getSelection();\n\n            range.selectNodeContents(el);\n\n            sel.removeAllRanges();\n            sel.addRange(range);\n        }\n    }\n\n    private onSearchRef(el: HTMLSpanElement | null): void {\n        if (el) {\n            this.searchInputs.push(el);\n        } else {\n            this.searchInputs = [];\n        }\n    }\n\n    private onKeyDown(e: React.KeyboardEvent<HTMLSpanElement>): void {\n        const {\n            onChangeValueText,\n            format,\n            value,\n            allowValidation\n        } = this.props;\n        const input = e.currentTarget;\n        const { innerText, nextSibling, previousSibling } = input;\n        const sel = getSelection();\n        const hasSelection = Boolean(sel.focusOffset - sel.baseOffset);\n        let numericValue = parseInt(innerText, 10);\n\n        switch (e.keyCode) {\n            case keys.ENTER:\n            case keys.ESC:\n                e.preventDefault();\n                return;\n            case keys.ARROW_RIGHT:\n                e.preventDefault();\n\n                if (nextSibling instanceof HTMLSpanElement) {\n                    nextSibling.focus();\n                } else {\n                    this.selectText(input);\n                }\n                return;\n            case keys.ARROW_LEFT:\n                e.preventDefault();\n\n                if (previousSibling instanceof HTMLSpanElement) {\n                    previousSibling.focus();\n                } else {\n                    this.selectText(input);\n                }\n                return;\n            case keys.ARROW_UP:\n            case keys.ARROW_DOWN:\n                e.preventDefault();\n\n                const isArrowUp = e.keyCode === keys.ARROW_UP;\n\n                if (isNaN(numericValue)) {\n                    numericValue = 0;\n                }\n\n                if (isFinite(numericValue)) {\n                    const formatGroup = getAttribute(input, 'data-group');\n                    const formatType = getFormatType(formatGroup);\n\n                    if (!allowValidation) {\n                        const nextValue = numericValue + (isArrowUp ? 1 : -1);\n                        const valid = validateFormatGroup(\n                            nextValue,\n                            formatGroup\n                        );\n\n                        if (valid) {\n                            input.innerText =\n                                typeof valid === 'string'\n                                    ? valid\n                                    : formatNumber(nextValue);\n                        }\n                    } else {\n                        if (value && formatType) {\n                            const direction = isArrowUp ? 'add' : 'subtract';\n\n                            const newDate = manipulateDate(\n                                value,\n                                formatType,\n                                direction\n                            );\n                            const enabled = isEnabled(\n                                'day',\n                                newDate,\n                                this.props\n                            );\n\n                            if (enabled) {\n                                const dateParts = splitDate(newDate, format);\n\n                                this.searchInputs.map(\n                                    (inp, i) => (inp.innerText = dateParts[i])\n                                );\n                            }\n                        }\n                    }\n\n                    this.selectText(input);\n                    onChangeValueText(joinDates(this.searchInputs, format));\n                }\n                return;\n        }\n\n        const dataValue = getAttribute(input, 'data-value');\n        const dataGroup = getAttribute(input, 'data-group');\n        const char = stringFromCharCode(e.keyCode);\n        const groupValue = dataValue && !hasSelection ? dataValue + char : char;\n\n        if (WHITELIST_KEYS.includes(e.keyCode) || e.metaKey || e.ctrlKey) {\n            return;\n        }\n\n        const valid = validateFormatGroup(groupValue, dataGroup);\n\n        if (!valid) {\n            e.preventDefault();\n        } else if (typeof valid === 'string') {\n            e.preventDefault();\n\n            input.innerText = valid;\n        }\n\n        if (hasSelection) {\n            return;\n        }\n\n        // validate group\n        if (innerText.length >= dataGroup.length) {\n            e.preventDefault();\n        }\n    }\n\n    private onKeyUp(e: React.KeyboardEvent<HTMLSpanElement>): void {\n        const { onChangeValueText, format, allowValidation } = this.props;\n        const input = e.currentTarget;\n        const { innerText, nextSibling } = input;\n\n        if (e.keyCode === keys.ENTER) {\n            e.preventDefault();\n\n            if (this.focused) {\n                this.focused.blur();\n            }\n            this.props.onSubmit();\n\n            return;\n        }\n\n        if (e.keyCode === keys.ESC) {\n            this.props.onToggle();\n\n            return;\n        }\n\n        const forbiddenKeys = [\n            keys.SHIFT,\n            keys.ARROW_LEFT,\n            keys.ARROW_RIGHT,\n            keys.ARROW_UP,\n            keys.ARROW_DOWN,\n            keys.TAB\n        ];\n\n        // focus next\n        if (\n            innerText.length >= getAttribute(input, 'data-group').length &&\n            !forbiddenKeys.includes(e.keyCode)\n        ) {\n            if (allowValidation || !nextSibling) {\n                this.selectText(input);\n            } else if (nextSibling instanceof HTMLSpanElement) {\n                this.selectText(nextSibling);\n            }\n\n            onChangeValueText(joinDates(this.searchInputs, format));\n        }\n\n        input.setAttribute('data-value', innerText);\n    }\n\n    private onFocus(e: React.SyntheticEvent<HTMLSpanElement>): void {\n        this.selectText(e.currentTarget);\n    }\n\n    private onBlur(e: React.SyntheticEvent<HTMLSpanElement>): void {\n        const input = e.target as HTMLSpanElement;\n        const value = input.innerText;\n        const dataGroup = getAttribute(input, 'data-group');\n        const formatType = getFormatType(dataGroup);\n\n        const fillZero = () => {\n            const innerText = `0${value}`;\n\n            input.innerText = innerText;\n            input.setAttribute('data-value', innerText);\n        };\n\n        switch (formatType) {\n            case 'day':\n                if (value === '1' || value === '2' || value === '3') {\n                    fillZero();\n                }\n                break;\n            case 'month':\n                if (value === '1') {\n                    fillZero();\n                }\n                break;\n        }\n\n        // check if timebomb is still focused\n        setTimeout(() => {\n            const { focused } = this;\n\n            if (\n                this.props.open &&\n                focused &&\n                !getAttribute(focused, 'data-react-timebomb-selectable')\n            ) {\n                this.props.onToggle();\n            }\n        }, 0);\n    }\n\n    private onChange(e: React.KeyboardEvent<HTMLSpanElement>): void {\n        const { format, onChangeValueText } = this.props;\n        const input = e.currentTarget;\n        const { innerText, nextSibling } = input;\n\n        onChangeValueText(joinDates(this.searchInputs, format));\n\n        if (innerText.length >= getAttribute(input, 'data-group').length) {\n            if (nextSibling instanceof HTMLSpanElement) {\n                nextSibling.focus();\n            }\n        }\n    }\n\n    private onClear(e: React.SyntheticEvent<HTMLButtonElement>): void {\n        e.stopPropagation();\n\n        this.props.onClear();\n    }\n\n    private onToggle(e: React.SyntheticEvent<HTMLSpanElement>): void {\n        const { open, onToggle } = this.props;\n\n        if (!this.searchInputs.some(inp => inp === e.target) || !open) {\n            onToggle();\n        }\n    }\n}\n","import * as React from 'react';\nimport {\n    Container,\n    Flex,\n    Icon,\n    ValueProps,\n    Placeholder,\n    ClearButton,\n    ArrowButton\n} from './value';\nimport { dateFormat } from './utils';\n\ninterface MultiValueProps {\n    value: undefined | Date[];\n    placeholder: ValueProps['placeholder'];\n    open: ValueProps['open'];\n    onToggle(): void;\n    onClear(): void;\n}\n\nexport class ValueMulti extends React.PureComponent<MultiValueProps> {\n    constructor(props: MultiValueProps) {\n        super(props);\n\n        this.onClear = this.onClear.bind(this);\n    }\n\n    public render() {\n        const { placeholder, value, open } = this.props;\n        const showPlaceholder = placeholder && !open;\n\n        return (\n            <Container\n                data-role=\"value\"\n                className=\"react-slct-value react-timebomb-value\"\n                onClick={this.props.onToggle}\n            >\n                <Flex>\n                    <Icon className=\"react-timebomb-icon\" />\n                    <Flex>\n                        {this.renderValue()}\n                        {showPlaceholder && (\n                            <Placeholder className=\"react-timebomb-placeholder\">\n                                {placeholder}\n                            </Placeholder>\n                        )}\n                    </Flex>\n                </Flex>\n                <Flex>\n                    {value && (\n                        <ClearButton\n                            className=\"react-timebomb-clearer\"\n                            tabIndex={-1}\n                            onClick={this.onClear}\n                        >\n                            ×\n                        </ClearButton>\n                    )}\n                    <ArrowButton tabIndex={-1} className=\"react-timebomb-arrow\">\n                        {open ? '▲' : '▼'}\n                    </ArrowButton>\n                </Flex>\n            </Container>\n        );\n    }\n\n    private renderValue() {\n        const { value } = this.props;\n\n        if (!value) {\n            return null;\n        }\n\n        return value.map(d => dateFormat(d, 'DD.MM.YYYY')).join(' - ');\n    }\n\n    private onClear(e: React.SyntheticEvent<HTMLButtonElement>): void {\n        e.stopPropagation();\n\n        this.props.onClear();\n    }\n}\n"]}