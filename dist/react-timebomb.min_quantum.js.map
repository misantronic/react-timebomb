{"version":3,"sources":["src/index.tsx","src/menu/index.tsx","src/components/button.tsx","src/utils.ts","src/menu/mobile.tsx","src/menu/table.tsx","src/menu/day.tsx","src/menu/time.tsx","src/components/number-input.tsx","src/menu/title.tsx","src/value/value.tsx","src/value/value-multi.tsx","src/typings.ts"],"names":["React","$fsx","r","styled_components_1","react_slct_1","menu_1","title_1","value_1","utils_1","value_multi_1","__exportStar","exports","Container","default","div","MenuWrapper","props","mobile","css","BlindInput","input","ReactTimebomb","Component","[object Object]","super","this","valueRef","createRef","emitChange","timeout","date","clearTimeout","setTimeout","__awaiter","value","onChange","dateEqual","isArray","setStateAsync","allowValidation","Boolean","preventClose","minDate","maxDate","isBefore","console","error","state","initialState","onChangeValueText","bind","emitChangeAndClose","onSelectDay","onModeDay","onModeYear","onModeMonth","onChangeMonth","onChangeYear","onReset","onNextMonth","onPrevMonth","onSelectTime","onSubmitOrCancelTime","onClose","onClear","onChangeFormatGroup","onHoverDays","onMultiValueSelect","onPaste","onMobileMenuContainerClick","format","startOfDay","undefined","endOfDay","showTime","isTimeFormat","showDate","isDateFormat","MenuContainer","className","classNames","push","disabled","join","defaultDateValue","Date","isAfter","mode","getFormatType","valueText","dateFormat","hoverDate","menuHeight","selectedRange","prevProps","prevState","selectRange","showConfirm","setState","stringEqual","result","validateValueText","emitError","rangeIsComplete","length","Promise","resolve","validDate","validateDate","some","d","isEnabled","isUndefined","placeholder","showCalendarWeek","timeStep","confirmComponent","onOpen","menuWidth","Math","max","MENU_WIDTH","menuLeft","current","getBoundingClientRect","left","width","createElement","Select","open","onToggle","onRef","showMenu","onClick","onCloseMenu","onOpenMenu","getMobileMenuContainer","ref","renderValue","MenuTitle","onMonth","onYear","Menu","onSubmitTime","onSubmit","type","onFocus","iconComponent","arrowButtonComponent","arrowButtonId","clearComponent","labelComponent","isMulti","ValueComponent","ValueMulti","Value","componentValue","sort","a","b","getTime","onAllSelect","onValueSelect","clearSelection","onError","newDate","date0","date1","index","Object","assign","valueText0","day","valueDate","startOfWeek","endOfWeek","addDays","setDate","getHours","getMinutes","dateArr","getSelectedRange","sortDates","currentDate","setMonth","getMonth","time","commit","map","text","e","target","HTMLDivElement","classList","contains","defaultProps","button_1","mobile_1","table_1","time_1","MonthAndYearContainer","MonthsContainer","MonthContainer","YearContainer","Confirm","MobileMenuTable","MenuTable","getDate","MenuMonths","monthNames","useState","getMonthNames","month","year","getFullYear","getAttribute","currentTarget","str","i","enabled","selected","Button","key","tabIndex","data-date","toISOString","MenuYear","yearContainer","setYearContainer","scrollToYear","querySelector","scrollIntoView","scrollBy","top","onSelectYear","useEffect","el","getDateConfig","newYear","setFullYear","setSeconds","getSeconds","setMinutes","setHours","currentYear","Array","fill","_","filter","obj","reverse","minYear","array","now","getFullYears","fullYear","dateStr","MenuConfirm","isValid","every","v","MonthWrapper","GestureWrapper","allowNext","endOfMonth","allowPrev","subtractDays","startOfMonth","direction","addMonths","subtractMonths","ConfirmComponent","MenuTime","topDivider","onCancel","StyledButton","button","data-react-timebomb-selectable","data-role","SmallButton","ArrowButton","id","moment_1","momentImport","moment","test","validateFormatType","formatType","isFinite","int","parseInt","char","String","strLen","startsWith","formatSplitExpr","dates","instance","toDate","is24HoursFormat","getMeridiem","matcher","match","formatIsActualNumber","validateFormatGroup","ALLOWED_CHARS","num","add","addYears","addHours","addMinutes","addSeconds","subtractSeconds","subtract","subtractMinutes","subtractHours","subtractYears","isBetween","cmpDateA","cmpDateB","context","val","stringFromCharCode","keyCode","charCode","floor","fromCharCode","includes","formatNumber","number","formatNumberRaw","Number","splitDate","split","group","joinDates","parts","strParts","part","HTMLElement","innerText","splittedFormat","spaceFormat","momentDate","parsingFlags","overflow","parsedDateParts","sel","getSelection","empty","removeAllRanges","selectElement","caret","range","document","createRange","selectNodeContents","start","end","setStart","setEnd","addRange","getWeekOfYear","isoWeek","startOf","endOf","manipulateDate","hour","min","isSameDay","dateA","dateB","isSame","isToday","inp","considerTime","dBi","valueA","valueB","short","monthsShort","months","getWeekdayNames","weekdaysShort","isSameOrAfter","isSameOrBefore","attr","isDayFormat","fillZero","replaceSpaceWithNbsp","replace","keys","ARROW_UP","ARROW_RIGHT","ARROW_DOWN","ARROW_LEFT","ENTER","TAB","ESC","BACKSPACE","DELETE","SPACE","SHIFT","DOT","COMMA","react_with_gesture_1","MobileMenuTableWrapper","animate","PureComponent","down","xDir","x","cooldown","deltaX","delta","translateX","cancel","style","transform","children","__decorate","withGesture","mouse","day_1","Table","table","hoverDays","setHoverDays","getDefaultHoverDays","selectedDates","setSelectedDates","weekdayNames","useRef","sun","mon","tue","wed","thu","fri","sat","c","monthMatrix","useMemo","dateMonth","dateYear","weeks","base","week","weekStart","getCacheKey","onDayMouseEnter","days","firstDay","onDayMouseLeave","reduce","memo","config","dayWeekOfYear","firstHover","lastHover","getSelected","cellSpacing","cellPadding","weekNum","WeekNum","hover","hoverDay","selectedStart","selectedEnd","Day","onMouseEnter","onMouseLeave","Flex","StyledDay","setEnabled","today","setToday","dayMonth","classes","getClassNames","number_input_1","Divider","span","Meridiem","meridiem","NumberInput","step","mode24Hours","Steps","Step","InputContainer","Input","focused","setFocused","setValue","getDateValue","onFocusIn","onFocusOut","preventDefault","onBlur","onKeyUp","show","lastDate","nextDisabled","ClearButton","ClearButtonX","Placeholder","Icon","icon","DefaultIcon","getIconClass","getIcon","DefaultClearComponent","META_KEYS","FORBIDDEN_KEYS","inputs","mounted","allSelected","formatGroup","onSearchRef","onKeyDown","onDblClick","formatGroups","prevChar","substr","firstInput","s","findIndex","hasFocus","allowTextSelection","forEach","focus","find","forceUpdate","ArrowButtonComp","ClearComponent","showPlaceholder","showClearer","timeOnly","IconComponent","innerRef","LabelComponent","contentEditable","g","separator","hasFormatType","data-placeholder","data-separator","data-group","onDoubleClick","nextSibling","previousSibling","numericFormat","hasSelection","focusOffset","anchorOffset","numericValue","HTMLSpanElement","isArrowUp","isNaN","dateParts","nextValue","valid","groupValue","metaKey","ctrlKey","validatedChar","dataGroup","blur","parentNode","filledValue","clipboardData","getData","stopPropagation","forwardRef","StyledValue","onClickDate","content","Fragment","HoverSpan","data-index","toDateString","body","addEventListener","removeEventListener","defineProperty","enumerable","get","ArrowButtonProps"],"mappings":"ytBAAA,MAAAA,EAAAC,EAAAC,EAAA,SACAC,EAAAF,EAAAC,EAAA,qBACAE,EAAAH,EAAAC,EAAA,cAEAG,EAAAJ,EAAAC,EAAA,GACAI,EAAAL,EAAAC,EAAA,GACAK,EAAAN,EAAAC,EAAA,IACAM,EAAAP,EAAAC,EAAA,GA6BAO,EAAAR,EAAAC,EAAA,IAEAQ,EAAAT,EAAAC,EAAA,IAAAS,GAMA,MAAMC,EAAYT,EAAAU,QAAOC,GAAG;;;;;EAOtBC,EAAcZ,EAAAU,QAAOC,GAAG;;;;;;;;;;;;;;;;;MAiBxBE,GACEA,EAAMC,OACAd,EAAAe,GAAG;;;;;;;;;;;;;;;;;;;gBAoBH;EAGRC,EAAahB,EAAAU,QAAOO,KAAK;;;;;;EAQ/B,MAAaC,UAAsBrB,EAAMsB,UAkGrCC,YAAYP,GACRQ,MAAMR,GA1FFS,KAAAC,SAAW1B,EAAM2B,YAqdjBF,KAAAG,WAAa,MACjB,IAAIC,EAAU,EAEd,OAAOC,IACHC,aAAaF,GAEbA,EAAUG,WAAW,IAAWC,EAAAR,UAAA,OAAA,GAAA,YAC5B,MAAMS,MAAEA,EAAAC,SAAOA,GAAaV,KAAKT,MAEjC,GAAIR,EAAA4B,UAAUF,EAAOJ,GACjB,OAKJK,KAFmB3B,EAAA6B,QAAQP,GAAQA,EAAO,CAACA,UAIrCL,KAAKa,cAAc,CACrBC,gBAAiBC,QAAQV,GACzBW,cAAc,OAEnB,KArBU,GAzXjB,MAAMC,QAAEA,EAAAC,QAASA,GAAY3B,EAEzB0B,GAAWC,GAAWnC,EAAAoC,SAASD,EAASD,IACxCG,QAAQC,MACJ,wDAIRrB,KAAKsB,MAAQtB,KAAKuB,aAElBvB,KAAKwB,kBAAoBxB,KAAKwB,kBAAkBC,KAAKzB,MACrDA,KAAK0B,mBAAqB1B,KAAK0B,mBAAmBD,KAAKzB,MACvDA,KAAK2B,YAAc3B,KAAK2B,YAAYF,KAAKzB,MACzCA,KAAK4B,UAAY5B,KAAK4B,UAAUH,KAAKzB,MACrCA,KAAK6B,WAAa7B,KAAK6B,WAAWJ,KAAKzB,MACvCA,KAAK8B,YAAc9B,KAAK8B,YAAYL,KAAKzB,MACzCA,KAAK+B,cAAgB/B,KAAK+B,cAAcN,KAAKzB,MAC7CA,KAAKgC,aAAehC,KAAKgC,aAAaP,KAAKzB,MAC3CA,KAAKiC,QAAUjC,KAAKiC,QAAQR,KAAKzB,MACjCA,KAAKkC,YAAclC,KAAKkC,YAAYT,KAAKzB,MACzCA,KAAKmC,YAAcnC,KAAKmC,YAAYV,KAAKzB,MACzCA,KAAKoC,aAAepC,KAAKoC,aAAaX,KAAKzB,MAC3CA,KAAKqC,qBAAuBrC,KAAKqC,qBAAqBZ,KAAKzB,MAC3DA,KAAKsC,QAAUtC,KAAKsC,QAAQb,KAAKzB,MACjCA,KAAKuC,QAAUvC,KAAKuC,QAAQd,KAAKzB,MACjCA,KAAKwC,oBAAsBxC,KAAKwC,oBAAoBf,KAAKzB,MACzDA,KAAKyC,YAAczC,KAAKyC,YAAYhB,KAAKzB,MACzCA,KAAK0C,mBAAqB1C,KAAK0C,mBAAmBjB,KAAKzB,MACvDA,KAAK2C,QAAU3C,KAAK2C,QAAQlB,KAAKzB,MACjCA,KAAK4C,2BAA6B5C,KAAK4C,2BAA2BnB,KAC9DzB,MAvHDF,gCACHP,GAEA,MAAMsD,EAAStD,EAAMsD,QACf5B,QAAEA,EAAAC,QAASA,GAAY3B,EAE7B,MAAO,CACH0B,QAASA,EAAUlC,EAAA+D,WAAW7B,QAAW8B,EACzC7B,QAASA,EAAUnC,EAAAiE,SAAS9B,QAAW6B,EACvCE,SAAUlE,EAAAmE,aAAaL,GACvBM,SAAUpE,EAAAqE,aAAaP,IASvB/C,uBACJuD,GAEA,OAAO3E,EAAAU,QAAOiE,EAAc;;;;;;;;;;UAahCC,gBACI,MAAMC,EAAa,CAAC,kBAcpB,OAZIvD,KAAKT,MAAM+D,WACXC,EAAWC,KAAKxD,KAAKT,MAAM+D,WAG3BtD,KAAKT,MAAM8B,OACXkC,EAAWC,KAAK,SAGhBxD,KAAKT,MAAMkE,UACXF,EAAWC,KAAK,YAGbD,EAAWG,KAAK,KAG3BC,uBACI,MAAMlD,MAAEA,EAAAQ,QAAOA,EAAAC,QAASA,GAAYlB,KAAKT,MAEzC,GAAIkB,EACA,OAAOA,EAGX,IAAIJ,EAAO,IAAIuD,KAQf,OANI1C,GAAWnC,EAAAoC,SAASD,EAASb,GAC7BA,EAAOa,EACAD,GAAWlC,EAAA8E,QAAQ5C,EAASZ,KACnCA,EAAOY,GAGJlC,EAAA+D,WAAWzC,GAGtBkB,mBACI,MAAO,CACHT,iBAAiB,EACjBgD,KAAM/E,EAAAgF,cAAc/D,KAAKT,MAAMsD,QAC/BmB,UAAWhE,KAAKT,MAAMkB,MAChB1B,EAAAkF,WAAWjE,KAAKT,MAAMkB,MAAOT,KAAKT,MAAMsD,aACxCE,EACN1C,KAAML,KAAK2D,iBACXO,eAAWnB,EACXoB,WAAY,OACZC,cAAe,EACfpD,cAAc,GAyCTlB,mBACTuE,EACAC,4CAEA,MAAMN,UAAEA,EAAAb,SAAWA,EAAAF,SAAUA,EAAAjC,aAAUA,GAAiBhB,KAAKsB,OACvDb,MAAEA,EAAAoC,OAAOA,EAAA0B,YAAQA,EAAAC,YAAaA,GAAgBxE,KAAKT,MAQzD,GANI8E,EAAUxB,SAAWA,GAAUwB,EAAU5D,QAAUA,GACnDT,KAAKyE,SAAS,CACVT,UAAWvD,EAAQ1B,EAAAkF,WAAWxD,EAAOoC,QAAWE,KAInDhE,EAAA2F,YAAYJ,EAAUN,UAAWA,GAAY,CAC9C,MAAMW,QAAe3E,KAAK4E,oBAM1B,GAJID,EAAOtD,OACPrB,KAAK6E,UAAUF,EAAOtD,MAAOsD,EAAOX,WAGpCW,EAAOtE,KAAM,CACb,MAAMyE,EACFP,GACAxF,EAAA6B,QAAQ+D,EAAOtE,OACQ,IAAvBsE,EAAOtE,KAAK0E,SAGVP,IAAgBD,GAAepB,GACjC2B,KAEuB,QAAnBR,EAAUR,MAAmB9C,EAG7BhB,KAAKG,WAAWwE,EAAOtE,MAFvBL,KAAK0B,mBAAmBiD,EAAOtE,QAMlC8C,GAAYF,GACbjD,KAAKG,WAAWwE,EAAOtE,WAM/BP,cAAcwB,GAClB,OAAO,IAAI0D,QAAQC,IACfjF,KAAKyE,SAASnD,EAAc2D,KAI5BnF,oBAKJ,MAAMkE,UAAEA,EAAAlD,gBAAWA,GAAoBd,KAAKsB,OACtCuB,OAAEA,GAAW7C,KAAKT,MAClB2F,EAAYnG,EAAAoG,aAAanB,EAAWnB,GAE1C,OAAO,IAAImC,QAAQC,GAAkBzE,EAAAR,UAAA,OAAA,GAAA,YACjC,GAAIkF,EAAW,OACLlF,KAAKa,cAAc,CAAEC,iBAAiB,KAE5B/B,EAAA6B,QAAQsE,GAClBA,EAAUE,KAAKC,GAAOtG,EAAAuG,UAAU,MAAOD,EAAGrF,KAAKT,QAC/CR,EAAAuG,UAAU,MAAOJ,EAAWlF,KAAKT,eAG7BS,KAAKa,cAAc,CAAER,KAAM6E,IAEjCD,EAAQ,CAAE5E,KAAM6E,KAEhBD,EAAQ,CAAE5D,MAAO,aAAc2C,UAAAA,SAE5BA,EACPiB,EAAQ,CAAE5D,MAAO,cAAe2C,UAAAA,KACxBjF,EAAAwG,YAAYvB,IAAclD,GAClCmE,EAAQ,CAAE5E,UAAM0C,QAKrBjD,SACH,MAAM0F,YACFA,EAAAhB,YACAA,EAAAiB,iBACAA,EAAAlB,YACAA,EAAA1B,OACAA,EAAAxB,MACAA,EAAAoC,SACAA,EAAAjE,OACAA,EAAAkG,SACAA,EAAAC,iBACAA,EAAAC,OACAA,GACA5F,KAAKT,OACH4D,SACFA,EAAAF,SACAA,EAAAe,UACAA,EAAAF,KACAA,EAAAM,cACAA,EAAAnD,QACAA,EAAAC,QACAA,EAAAgD,UACAA,GACAlE,KAAKsB,MACHb,EAAQuD,EACRjF,EAAAoG,aAAanB,EAAWnB,GACxB7C,KAAKT,MAAMkB,MACXoF,EAAYC,KAAKC,IACnBnG,EAAcoG,WACdhG,KAAKT,MAAMsG,WAAa,GAEtBI,EACFlH,EAAA6B,QAAQH,IACS,IAAjBA,EAAMsE,QACN/E,KAAKC,SAASiG,UACE,IAAhB3B,EACMvE,KAAKC,SAASiG,QAAQC,wBAAwBC,KAC9CpG,KAAKC,SAASiG,QAAQC,wBAAwBE,MAC9CR,OACA9C,EAEV,OACIxE,EAAA+H,cAAC3H,EAAA4H,OAAM,CACH9F,MAAOA,EACP+E,YAAaA,EACbnE,MAAOA,EACPuE,OAAQA,EACRtD,QAAStC,KAAKsC,SAEb,EACGkD,YAAAA,EACAgB,KAAAA,EACAC,SAAAA,EACAnE,QAAAA,EACAsD,OAAAA,EACAc,MAAAA,EACArD,cAAAA,MAEA,MAAMsD,EACFH,IAASrD,GAAYF,KAAcQ,EACjCH,EAAY,CAACtD,KAAKsD,WAClBsD,EAAUpH,EACVQ,KAAK4C,gCACLG,EAgBN,OAdI4D,GACArD,EAAUE,KAAK,QAGnBxD,KAAKyG,SAAWA,EAChBzG,KAAK6G,YAAcvE,EACnBtC,KAAK8G,WAAalB,EAEdpG,IACA6D,EAAgBrD,KAAK+G,uBACjB1D,IAKJ9E,EAAA+H,cAACnH,EAAS,CAAC6H,IAAKN,EAAOpD,UAAWA,EAAUI,KAAK,MAC5C1D,KAAKiH,YAAYxG,EAAO+E,EAAagB,GACrCG,EACGpI,EAAA+H,cAACjD,EAAa,CACV4C,SAAUA,EACVJ,UAAWA,EACX1B,WAAYnE,KAAKsB,MAAM6C,WACvByC,QAASA,GAETrI,EAAA+H,cAAChH,EAAW,CACRgE,UAAU,sBACV9D,OAAQA,GAERjB,EAAA+H,cAACzH,EAAAqI,UAAS,CACNpD,KAAMA,EACNtE,OAAQA,EACRa,KAAML,KAAKsB,MAAMjB,KACjBY,QAASA,EACTC,QAASA,EACTkD,cAAeA,EACfnB,SAAUA,EACVE,SAAUA,EACVgE,QAASnH,KAAK8B,YACdsF,OAAQpH,KAAK6B,WACbK,YAAalC,KAAKkC,YAClBC,YAAanC,KAAKmC,YAClBF,QAASjC,KAAKiC,UAElB1D,EAAA+H,cAAC1H,EAAAyI,KAAI,CACDpE,SAAUA,EACVE,SAAUA,EACVqB,YAAaA,EACbiB,iBAAkBA,EAClBlB,YAAaA,EACbmB,SAAUA,EACVrF,KAAML,KAAKsB,MAAMjB,KACjBI,MAAOA,EACPuD,UAAWA,EACXnB,OAAQA,EACRiB,KAAMA,EACNtE,OAAQA,EACRyB,QAASA,EACTC,QAASA,EACTkD,cAAeA,EACfF,UAAWA,EACXyB,iBAAkBA,EAClBlD,YAAazC,KAAKyC,YAClBd,YAAa3B,KAAK2B,YAClBI,cAAe/B,KAAK+B,cACpBC,aAAchC,KAAKgC,aACnBI,aAAcpC,KAAKoC,aACnBkF,aACItH,KAAKqC,qBAETkF,SAAUvH,KAAK0B,uBAK3BnD,EAAA+H,cAAC5G,EAAU,CAAC8H,KAAK,OAAOC,QAAShB,OASrD3G,YACJW,EACA+E,EACAgB,GAEA,MAAMvF,QACFA,EAAAC,QACAA,EAAAuC,SACAA,EAAAZ,OACAA,EAAA0B,YACAA,EAAA/E,OACAA,EAAAkG,SACAA,EAAAgC,cACAA,EAAAC,qBACAA,EAAAC,cACAA,EAAAC,eACAA,EAAAC,eACAA,GACA9H,KAAKT,OACH4D,SACFA,EAAAF,SACAA,EAAAnC,gBACAA,EAAAgD,KACAA,EAAAI,UACAA,GACAlE,KAAKsB,MACHyG,EAAUxD,GAAexF,EAAA6B,QAAQH,GACjCuH,EAAiBD,EAAU/I,EAAAiJ,WAAanJ,EAAAoJ,MAE9C,IAAIC,EAAiBJ,EACftH,EACI1B,EAAA6B,QAAQH,GACJA,EACA,CAACA,QACLsC,EACJtC,EAcN,OAXI1B,EAAA6B,QAAQuH,IACkB,IAA1BA,EAAepD,QACfb,IAEAiE,EAAiB,IAAIA,EAAgBjE,GAAWkE,KAC5C,CAACC,EAAGC,IAAMD,EAAEE,UAAYD,EAAEC,YAIlC/C,EAAcgB,IAASuB,OAAUhF,EAAYyC,EAGzCjH,EAAA+H,cAAC0B,EAAc,CACXhB,IAAKhH,KAAKC,SACV6D,KAAMA,EACNL,SAAUA,EACVjE,OAAQA,EACRgG,YAAaA,EACb3C,OAAQA,EACR0B,YAAaA,EACb9D,MAAO0H,EACPjE,UAAWA,EACXjD,QAASA,EACTC,QAASA,EACTJ,gBAAiBA,EACjB0F,KAAMA,EACNrD,SAAUA,EACVF,SAAUA,EACVyC,SAAUA,EACVgC,cAAeA,EACfE,cAAeA,EACfD,qBAAsBA,EACtBE,eAAgBA,EAChBC,eAAgBA,EAChBvF,QAASvC,KAAKuC,QACdf,kBAAmBxB,KAAKwB,kBACxBgB,oBAAqBxC,KAAKwC,oBAC1BiE,SAAUzG,KAAKyG,SACfc,SAAUvH,KAAK0B,mBACf8G,YAAaxI,KAAK4B,UAClB6G,cAAezI,KAAK0C,mBACpBC,QAAS3C,KAAK2C,UAKlB7C,UACJf,EAAA2J,iBAIAnI,WAAW,IAAWC,EAAAR,UAAA,OAAA,GAAA,YAClBjB,EAAA2J,uBAEM1I,KAAKa,cAAcb,KAAKuB,cAE1BvB,KAAKT,MAAM+C,SACXtC,KAAKT,MAAM+C,aAEhB,IAGOxC,UACVuB,EACAZ,4CAEIT,KAAKsB,MAAMR,wBACLd,KAAKa,cAAc,CAAEC,iBAAiB,IAExCd,KAAKT,MAAMoJ,SACX3I,KAAKT,MAAMoJ,QAAQtH,EAAOZ,OA8BxBX,mBAAmB8I,4CACzB5I,KAAK6G,aACL7G,KAAK6G,cAET9H,EAAA2J,iBAEA,MAAMrI,KAAEA,GAASuI,EACX,CAAEvI,KAAMuI,SACF5I,KAAK4E,oBAEbvE,GACAL,KAAKG,WAAWE,MAIhBP,iBAAiBO,GACrB,OAAItB,EAAA6B,QAAQP,GACY,IAAhBA,EAAK0E,OACD1E,EAAK,GAAKA,EAAK,GACR,EAEA,EAEY,IAAhBA,EAAK0E,OACL,EAMR/E,KAAKsB,MAAM8C,cAHP,EAMDtE,yDACJE,KAAKa,cAAc,CAAEmD,eAAWjB,IAEtC/C,KAAKG,gBAAW4C,MAGZjD,kBAAkBkE,GACtBhE,KAAKyE,SAAS,CAAET,UAAAA,EAAWhD,cAAc,IAG/BlB,oBAAoB+C,kDACxB7C,KAAKa,cAAc,CACrBsD,WAAY,OACZL,KAAMjB,EAAS9D,EAAAgF,cAAclB,QAAUE,OAIvCjD,aAAa+I,EAAOC,IACxB,MAAM5E,EAAY4E,GAASD,EAGvB9J,EAAA6B,QAAQZ,KAAKsB,MAAM0C,YACnBjF,EAAA6B,QAAQZ,KAAKsB,MAAMjB,OACa,IAAhCL,KAAKsB,MAAM0C,UAAUe,QACM,IAA3B/E,KAAKsB,MAAMjB,KAAK0E,QAChBb,GAEAlE,KAAKyE,SAAS,CAAEP,UAAAA,IAIVpE,mBAAmBO,EAAY0I,4CAKzC,GAJc,IAAVA,UACM/I,KAAKa,cAAamI,OAAAC,OAAAD,OAAAC,OAAA,GAAMjJ,KAAKuB,cAAY,CAAE2C,UAAW7D,MAIlD,IAAV0I,GACAhK,EAAA6B,QAAQZ,KAAKsB,MAAM0C,YACnBjF,EAAA6B,QAAQZ,KAAKsB,MAAMjB,MACrB,CACE,MAAO6I,GAAclJ,KAAKsB,MAAM0C,WACzB6E,GAAS7I,KAAKsB,MAAMjB,WAErBL,KAAKa,cAAamI,OAAAC,OAAAD,OAAAC,OAAA,GACjBjJ,KAAKuB,cAAY,CACpByC,UAAW,CAACkF,GACZ7I,KAAM,CAACwI,GACP3E,UAAW7D,KAMnBE,WAAW,IAAWC,EAAAR,UAAA,OAAA,GAAA,YACdA,KAAK8G,YACL9G,KAAK8G,mBAGH9G,KAAKa,cAAc,CAAEqD,UAAW7D,OACvC,OAGCP,YAAYqJ,GAChB,MAAM1I,MAAEA,EAAA8D,YAAOA,GAAgBvE,KAAKT,MAC9BsD,EAAS7C,KAAKT,MAAMsD,OAEpBuG,EACE3I,aAAiBmD,KACVnD,EAGP1B,EAAA6B,QAAQH,GACDA,EAAM,GAGV0I,EAGX,GAAoB,SAAhB5E,EAAwB,CACxB,MAAMlE,EAAO,CAACtB,EAAAsK,YAAYF,GAAMpK,EAAAuK,UAAUH,IACpCnF,EAAYjF,EAAAkF,WAAW5D,EAAMwC,GAEnC7C,KAAKyE,SAAS,CAAEpE,KAAAA,EAAM2D,UAAAA,EAAWE,eAAWnB,SACzC,GAA2B,iBAAhBwB,EAA0B,CACxC,MAAMlE,EAAO,CAAC8I,EAAKpK,EAAAwK,QAAQJ,EAAK5E,EAAc,IACxCP,EAAYjF,EAAAkF,WAAW5D,EAAMwC,GAEnC7C,KAAKyE,SAAS,CAAEpE,KAAAA,EAAM2D,UAAAA,EAAWE,eAAWnB,SACzC,IAAoB,IAAhBwB,EAAsB,CAC7B,MAAMlE,EAAOtB,EAAAyK,QACTL,EACAC,EAAUK,WACVL,EAAUM,cAERC,EACF5K,EAAA6B,QAAQZ,KAAKsB,MAAM0C,YACa,IAAhChE,KAAKsB,MAAM0C,UAAUe,OACf,CACIhG,EAAAoG,aAAanF,KAAKsB,MAAM0C,UAAU,GAAInB,GACtCxC,GAEJ,CAACA,GAEL+D,EAAgBpE,KAAK4J,iBAAiBD,GACtC3F,EAAYjF,EAAAkF,WAAW0F,EAAQvB,KAAKrJ,EAAA8K,WAAYhH,GAEtD7C,KAAKyE,SAAS,CACVpE,KAAMsJ,EACN3F,UAAAA,EACAI,cAAAA,EACAF,eAAWnB,QAEZ,CACH,MAAM1C,EAAOtB,EAAAyK,QACTL,EACAC,EAAUK,WACVL,EAAUM,cAER1F,EAAYjF,EAAAkF,WAAW5D,EAAMwC,GAEnC7C,KAAKyE,SAAS,CAAEpE,KAAAA,EAAM2D,UAAAA,EAAWE,eAAWnB,KAI5CjD,YACJE,KAAKyE,SAAS,CAAEX,KAAM,QAGlBhE,aACJE,KAAKyE,SAAS,CAAEX,KAAM,SAGlBhE,cACJE,KAAKyE,SAAS,CAAEX,KAAM,UAGlBhE,cAAcO,GAClBL,KAAKyE,SAAS,CAAEpE,KAAAA,EAAMyD,KAAM,QAGxBhE,aAAaO,GACjBL,KAAKyE,SAAS,CAAEpE,KAAAA,EAAMyD,KAAM,QAGxBhE,UACJE,KAAKyE,SAAS,CAAEpE,KAAML,KAAK2D,mBAGvB7D,cACJ,MAAMgK,EAAc/K,EAAA6B,QAAQZ,KAAKsB,MAAMjB,MACjCL,KAAKsB,MAAMjB,KAAKL,KAAKsB,MAAM8C,eAC3BpE,KAAKsB,MAAMjB,KAEjB,GAAIyJ,EAAa,CACb,MAAMzJ,EAAO,IAAIuD,KAAKkG,GAEtBzJ,EAAK0J,SAAS1J,EAAK2J,WAAa,GAEhChK,KAAKyE,SAAS,CAAEpE,KAAAA,KAIhBP,cACJ,MAAMgK,EAAc/K,EAAA6B,QAAQZ,KAAKsB,MAAMjB,MACjCL,KAAKsB,MAAMjB,KAAKL,KAAKsB,MAAM8C,eAC3BpE,KAAKsB,MAAMjB,KAEjB,GAAIyJ,EAAa,CACb,MAAMzJ,EAAO,IAAIuD,KAAKkG,GAEtBzJ,EAAK0J,SAAS1J,EAAK2J,WAAa,GAEhChK,KAAKyE,SAAS,CAAEpE,KAAAA,KAIVP,aAAamK,EAAYnG,EAAkBoG,GAAS,4CAC9D,MAAMrH,EAAS7C,KAAKT,MAAMsD,OACpBpC,EAAQT,KAAKT,MAAMkB,OAAS,IAAImD,KAEhCgF,EAAU7J,EAAA6B,QAAQH,GAClBA,EAAM0J,IAAI9E,GAAOtG,EAAAyK,QAAQnE,EAAG4E,EAAKR,WAAYQ,EAAKP,eAClD3K,EAAAyK,QAAQ/I,EAAOwJ,EAAKR,WAAYQ,EAAKP,cAErC1F,EAAYjF,EAAAkF,WAAW2E,EAAS/F,SAEhC7C,KAAKa,cAAc,CAAEiD,KAAAA,EAAME,UAAAA,IAE7BkG,GACAlK,KAAKG,WAAWyI,MAIhB9I,QAAQsK,GACZ,MAAM/J,EAAOtB,EAAAoG,aAAaiF,EAAMpK,KAAKT,MAAMsD,QAEvCxC,aAAgBuD,MAChB5D,KAAK2B,YAAYtB,GAIjBP,qBAAqBmK,EAAwBnG,GAC7CmG,GACAjK,KAAKoC,aAAa6H,EAAMnG,GAAM,GAG9B9D,KAAKyG,UACLzG,KAAKyG,WAIL3G,2BAA2BuK,GAE3BA,EAAEC,kBAAkBC,gBACpBF,EAAEC,OAAOE,UAAUC,SAAS,oBAExBzK,KAAKyG,UACLzG,KAAKyG,YAlvBrBvH,EAAAU,cAAAA,EAIkBA,EAAAoG,WAAa,IAuBbpG,EAAA8K,aAA4C,CACtD7H,OAAQ,mGCjIhB,MAAAtE,EAAAC,EAAAC,EAAA,SACAC,EAAAF,EAAAC,EAAA,qBAEAkM,EAAAnM,EAAAC,EAAA,GAEAM,EAAAP,EAAAC,EAAA,GAaAmM,EAAApM,EAAAC,EAAA,GACAoM,EAAArM,EAAAC,EAAA,GACAqM,EAAAtM,EAAAC,EAAA,GAEMsM,EAAwBrM,EAAAU,QAAOC,GAAG;;cAE1BE,GACNA,EAAMC,OAAS,OAAS;EAG1BwL,EAAkBtM,EAAAU,QAAOC,GAAG;;;;;;;;;;;;iBAYjBE,GACLA,EAAMC,OAAS,kBAAoB;;;;;;;;;EAWzCyL,EAAiBvM,EAAAU,QAAOC,GAAG;;;;;EAO3B6L,EAAgBxM,EAAAU,QAAOC,GAAG;;;;;;;;;;;;;;;;;;;EAqB1B8L,EAAUzM,EAAAU,QAAOC,GAAG;;;;;;;;EAUpB+L,EAAkB1M,EAAAU,QAAOyL,EAAAQ,UAAU;;EAIzC,SAASC,EACLjL,EACA+D,GAEA,OAAQrF,EAAA6B,QAAQP,GAAQA,EAAK+D,GAAiB/D,EAGlD,SAASkL,EAAWhM,GAChB,MAAMkB,MAAEA,EAAAjB,OAAOA,EAAA4E,cAAQA,GAAkB7E,GAClCiM,GAAcjN,EAAMkN,SAAS1M,EAAA2M,eAAc,IAC5CtC,EAAYkC,EAAQ7K,EAAO2D,GAC3B/D,EAAOiL,EAAQ/L,EAAMc,KAAM+D,GAC3BuH,EAAQlL,GAAS2I,EAAUY,WAC3B4B,EAAOnL,GAAS2I,EAAUyC,cAEhC,SAAS9J,EAAcsI,GACnB,MAAMhK,EAAO,IAAIuD,KAAK7E,EAAA+M,aAAazB,EAAE0B,cAAe,cAEpDxL,WAAW,IAAMhB,EAAMwC,cAAc1B,GAAO,GAGhD,OACI9B,EAAA+H,cAAC0E,EAAe,CAACxL,OAAQA,EAAQ8D,UAAU,UACtCkI,EAAWrB,IAAI,CAAC6B,EAAKC,KAClB,MAAMrD,EAAU,IAAIhF,KAAKvD,GAEzBuI,EAAQmB,SAASkC,GAEjB,MAAMC,EAAUnN,EAAAuG,UAAU,QAASsD,EAASrJ,GACtC4M,EACFR,IAAU/C,EAAQoB,YAClB4B,IAAShD,EAAQiD,cAErB,OACItN,EAAA+H,cAACqE,EAAAyB,OAAM,CACHC,IAAKL,EACLM,UAAW,EACXhJ,UAAW6I,EAAW,gBAAapJ,EACnCoJ,SAAUA,EACV1I,UAAWyI,EACX1M,OAAQD,EAAMC,OAAM+M,YACT3D,EAAQ4D,cACnB5F,QAAS7E,GAERiK,MAQzB,SAASS,EAASlN,GACd,MAAMkB,MAAEA,EAAAQ,QAAOA,EAAAC,QAASA,GAAY3B,GAEhCmN,EACAC,GACApO,EAAMkN,SAAgC,MAI1C,SAASmB,IACL,GAAIF,EAAe,CACf,MAAMP,EAAWO,EAAcG,cAAc,aAEzCV,IACAA,EAASW,iBAELJ,EAAcK,UACdL,EAAcK,SAAS,CAAEC,KAAM,OA+E/C,SAASC,EAAa5C,GAClB,MAAMhK,EAAO,IAAIuD,KAAK7E,EAAA+M,aAAazB,EAAE0B,cAAe,cAEpDxL,WAAW,IAAMhB,EAAMyC,aAAa3B,GAAO,GAQ/C,OApGA9B,EAAM2O,UAAUN,EAAc,CAACrN,EAAMc,OAqGjC9B,EAAA+H,cAAC4E,EAAa,CAAClE,IANnB,SAAyBmG,GACrBR,EAAiBQ,GACjBP,KAIqCtJ,UAAU,SArFnD,WACI,MAAM8F,EAAYkC,EAAQ7K,EAAOlB,EAAM6E,eACjCwH,EAAON,EAAQ/L,EAAMc,KAAMd,EAAM6E,eAAeyH,cAEhDuB,EAAgB,CAAC/M,EAAYgN,MAC/BhN,EAAO,IAAIuD,KAAKvD,IACXiN,YAAYD,GAEjB,MAAMnB,EAAUnN,EAAAuG,UAAU,OAAQjF,EAAMd,GAClC4M,EAAWP,IAASyB,EAU1B,OARI5M,IACAJ,EAAKkN,WAAWnE,EAAUoE,cAC1BnN,EAAKoN,WAAWrE,EAAUM,cAC1BrJ,EAAKqN,SAAStE,EAAUK,YACxBpJ,EAAKmJ,QAAQJ,EAAUkC,WACvBjL,EAAK0J,SAASX,EAAUY,aAGrB,CAAE3J,KAAAA,EAAM6L,QAAAA,EAASC,SAAAA,IAG5B,GAAIlL,IAAYC,EAAS,CACrB,MAAMyM,EAAc1M,EAAQ4K,cAE5B,OAAO+B,MAAM,KACRC,UAAK9K,GACLoH,IAAI,CAAC2D,EAAG7B,IAAMmB,EAAcnM,EAAS0M,EAAc1B,IACnD8B,OAAOC,GAAOA,EAAI9B,SACpB,IAAKjL,GAAWC,EAAS,CAC5B,MAAMyM,EAAczM,EAAQ2K,cAE5B,OAAO+B,MAAM,KACRC,UAAK9K,GACLoH,IAAI,CAAC2D,EAAG7B,IAAMmB,EAAclM,EAASyM,EAAc1B,IACnD8B,OAAOC,GAAOA,EAAI9B,SAClB+B,UACF,GAAIhN,GAAWC,EAAS,CAC3B,MAAMgN,EAAUjN,EAAQ4K,cAElBsC,EAIA,GAEN,IAAK,IAAIlC,EAPO/K,EAAQ2K,cAOFI,GAAKiC,EAASjC,IAChCkC,EAAM3K,KAAK4J,EAAclM,EAAS+K,IAGtC,OAAOkC,EAAMF,UACV,CACH,MAAMG,EAAM,IAAIxK,KACVkG,EAAcV,EAAYgF,EAAMhF,EAAYgF,EAC5CT,EAAc7D,EAAY+B,cAEhC,OAAO+B,MAAM,KACRC,UAAK9K,GACLoH,IAAI,CAAC2D,EAAG7B,KACL,MAAM5L,EAAO,IAAIuD,KAAKkG,GAEtBzJ,EAAKiN,YAAYK,EAAc1B,GAE/B,MAAMC,EAAUnN,EAAAuG,UAAU,OAAQjF,EAAMd,GAClC4M,EAAWP,IAASvL,EAAKwL,cAE/B,MAAO,CAAExL,KAAAA,EAAM6L,QAAAA,EAASC,SAAAA,KAE3B4B,OAAOC,GAAOA,EAAI9B,SAClB+B,WAiBJI,GACIlE,IAAI,EAAG9J,KAAAA,EAAM8L,SAAAA,MACV,MAAMmC,EAAWjO,EAAKwL,cAChB0C,EAAUlO,EAAKmM,cAErB,OACIjO,EAAA+H,cAACqE,EAAAyB,OAAM,CACHC,IAAKkC,EACLjC,UAAW,EACXhJ,UAAW6I,EAAW,gBAAapJ,EACnCoJ,SAAUA,EACV3M,OAAQD,EAAMC,OAAM+M,YACTgC,EACX3H,QAASqG,GAERqB,KAIZL,WAKjB,SAASO,EAAYjP,GACjB,MAAMyE,UAAEA,EAAAnB,OAAWA,GAAWtD,EACxB2F,EAAYnG,EAAAoG,aAAanB,EAAWnB,GACpC4L,IAAUvJ,IACVnG,EAAA6B,QAAQsE,GACJA,EAAUwJ,MAAMC,GAAK5P,EAAAuG,UAAU,MAAOqJ,EAAGpP,IACzCR,EAAAuG,UAAU,MAAOJ,EAAW3F,IAGtC,OACIhB,EAAA+H,cAAC6E,EAAO,KACJ5M,EAAA+H,cAACqE,EAAAyB,OAAM,CACHE,UAAW,EACX7I,UAAWgL,EACXjP,OAAQD,EAAMC,OACdoH,QAAS,IAAMrH,EAAMgI,YAAU,OAQ/C,SAASqH,EAAarP,GAClB,MAAM0B,QAAEA,EAAAC,QAASA,EAAA1B,OAASA,GAAWD,EAwDrC,OAAIC,EAEIjB,EAAA+H,cAACsE,EAAAiE,eAAc,CACXC,UArCZ,WACI,IAAIzO,EAAOd,EAAMc,KAEjB,OAAKa,IAIDnC,EAAA6B,QAAQP,KACRA,EAAOA,EAAK,MAGZA,GACItB,EAAAwK,QAAQxK,EAAAgQ,WAAW1O,GAAO,GAAKa,IAyBpB4N,GACXE,UA1DZ,WACI,IAAI3O,EAAOd,EAAMc,KAEjB,OAAKY,IAIDlC,EAAA6B,QAAQP,KACRA,EAAOA,EAAK,MAGZA,GACItB,EAAAkQ,aAAalQ,EAAAmQ,aAAa7O,GAAO,GAAKY,IA8C3B+N,GACXjN,cAnBZ,SAAuBoN,GACnB,MAAMpN,cAAEA,GAAkBxC,EACpBc,EAAOiL,EAAQ/L,EAAMc,KAAMd,EAAM6E,eAEvC,OAAQ+K,GACJ,IAAK,OACDpN,EAAchD,EAAAqQ,UAAU/O,EAAM,IAC9B,MACJ,IAAK,OACD0B,EAAchD,EAAAsQ,eAAehP,EAAM,OAYnC9B,EAAA+H,cAAC8E,EAAe,CACZ/K,KAAMtB,EAAAsQ,eACF/D,EAAQ/L,EAAMc,KAAMd,EAAM6E,eAC1B,GAEJnD,QAAS1B,EAAM0B,QACfC,QAAS3B,EAAM2B,QACf1B,OAAQD,EAAMC,OACd+E,YAAahF,EAAMgF,YACnBH,cAAe7E,EAAM6E,cACrBqB,iBAAkBlG,EAAMkG,iBACxBjB,YAAajF,EAAMiF,YACnBvB,SAAU1D,EAAM0D,SAChBxC,MAAO1B,EAAAsQ,eACH/D,EAAQ/L,EAAMkB,MAAOlB,EAAM6E,eAC3B,GAEJmD,SAAUhI,EAAMgI,SAChB5F,YAAapC,EAAMoC,cAEvBpD,EAAA+H,cAAC8E,EAAe,CACZ/K,KAAMd,EAAMc,KACZY,QAAS1B,EAAM0B,QACfC,QAAS3B,EAAM2B,QACf1B,OAAQD,EAAMC,OACd+E,YAAahF,EAAMgF,YACnBH,cAAe7E,EAAM6E,cACrBqB,iBAAkBlG,EAAMkG,iBACxBjB,YAAajF,EAAMiF,YACnBvB,SAAU1D,EAAM0D,SAChBxC,MAAOlB,EAAMkB,MACb8G,SAAUhI,EAAMgI,SAChB5F,YAAapC,EAAMoC,cAEvBpD,EAAA+H,cAAC8E,EAAe,CACZ/K,KAAMtB,EAAAqQ,UACF9D,EAAQ/L,EAAMc,KAAMd,EAAM6E,eAC1B,GAEJnD,QAAS1B,EAAM0B,QACfC,QAAS3B,EAAM2B,QACf1B,OAAQD,EAAMC,OACd+E,YAAahF,EAAMgF,YACnBH,cAAe7E,EAAM6E,cACrBqB,iBAAkBlG,EAAMkG,iBACxBjB,YAAajF,EAAMiF,YACnBvB,SAAU1D,EAAM0D,SAChBxC,MAAO1B,EAAAqQ,UACH9D,EAAQ/L,EAAMkB,MAAOlB,EAAM6E,eAC3B,GAEJmD,SAAUhI,EAAMgI,SAChB5F,YAAapC,EAAMoC,eAO/BpD,EAAA+H,cAACuE,EAAAQ,UAAS,CACNhL,KAAMd,EAAMc,KACZY,QAAS1B,EAAM0B,QACfC,QAAS3B,EAAM2B,QACf1B,OAAQD,EAAMC,OACd+E,YAAahF,EAAMgF,YACnBH,cAAe7E,EAAM6E,cACrBqB,iBAAkBlG,EAAMkG,iBACxBjB,YAAajF,EAAMiF,YACnBvB,SAAU1D,EAAM0D,SAChBxC,MAAOlB,EAAMkB,MACbyD,UAAW3E,EAAM2E,UACjBqD,SAAUhI,EAAMgI,SAChB5F,YAAapC,EAAMoC,YACnBc,YAAalD,EAAMkD,cAK/BvD,EAAAmI,KAAA,SAAqB9H,GACjB,MAAMuE,KAAEA,EAAAtE,OAAMA,EAAA2D,SAAQA,EAAAqB,YAAUA,EAAAvB,SAAaA,GAAa1D,EACpD+P,EAAmB/P,EAAMoG,kBAAoB6I,EAEnD,GAAIrL,GAAYF,EACZ,OAAQa,GACJ,IAAK,OACL,IAAK,QACD,OACIvF,EAAA+H,cAACyE,EAAqB,CAACvL,OAAQA,GAC3BjB,EAAA+H,cAACiF,EAAUvC,OAAAC,OAAA,GAAK1J,IAChBhB,EAAA+H,cAACmG,EAAQzD,OAAAC,OAAA,GAAK1J,KAG1B,IAAK,MACL,IAAK,OACL,IAAK,SACL,IAAK,SACD,OACIhB,EAAA+H,cAAC2E,EAAc,KACV9H,GAAY5E,EAAA+H,cAACsI,EAAY5F,OAAAC,OAAA,GAAK1J,IAC9B0D,GACG1E,EAAA+H,cAACwE,EAAAyE,SAAQ,CACLlP,KAAMd,EAAMc,KACZqF,SAAUnG,EAAMmG,SAChB8J,WAAYjQ,EAAM4D,SAClBN,OAAQtD,EAAMsD,OACdnC,SAAUnB,EAAM6C,aAChBmF,SAAUhI,EAAM+H,aAChBmI,SAAUlQ,EAAM+H,eAGvB9C,GAAejG,EAAA+H,cAACgJ,EAAgBtG,OAAAC,OAAA,GAAK1J,KAM1D,OAAO,yHCleX,MAAAhB,EAAAC,EAAAC,EAAA,SACAC,EAAAF,EAAAC,EAAA,qBAOMiR,EAAehR,EAAAU,QAAOuQ,MAAM;;;;;;;;kBAQhBpQ,GAAyBA,EAAM4M,SAAW,OAAS;;MAE/D5M,GACEA,EAAMC,OACAd,EAAAe,GAAG;;;;;;gBAOH;;;;;;;;;;;;;;;4BAecF,GAChBA,EAAM4M,SAAW,OAAS;;;;;;EAQzBjN,EAAAkN,OAAS7M,GAClBhB,EAAA+H,cAACoJ,EAAY1G,OAAAC,OAAA,CAAA2G,kCAAA,EAAAC,YAEC,SACVrI,KAAK,UACDjI,IAICL,EAAA4Q,YAAcpR,EAAAU,QAAOF,EAAAkN,OAAO;;;;;;;;;;;;;EAsB5BlN,EAAA6Q,YAAcxQ,GACvBhB,EAAA+H,cAACpH,EAAA4Q,YAAW,CACRxM,UAAU,uBACV0M,GAAIzQ,EAAMyQ,GACVvM,SAAUlE,EAAMkE,SAChB6I,UAAW,EACX1F,QAASrH,EAAMqH,SAEdrH,EAAMiH,KAAO,IAAM,44BCzF5B,MAAAyJ,EAAAzR,EAAAC,EAAA,UACAyR,EAAA1R,EAAAC,EAAA,UAGM0R,EAA8BF,EAAA7Q,SAAuB8Q,EAU3D,SAAgBjM,EACZ5D,EACAwC,GAEA,OAAIjC,EAAQP,GACDA,EAAK8J,IAAI9J,GAAQ8P,EAAO9P,GAAMwC,OAAOA,IAErCsN,EAAO9P,GAAMwC,OAAOA,GAyBnC,SAAgBkB,EAAclB,GAC1B,MAAI,KAAKuN,KAAKvN,GACH,MAGP,KAAKuN,KAAKvN,GACH,QAGP,KAAKuN,KAAKvN,GACH,OAGP,MAAMuN,KAAKvN,GACJ,OAGP,KAAKuN,KAAKvN,GACH,SAGP,KAAKuN,KAAKvN,GACH,cADX,EAsDJ,SAAgBwN,EACZ1Q,EACA2Q,GAEA,GAAIC,SAAS5Q,GAAe,CACxB,MAAM6Q,EAAuB,iBAAV7Q,EAAqB8Q,SAAS9Q,EAAO,IAAMA,EACxD+Q,EAAOC,OAAOhR,GACdiR,EAASF,EAAK3L,OAEpB,OAAQuL,GACJ,IAAK,MACD,GAAe,IAAXM,EACA,OAAIJ,GAAO,GAAKA,GAAO,GAGZ,IAAI7Q,EAInB,GAAe,IAAXiR,GAAgBJ,GAAO,GAAKA,GAAO,GACnC,OAAO,EAEX,MACJ,IAAK,QACD,GAAe,IAAXI,EACA,OAAY,IAARJ,GAAqB,IAARA,GAGN,IAAI7Q,EAInB,GAAe,IAAXiR,GAAgBJ,GAAO,GAAKA,GAAO,GACnC,OAAO,EAEX,MACJ,IAAK,OACD,GAAe,IAAXI,IAAyB,IAARJ,GAAqB,IAARA,GAC9B,OAAO,EAGX,GACII,GAAU,IACTF,EAAKG,WAAW,OAASH,EAAKG,WAAW,OAE1C,OAAO,EAEX,MACJ,IAAK,OACD,GAAe,IAAXD,EACA,OAAIJ,GAAO,GAAKA,GAAO,GAGZ,IAAI7Q,EAInB,GAAIiR,GAAU,GAAKJ,GAAO,GAAKA,GAAO,GAClC,OAAO,EAEX,MACJ,IAAK,SACL,IAAK,SACD,GAAe,IAAXI,EACA,OAAIJ,GAAO,GAAKA,GAAO,GAGZ,IAAI7Q,EAInB,GAAIiR,GAAU,GAAKJ,GAAO,GAAKA,GAAO,GAClC,OAAO,GAMvB,OAAO,EAjMEtR,EAAA4R,gBAAkB,sBAQ/B5R,EAAA+E,WAAAA,EAWA/E,EAAAiG,aAAA,SACI9E,EACAwC,GAEA,GAAIjC,EAAQP,GAAO,CACf,MAAM0Q,EAAQ1Q,EACT8J,IAAI9J,IACD,MAAM2Q,EAAWb,EAAO9P,EAAMwC,GAAQ,GAEtC,OAAOmO,EAASvC,UAAYuC,EAASC,cAAWlO,IAEnDgL,OAAO1I,GAAKtE,QAAQsE,IAEzB,OAAwB,IAAjB0L,EAAMhM,YAAehC,EAAYgO,EACrC,CACH,MAAMC,EAAWb,EAAO9P,EAAMwC,GAAQ,GAEtC,OAAOmO,EAASvC,UAAYuC,EAASC,cAAWlO,IAIxD7D,EAAA6E,cAAAA,EA4BA7E,EAAAgS,gBAAA,SAAgCrO,GAC5B,QAAKA,GAIE,MAAMuN,KAAKvN,IAGtB3D,EAAAiS,YAAA,SAA4BtO,GACxB,IAAKA,EACD,OAGJ,MAAMuO,EAAUvO,EAAOwO,MAAM,eAE7B,OAAID,EACOA,EAAQ,QADnB,GAOJlS,EAAAoS,qBAAA,SAAqCzO,GAEjC,QAAI,cAAcuN,KAAKvN,KAKR,MAAXA,GAA6B,OAAXA,IAQ1B3D,EAAAqS,oBAAA,SACI5R,EACAkD,GAIA,OAAOwN,EAAmB1Q,EAFPoE,EAAclB,KAMrC3D,EAAAmR,mBAAAA,EAiFA,MAAMmB,EAAgB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KA2HpE,SAAgB1O,EAAWzC,GACvB,MAAMuI,EAAU,IAAIhF,KAAKvD,GAIzB,OAFAuI,EAAQ8E,SAAS,EAAA,EAAA,EAAA,GAEV9E,EAWX,SAAgBW,EAAQlJ,EAAYoR,GAChC,OAAOtB,EAAO9P,GACTqR,IAAID,EAAK,QACTR,SAGT,SAAgB7B,EAAU/O,EAAYoR,GAClC,OAAOtB,EAAO9P,GACTqR,IAAID,EAAK,UACTR,SAGT,SAAgBU,EAAStR,EAAYoR,GACjC,OAAOtB,EAAO9P,GACTqR,IAAID,EAAK,SACTR,SAGT,SAAgBW,EAASvR,EAAYoR,GACjC,OAAOtB,EAAO9P,GACTqR,IAAID,EAAK,SACTR,SAGT,SAAgBY,EAAWxR,EAAYoR,GACnC,OAAOtB,EAAO9P,GACTqR,IAAID,EAAK,WACTR,SAGT,SAAgBa,EAAWzR,EAAYoR,GACnC,OAAOtB,EAAO9P,GACTqR,IAAID,EAAK,WACTR,SAGT,SAAgBc,EAAgB1R,EAAYoR,GACxC,OAAOtB,EAAO9P,GACT2R,SAASP,EAAK,WACdR,SAGT,SAAgBgB,EAAgB5R,EAAYoR,GACxC,OAAOtB,EAAO9P,GACT2R,SAASP,EAAK,WACdR,SAGT,SAAgBiB,EAAc7R,EAAYoR,GACtC,OAAOtB,EAAO9P,GACT2R,SAASP,EAAK,SACdR,SAGT,SAAgBhC,EAAa5O,EAAYoR,GACrC,OAAOtB,EAAO9P,GACT2R,SAASP,EAAK,QACdR,SAGT,SAAgB5B,EAAehP,EAAYoR,GACvC,OAAOtB,EAAO9P,GACT2R,SAASP,EAAK,UACdR,SAGT,SAAgBkB,EAAc9R,EAAYoR,GACtC,OAAOtB,EAAO9P,GACT2R,SAASP,EAAK,SACdR,SAkFT,SAAgBmB,EACZ/R,EACAgS,EACAC,EACAC,EAA2C,OAE3C,OAAOpC,EAAO9P,GAAM+R,UAAUC,EAAUC,EAAUC,EAAS,MAsH/D,SAAgB3R,EAAQ4R,GACpB,OAAO5E,MAAMhN,QAAQ4R,GA7ZzBtT,EAAAuT,mBAAA,SAAmCC,GAC/B,MAAMC,EAAWD,EAAU,GAAK5M,KAAK8M,MAAMF,EAAU,IAC/ChC,EAAOC,OAAOkC,aAAa,IAAMH,EAAUC,EAAWD,GAE5D,OAAIlB,EAAcsB,SAASpC,GAChBA,EAGJ,IAGXxR,EAAA6T,aAAA,SAA6BC,GACzB,OAAIA,GAAU,EACH,KAGPA,GAAU,EACH,IAAIA,EAGRrC,OAAOqC,IAGlB9T,EAAA+T,gBAAA,SAAgCD,GAC5B,OAAIA,GAAU,EACH,KAAIE,OAAOF,IAAW,GAG1BrC,OAAOqC,IAGlB9T,EAAAiU,UAAA,SAA0B9S,EAAYwC,GAGlC,OAFsBoB,EAAW5D,EAAMwC,GAGlCuQ,MAAMlU,EAAA4R,iBACN/C,OAAOsF,GAASA,IAAyC,IAAhCnU,EAAA4R,gBAAgBV,KAAKiD,KAGvDnU,EAAAoU,UAAA,SACIC,EACA1Q,GAEA,MAAM2Q,EAAWD,EACZpJ,IAAIsJ,GAASA,aAAgBC,YAAcD,EAAKE,UAAYF,GAC5D1F,OAAOyE,GAAOA,GACboB,EAAiB/Q,EAAOuQ,MAAMlU,EAAA4R,iBAEpC,GAAI0C,EAASzO,SAAW6O,EAAe7O,OACnC,MAAO,GAGX,MAAM1E,EAAOmT,EAAS9P,KAAK,KACrBmQ,EAAcD,EAAelQ,KAAK,KAClCoQ,EAAa3D,EAAO9P,EAAMwT,GAC1BE,EAAeD,EAAWC,eAEhC,OAA8B,IAA1BA,EAAaC,SACN7D,EAEH,IAAIvM,QAAQmQ,EAAaE,kBAC3BpR,OAAOA,GAGNiR,EAAWjR,OAAOA,IAG7B3D,EAAAwJ,eAAA,WACI,MAAMwL,EAAMC,eAERD,IACIA,EAAIE,MAEJF,EAAIE,QACGF,EAAIG,iBAEXH,EAAIG,oBAKhBnV,EAAAoV,cAAA,SACInH,EACAoH,GAEA,GAAIpH,EAAI,CACJ,MAAMqH,EAAQC,SAASC,cACjBR,EAAMC,eAEZ,QAAcpR,IAAVwR,EACAC,EAAMG,mBAAmBxH,OACtB,CACH,MAAOyH,EAAOC,GAAON,EAErBC,EAAMM,SAAS3H,EAAIyH,GACnBJ,EAAMO,OAAO5H,EAAI0H,GAGjBX,IACAA,EAAIG,kBACJH,EAAIc,SAASR,MAKzBtV,EAAA+V,cAAA,SAA8B5U,GAC1B,OAAO8P,EAAO9P,GAAM6U,WAGxBhW,EAAAmK,YAAA,SAA4BhJ,GACxB,OAAO8P,EAAO9P,GACT8U,QAAQ,WACRlE,UAGT/R,EAAAoK,UAAA,SAA0BjJ,GACtB,OAAO8P,EAAO9P,GACT+U,MAAM,WACNnE,UAGT/R,EAAA4D,WAAAA,EAQA5D,EAAA8D,SAAA,SAAyB3C,GACrB,MAAMuI,EAAU,IAAIhF,KAAKvD,GAIzB,OAFAuI,EAAQ8E,SAAS,GAAA,GAAA,GAAA,KAEV9E,GAGX1J,EAAAqK,QAAAA,EAMArK,EAAAkQ,UAAAA,EAMAlQ,EAAAyS,SAAAA,EAMAzS,EAAA0S,SAAAA,EAMA1S,EAAA2S,WAAAA,EAMA3S,EAAA4S,WAAAA,EAMA5S,EAAA6S,gBAAAA,EAMA7S,EAAA+S,gBAAAA,EAMA/S,EAAAgT,cAAAA,EAMAhT,EAAA+P,aAAAA,EAMA/P,EAAAmQ,eAAAA,EAMAnQ,EAAAiT,cAAAA,EAMAjT,EAAAmW,eAAA,SACIhV,EACAiQ,EACAnB,EACAzJ,GAEA,OAAQ4K,GACJ,IAAK,MACD,GAAkB,QAAdnB,EAAqB,OAAO5F,EAAQlJ,EAAM,GAC9C,GAAkB,aAAd8O,EAA0B,OAAOF,EAAa5O,EAAM,GACxD,MACJ,IAAK,QACD,GAAkB,QAAd8O,EAAqB,OAAOC,EAAU/O,EAAM,GAChD,GAAkB,aAAd8O,EAA0B,OAAOE,EAAehP,EAAM,GAC1D,MACJ,IAAK,OACD,GAAkB,QAAd8O,EAAqB,OAAOwC,EAAStR,EAAM,GAC/C,GAAkB,aAAd8O,EAA0B,OAAOgD,EAAc9R,EAAM,GACzD,MACJ,IAAK,OACD,GAAkB,QAAd8O,EAAqB,OAAOyC,EAASvR,EAAM,GAC/C,GAAkB,aAAd8O,EAA0B,OAAO+C,EAAc7R,EAAM,GACzD,MACJ,IAAK,SACD,GAAkB,QAAd8O,EAAqB,OAAO0C,EAAWxR,EAAMqF,GAAY,GAC7D,GAAkB,aAAdyJ,EACA,OAAO8C,EAAgB5R,EAAMqF,GAAY,GAC7C,MACJ,IAAK,SACD,GAAkB,QAAdyJ,EAAqB,OAAO2C,EAAWzR,EAAMqF,GAAY,GAC7D,GAAkB,aAAdyJ,EACA,OAAO4C,EAAgB1R,EAAMqF,GAAY,GAIrD,OAAO,IAAI9B,MAGf1E,EAAAgQ,aAAA,SAA6B7O,GACzB,MAAMuI,EAAU,IAAIhF,KAAKvD,GAKzB,OAHAuI,EAAQY,QAAQ,GAChBZ,EAAQ8E,SAAS,EAAA,EAAA,EAAA,GAEV9E,GAGX1J,EAAA6P,WAAA,SAA2B1O,GACvB,OAAO,IAAIuD,KAAKvD,EAAKwL,cAAexL,EAAK2J,WAAa,EAAG,IAG7D9K,EAAAqG,YAAA,SAA4BiN,GACxB,OAAOA,MAAAA,GAGXtT,EAAAsK,QAAA,SAAwBnJ,EAAYiV,EAAcC,GAC9C,MAAM3M,EAAU,IAAIhF,KAAKvD,GAIzB,OAFAuI,EAAQ8E,SAAS4H,EAAMC,GAEhB3M,GAGX1J,EAAAsW,UAAA,SAA0BC,EAAaC,GACnC,OAAOvF,EAAOsF,GAAOE,OAAOD,EAAO,QAGvCxW,EAAA0W,QAAA,SAAwBvV,GACpB,OAAO8P,EAAO9P,GAAMsV,OAAO,IAAI/R,KAAQ,QAG3C1E,EAAAiC,SAAA,SAAyBd,EAAYwV,GACjC,OAAO1F,EAAO9P,GAAMc,SAAS0U,EAAK,QAGtC3W,EAAA2E,QAAA,SAAwBxD,EAAYwV,GAChC,OAAO1F,EAAO9P,GAAMwD,QAAQgS,EAAK,QAGrC3W,EAAAkT,UAAAA,EASAlT,EAAAyB,UAAA,SACI8U,EACAC,EACAI,GAAe,GAEf,SAAKL,IAAUC,KAIXI,IAEIL,EADA7U,EAAQ6U,GACAA,EAAMtL,IAAIrH,GAEVA,EAAW2S,GAInBC,EADA9U,EAAQ8U,GACAA,EAAMvL,IAAIrH,GAEVA,EAAW4S,IAIvB9U,EAAQ6U,IAAU7U,EAAQ8U,GACnBD,EAAM/G,MAAM,CAACrO,EAAM4L,KACtB,MAAM8J,EAAML,EAAOzJ,GAEnB,SAAI5L,IAAQ0V,IACD1V,EAAKkI,YAAcwN,EAAIxN,YAK/B3H,EAAQ6U,IAAUC,aAAiB9R,KACnC6R,EAAMrQ,KAAKC,GAAKA,EAAEkD,YAAemN,EAAenN,WAChD3H,EAAQ8U,IAAUD,aAAiB7R,KACnC8R,EAAMtQ,KAAKC,GAAKA,EAAEkD,YAAekN,EAAelN,YAC/C3H,EAAQ6U,KAAW7U,EAAQ8U,IAC5BD,EAAMlN,YAAcmN,EAAMnN,YAMzCrJ,EAAAwF,YAAA,SACIsR,EACAC,GAEA,OAAID,IAAWC,MAIVD,IAAWC,QAIZrV,EAAQoV,KAAWpV,EAAQqV,IAAWD,EAAOjR,SAAWkR,EAAOlR,SACxDiR,EAAOtH,MAAM,CAAC8D,EAAKvG,IAAMuG,IAAQyD,EAAOhK,MAMvD/M,EAAAwM,cAAA,SAA8BwK,GAC1B,OAAIA,EACO/F,EAAOgG,cAGXhG,EAAOiG,UAGlBlX,EAAAmX,gBAAA,WACI,OAAOlG,EAAOmG,iBAGlBpX,EAAAoG,UAAA,SACIiN,EACAlS,GACAY,QAAEA,EAAAC,QAASA,IAEX,OAAKD,IAAYC,IAIbD,IAAYC,EACLiP,EAAO9P,GAAMkW,cAActV,EAASsR,IAG1CtR,GAAWC,EACLiP,EAAO9P,GAAMmW,eAAetV,EAASqR,GAGzCH,EAAU/R,EAAMY,EAASC,EAASqR,KAG7CrT,EAAA4M,aAAA,SAA6BnM,EAAgB8W,GACzC,OAAO9W,EAAMmM,aAAa2K,IAG9BvX,EAAAwX,YAAA,SAA4B7T,GACxB,OAAO9B,QAAQ,KAAKqP,KAAKvN,KAG7B3D,EAAAkE,aAAA,SAA6BP,GACzB,OAAO9B,QAAQ,QAAQqP,KAAKvN,KAGhC3D,EAAAgE,aAAA,SAA6BL,GACzB,OAAO9B,QAAQ,gBAAgBqP,KAAKvN,KAGxC3D,EAAA2K,UAAA,SAA0BxB,EAASC,GAC/B,OAAOD,EAAEE,UAAYD,EAAEC,WAG3BrJ,EAAA0B,QAAAA,EAIA1B,EAAAyX,SAAA,SAAyBlW,EAAwB6P,GAG7C,OAFA7P,EAAQkQ,OAAOlQ,GAEP6P,GACJ,IAAK,MACD,GAAc,MAAV7P,GAA2B,MAAVA,GAA2B,MAAVA,EAClC,MAAO,IAAIA,EAEf,MACJ,IAAK,QACD,GAAc,MAAVA,EACA,MAAO,IAAIA,IAQ3BvB,EAAA0X,qBAAA,SAAqC5K,GACjC,OAAKA,EAIEA,EAAI6K,QAAQ,KAAM,KAHd7K,GAMF9M,EAAA4X,KAAO,CAChBC,SAAU,GACVC,YAAa,GACbC,WAAY,GACZC,WAAY,GACZC,MAAO,GACPC,IAAK,EACLC,IAAK,GACLC,UAAW,EACXC,OAAQ,GACRC,MAAO,GACPC,MAAO,GACPC,IAAK,IACLC,MAAO,2kBCrpBX,MAAApZ,EAAAC,EAAAC,EAAA,SACAmZ,EAAApZ,EAAAC,EAAA,sBAGMoZ,EAFNrZ,EAAAC,EAAA,qBAE+BW,QAAOC,GAAG;;;;;kBAKvBE,GACVA,EAAMuY,QAAU,2BAA6B;EAarD,IAAajJ,EAAb,cAAoCtQ,EAAMwZ,cAQtCjY,YAAYP,GACRQ,MAAMR,GAENS,KAAKsB,MAAQ,GAGVxB,mBAAmBuE,GACtB,MAAM9E,EAAQS,KAAKT,OACbuP,UAAEA,EAAAE,UAAWA,EAAAgJ,KAAWA,GAASzY,EAEvC,GAAI8E,EAAU2T,OAASA,EAAM,CACzB,MAAOC,GAAQ1Y,EAAM4P,UACrB,IACIA,EADA+I,EAAI,GAWR,GARID,EAAO,GACPC,EAAI,QACJ/I,EAAY,QACL8I,EAAO,IACdC,EAAI,SACJ/I,EAAY,QAGZ+I,GAAK/I,EAAW,CAChB,GACmB,SAAfA,IAA0BL,GACX,SAAdK,IAAyBH,EAE1B,OAGJhP,KAAKyE,SAAS,CAAEyT,EAAAA,EAAGC,UAAU,GAAQ,KACjC5X,WAAW,KACPP,KAAKyE,SAAS,CAAEyT,OAAGnV,GAAa,KAC5B/C,KAAKT,MAAMwC,cAAcoN,GACzBnP,KAAKyE,SAAS,CAAE0T,UAAU,OAE/B,SAMZrY,SACH,MAAMP,EAAQS,KAAKT,OACb2Y,EAAEA,EAAAC,SAAGA,GAAanY,KAAKsB,MAC7B,IAAK8W,GAAU7Y,EAAM8Y,OAEhBrY,KAAKT,MAAMuP,WAAasJ,EAAS,IAClCA,EAAS,IAGRpY,KAAKT,MAAMyP,WAAaoJ,EAAS,IAClCA,EAAS,GAGb,IAAIE,EAAaJ,IAAQ3Y,EAAMyY,KAAOI,EAAS,GAAzB,KAMtB,OAJID,GAAY5Y,EAAMgZ,QAClBhZ,EAAMgZ,SAINha,EAAA+H,cAACuR,EAAsB,CACnBC,QAAS/W,QAAQmX,GACjBM,MAAO,CAAEC,UAAW,cAAcH,OAEjC/Y,EAAMmZ,YA3EV7J,EAAc8J,EAAA,CADzBf,EAAAgB,YAAY,CAAEC,OAAO,qCACVhK,GAAA3P,EAAA2P,eAAAA,4FCvBb,MAAAtQ,EAAAC,EAAAC,EAAA,SAMAM,EAAAP,EAAAC,EAAA,GAYAC,EAAAF,EAAAC,EAAA,qBACAqa,EAAAta,EAAAC,EAAA,GAoBMsa,EAAQra,EAAAU,QAAO4Z,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA4E1B9Z,EAAAmM,UAAA,SAA0B9L,GACtB,MAAMkB,MACFA,EAAAgF,iBACAA,EAAAlB,YACAA,EAAAH,cACAA,EAAAI,YACAA,EAAAN,UACAA,EAAAjB,SACAA,EAAAsE,SACAA,GACAhI,GACG0Z,EAAWC,GAAgB3a,EAAMkN,SAqExC,WACI,IAAKvH,EACD,MAAO,GAGX,GAAInF,EAAA6B,QAAQH,GACR,MAAO,CAACA,EAAM,GAAIyD,GAGtB,MAAO,GA7EPiV,KAEGC,EAAeC,GAAoB9a,EAAMkN,SAAiB,KACzDvF,QAASoT,GAAiB/a,EAAMgb,OAAOxa,EAAAsX,oBACxCmD,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAAOR,EACtChW,EAAY,CAAC,QAAS/D,EAAM+D,WAC7ByK,OAAOgM,GAAKhZ,QAAQgZ,IACpBrW,KAAK,KAEJsW,EAAczb,EAAM0b,QAAQ,KAC9B,MAAM5Z,EAAOiL,EAAQ/L,EAAMc,MACrB6Z,EAAY7Z,EAAK2J,WACjBmQ,EAAW9Z,EAAKwL,cAChBuO,EAAoB,GAE1B,IAAIC,EAAOtb,EAAAmQ,aAAa7O,GACpBia,EAAO,EAEX,KACIvb,EAAAsK,YAAYgR,GAAMrQ,aAAekQ,GACjCnb,EAAAuK,UAAU+Q,GAAMrQ,aAAekQ,GACjC,CACE,MAAMK,EAAYxb,EAAAsK,YACd,IAAIzF,KAAKuW,EAAUD,EAAoB,EAATI,IAAS,IAG3CF,EAAM5W,KAAK,CACP+W,EACAxb,EAAAwK,QAAQgR,EAAW,GACnBxb,EAAAwK,QAAQgR,EAAW,GACnBxb,EAAAwK,QAAQgR,EAAW,GACnBxb,EAAAwK,QAAQgR,EAAW,GACnBxb,EAAAwK,QAAQgR,EAAW,GACnBxb,EAAAwK,QAAQgR,EAAW,KAGvBF,EAAOtb,EAAAwK,QAAQ8Q,EAAM,GAGzB,OAAOD,GACR,CAwCH,WACI,MAAM/Z,EAAOiL,EAAQ/L,EAAMc,MACrB6Z,EAAY7Z,EAAK2J,WACjBmQ,EAAW9Z,EAAKwL,cAGtB,MAAO,GAAGqO,KAAaC,IA9CvBK,KAiDJ,SAASlP,EAAQjL,GACb,OAAQtB,EAAA6B,QAAQP,GAAQA,EAAK+D,GAAiB/D,EAGlD,SAASsB,EAAYtB,GACjBd,EAAMoC,YAAYtB,GAEbmE,GAAgBD,GACjBgD,IAIR,SAASkT,EAAgBtR,GACrB,GAA2B,iBAAhB5E,EAA0B,CACjC,MAAMmW,EAAO9M,MAAMrJ,GACdsJ,KAAK,MACL1D,IAAI,CAAC2D,EAAG7B,IAAMlN,EAAAwK,QAAQJ,EAAK8C,IAEhCiN,EAAawB,QACV,GAAoB,SAAhBnW,EAAwB,CAC/B,MAAMoW,EAAW5b,EAAAsK,YAAYF,GACvBuR,EAAO9M,MAAM,GACdC,KAAK,MACL1D,IAAI,CAAC2D,EAAG7B,IAAMlN,EAAAwK,QAAQoR,EAAU1O,IAErCiN,EAAawB,QAEbxB,EAAa,CAAC/P,IAItB,SAASyR,IACL1B,EAAa,IAGjB,OAlFA3a,EAAM2O,UAAU,KACR3N,EAAMkD,aACNlD,EAAMkD,YAAYwW,IAEvB,CAACA,IAEJ1a,EAAM2O,UAAU,KACZmM,EACIW,EAAYa,OAAO,CAACC,EAAM/J,KACtB+J,EAAKtX,QACEuN,EAAMhD,OAAO5E,GA7GpC,SAAqB4R,GAOjB,MAAM5R,IAAEA,EAAA1I,MAAKA,EAAAwY,UAAOA,EAAAhW,SAAWA,EAAAsB,YAAUA,GAAgBwW,EAEzD,GAAIta,EAAO,CACP,GAAoB,SAAhB8D,EAAwB,CACxB,MAAMyW,EAAgBjc,EAAAkW,cAAc9L,GAEpC,OAAIpK,EAAA6B,QAAQH,GACDA,EAAM2E,KAAKuJ,GAAK5P,EAAAkW,cAActG,KAAOqM,GAGzCjc,EAAAkW,cAAcxU,KAAWua,EAGpC,GAAIzW,GAAexF,EAAA6B,QAAQH,GAAQ,CAC/B,MAAOQ,EAASC,GAAWT,EAE3B,GAAqB,IAAjBA,EAAMsE,QAAgBkU,EAAUlU,OAAQ,CACxC,MAAMkW,EAAahC,EAAU,GACvBiC,EAAYjC,EAAUA,EAAUlU,OAAS,GAE/C,OAAOhG,EAAAuG,UAAU,MAAO6D,EAAK,CACzBlI,QAASA,EAAUga,EAAaha,EAAUga,EAC1C/Z,QAASD,EAAUia,EAAYja,EAAUia,IAIjD,GAAqB,IAAjBza,EAAMsE,OACN,OAAOhG,EAAAuG,UAAU,MAAO6D,EAAK,CACzBlI,QAAAA,EACAC,QAAAA,KAMhB,OAAOnC,EAAA4B,UAAUF,EAAO0I,EAAKlG,GAoETkY,CAAY,CACRhS,IAAAA,EACA1I,MAAAA,EACA8D,YAAAA,EACA0U,UAAAA,EACAhW,SAAAA,MAKL6X,GACR,OAEPd,EAAaf,EAAWxY,IA2DxBlC,EAAA+H,cAACyS,EAAK,CAACzV,UAAWA,EAAW8X,YAAa,EAAGC,YAAa,GACtD9c,EAAA+H,cAAA,QAAA,KACI/H,EAAA+H,cAAA,KAAA,KACKb,GAAoBlH,EAAA+H,cAAA,KAAA,CAAIhD,UAAU,kBACnC/E,EAAA+H,cAAA,KAAA,KAAKmT,GACLlb,EAAA+H,cAAA,KAAA,KAAKoT,GACLnb,EAAA+H,cAAA,KAAA,KAAKqT,GACLpb,EAAA+H,cAAA,KAAA,KAAKsT,GACLrb,EAAA+H,cAAA,KAAA,KAAKuT,GACLtb,EAAA+H,cAAA,KAAA,KAAKwT,GACLvb,EAAA+H,cAAA,KAAA,KAAKkT,KAGbjb,EAAA+H,cAAA,QAAA,KACK0T,EAAY7P,IAAI4G,IACb,MAAMuK,EAAUvc,EAAAkW,cAAclE,EAAM,IAW9BzN,EAAY,CACd,MAXayN,EAAM3L,KAAK+D,GACxBiQ,EAAchU,KAAKC,GAAKtG,EAAAyW,UAAUnQ,EAAG8D,MAWzB,WATM4H,EAAM3L,KAAK+D,GAC7BpK,EAAA4B,UAAUyY,EAAc,GAAIjQ,KASX,iBAPD4H,EAAM3L,KAAK+D,GAC3BpK,EAAA4B,UAAUyY,EAAcA,EAAcrU,OAAS,GAAIoE,KAOpC,gBAEd4E,OAAOgM,GAAKA,GACZrW,KAAK,KAEV,OACInF,EAAA+H,cAAA,KAAA,CAAI+F,IAAKiP,EAAShY,UAAWA,GACxBmC,GACGlH,EAAA+H,cAAA,KAAA,CAAIhD,UAAU,iBACV/E,EAAA+H,cAACwS,EAAAyC,QAAO,CACJpS,IAAK4H,EAAM,GACXnK,QAASjF,GAER2Z,IAIZvK,EAAM5G,IAAIhB,IACP,MAAMqS,EAAQvC,EAAU7T,KAAKqW,GACzB1c,EAAA4B,UAAU8a,EAAUtS,IAElBgD,EAAWiN,EAAchU,KAAKC,GAChCtG,EAAAyW,UAAUnQ,EAAG8D,IAEXuS,EAAgB3c,EAAA4B,UAClByY,EAAc,GACdjQ,GAEEwS,EAAc5c,EAAA4B,UAChByY,EAAcA,EAAcrU,OAAS,GACrCoE,GAEE7F,EAAY,CACd,MACA6I,GAAY,WACZuP,GAAiB,iBACjBC,GAAe,gBAEd5N,OAAOgM,GAAKA,GACZrW,KAAK,KAEV,OACInF,EAAA+H,cAAA,KAAA,CACI+F,IAAKlD,EAAIqD,cACTlJ,UAAWA,GAEX/E,EAAA+H,cAACwS,EAAA8C,IAAG,CACAzS,IAAKA,EACLqS,MAAOA,EACPrP,SAAUA,EACVuP,cAAeA,EACfC,YAAaA,EACbtb,KAAMd,EAAMc,KACZY,QAAS1B,EAAM0B,QACfC,QAAS3B,EAAM2B,QACf+B,SAAU1D,EAAM0D,SAChBtB,YAAaA,EACbka,aAAcpB,EACdqB,aAAclB,2GCpV1D,MAAArc,EAAAC,EAAAC,EAAA,SACAC,EAAAF,EAAAC,EAAA,qBAEAM,EAAAP,EAAAC,EAAA,GAuBMsd,EAAOrd,EAAAU,QAAOC,GAAG;;;EAKjB2c,EAAYtd,EAAAU,QAAO2c,EAAK;;;;;aAKjBxc,GAA4BA,EAAM2G,QAAU,UAAY;;sBAE/C3G,GACdA,EAAMkE,SAAW,OAAS;;eAEnBlE,GAA4BA,EAAMkE,SAAW,GAAM;;;;;;;;;;;;;;;;;;;EAqBlEvE,EAAA0c,IAAA,SAAoBrc,GAChB,MAAM4J,IAAEA,EAAA9I,KAAKA,EAAAmb,MAAMA,EAAAva,QAAOA,EAAAC,QAASA,EAAA+B,SAASA,GAAa1D,GAClD2M,EAAS+P,GAAc1d,EAAMkN,UAAS,IACtCyQ,EAAOC,GAAY5d,EAAMkN,UAAS,GACnCvF,EAAU3H,EAAM0b,SAkBtB,WACI,MAAMmC,EAAWjT,EAAIa,WAErB,GAAIjL,EAAA6B,QAAQP,GACR,OAAOA,EAAK+E,KAAKC,GAAKA,EAAE2E,aAAeoS,GAG3C,GAAI/b,EACA,OAAO+b,IAAa/b,EAAK2J,WAG7B,OAAO,IA7B+B,CAAC3J,EAAM8I,EAAKlG,IAsEtD,OApEA1E,EAAM2O,UAAU,KACZiP,EAASpd,EAAA6W,QAAQzM,KAClB,CAACA,EAAIZ,YAERhK,EAAM2O,UAAU,KACZ+O,EACIld,EAAAuG,UAAU,MAAO6D,EAAK,CAClBlI,QAAS1B,EAAM0B,QACfC,QAAS3B,EAAM2B,YAGxB,CACCD,EAAUA,EAAQsH,UAAYtH,EAC9BC,EAAUA,EAAQqH,UAAYrH,IAwD9B3C,EAAA+H,cAAC0V,EAAS,CACN1Y,UA5BR,WACI,MAAM+Y,EAAU,CAAC,SAsBjB,OApBI9c,EAAM4M,UACNkQ,EAAQ7Y,KAAK,YAGbjE,EAAMmc,eACNW,EAAQ7Y,KAAK,kBAGbjE,EAAMoc,aACNU,EAAQ7Y,KAAK,gBAGb0Y,GACAG,EAAQ7Y,KAAK,SAGbgY,GACAa,EAAQ7Y,KAAK,SAGV6Y,EAAQ3Y,KAAK,KAKL4Y,GACXpW,QAASA,EACTzC,UAAWyI,EACXtF,QA3CR,WACIrH,EAAMoC,YAAYwH,IA2Cd0S,aAxCR,WACItc,EAAMsc,aAAa1S,IAwCf2S,aArCR,WACIvc,EAAMuc,aAAa3S,KAsCdA,EAAImC,YAWjBpM,EAAAqc,QAAA,SAAwBhc,GAKpB,OAAOhB,EAAA+H,cAAA,MAAA,CAAKM,QAJZ,WACIrH,EAAMqH,QAAQrH,EAAM4J,OAGO5J,EAAMmZ,oGCjKzC,MAAAna,EAAAC,EAAAC,EAAA,SACAC,EAAAF,EAAAC,EAAA,qBAEAM,EAAAP,EAAAC,EAAA,GACA8d,EAAA/d,EAAAC,EAAA,GAEMU,EAAYT,EAAAU,QAAOC,GAAG;;;;;;kBAMVE,GACVA,EAAMiQ,WAAa,iBAAmB;;;;;EAOxCgN,EAAU9d,EAAAU,QAAOqd,IAAI;;;EAKrBC,EAAWhe,EAAAU,QAAOqd,IAAI;;EAc5Bvd,EAAAqQ,SAAA,SAAyBhQ,GACrB,MAAMc,KAAEA,EAAAqF,SAAMA,EAAA8J,WAAUA,EAAA9O,SAAYA,EAAA6G,SAAUA,EAAAkI,SAAUA,GAAalQ,EAC/Dod,EAAW5d,EAAAoS,YAAY5R,EAAMsD,QAEnC,OAAI9D,EAAA6B,QAAQP,KAAUA,EACX,KAIP9B,EAAA+H,cAACnH,EAAS,CAACqQ,WAAYA,EAAYlM,UAAU,uBACzC/E,EAAA+H,cAACiW,EAAAK,YAAW,CACRvc,KAAMA,EACNwc,KAAM,EACN/Y,KAAK,OACLgZ,YAAa/d,EAAAmS,gBAAgB3R,EAAMsD,QACnCnC,SAAUA,EACV6G,SAAUA,EACVkI,SAAUA,IAEdlR,EAAA+H,cAACkW,EAAO,CAAClZ,UAAU,WAAS,KAC5B/E,EAAA+H,cAACiW,EAAAK,YAAW,CACRvc,KAAMA,EACNwc,KAAMnX,EACN5B,KAAK,SACLpD,SAAUA,EACV6G,SAAUA,EACVkI,SAAUA,IAEbkN,GACGpe,EAAA+H,cAACoW,EAAQ,CAACpZ,UAAU,YACfvE,EAAAkF,WAAW5D,EAAMsc,kGCrEtC,MAAApe,EAAAC,EAAAC,EAAA,SACAC,EAAAF,EAAAC,EAAA,qBAEAM,EAAAP,EAAAC,EAAA,GAUMse,EAAQre,EAAAU,QAAOC,GAAG;;;;;;;;;;;;EAclB2d,EAAOte,EAAAU,QAAOuQ,MAAM;;;;;;;;;;;;;;;;;;;EAqBpBsN,EAAiBve,EAAAU,QAAOC,GAAG;;;;;;UAMvB0d;;;;;;;;;;EAYJG,EAAQxe,EAAAU,QAAOO,KAAK;;;;;;;;;;;;;;;;;;;;;;;;YAwBdod;;;;EAgBZ7d,EAAA0d,YAAA,SAA4Brd,GACxB,MAAMc,KAAEA,EAAAwc,KAAMA,EAAA/Y,KAAMA,EAAAgZ,YAAMA,EAAArN,SAAaA,EAAAlI,SAAUA,GAAahI,EACxDyH,EAAMzI,EAAMgb,OAAgC,OAC3C4D,EAASC,GAAc7e,EAAMkN,UAAS,IACtChL,EAAO4c,GAAY9e,EAAMkN,SAC5B6R,EAAajd,IAejB,SAASid,EAAajd,GAClB,OAAQyD,GACJ,IAAK,OACD,OAAO/E,EAAAkF,WAAW5D,EAAMyc,EAAc,IAAM,KAChD,IAAK,SACD,OAAOzc,EAAKqJ,aAGpB,OAAO,EAWX,SAAS6T,IACLH,GAAW,GAGf,SAASI,IACD/I,SAAS5H,cAAc,YAAc7F,EAAId,SACzCkX,GAAW,GAsEnB,OA3GA7e,EAAM2O,UAAU,KACZmQ,EAASC,EAAa/d,EAAMc,QAC7B,CAACA,EAAKkI,YAEThK,EAAM2O,UAAU,KACZ,GAAIzM,GAAS0c,EAAS,CAClB,MAAMvU,EAAU,IAAIhF,KAAKvD,GAEzBd,EAAMmB,SAASkI,EAAS9E,KAE7B,CAACrD,IAkGAlC,EAAA+H,cAAC2W,EAAc,CACX3Z,UAAW,+BAA+BQ,EAC1C+X,aAAc0B,EACdzB,aAAc0B,GAEdjf,EAAA+H,cAAC4W,EAAK,CAAAtN,kCAAA,EAEFpI,KAAK,SACLR,IAAKA,EACL6V,KAAMA,EACNpc,MA9FJ0c,EACO1c,EAEA8P,SAAS9P,GAAgB1B,EAAAkU,gBAAgBxS,GAAgB,GA4F5DC,SA9EZ,SAAkB2J,GACd,MAAM5J,MAAEA,GAAU4J,EAAE0B,cAEpB,GAAItL,EAAMsE,OAAS,EACfsF,EAAEoT,sBAIN,GAAc,KAAVhd,EACA4c,EAAS5c,QACN,GAAIJ,EAAM,CACb,MAAMuI,EAAU,IAAIhF,KAAKvD,GAEzBgd,EAASC,EAAa1U,MAkElBnB,QAAS8V,EACTG,OAAQF,EACRG,QA1BZ,SAAiBtT,GACb,OAAQA,EAAEqI,SACN,KAAK3T,EAAA+X,KAAKK,MACN5P,EAASlH,EAAMyD,GACf,MACJ,KAAK/E,EAAA+X,KAAKO,IACN5H,OAAS1M,EAAWe,OAsBxBvF,EAAA+H,cAACyW,EAAK,KACFxe,EAAA+H,cAAC0W,EAAI,CAAApN,kCAAA,EAEDtD,UAAW,EACX1F,QAtEhB,WACI,GAAIvG,EAAM,CACN,MAAMuI,EAAU,MACZ,OAAQ9E,GACJ,IAAK,OACD,OAAO/E,EAAA6S,SAASvR,EAAM,GAC1B,IAAK,SACD,OAAOtB,EAAA8S,WAAWxR,EAAMwc,KALpB,GAWZjU,GACArJ,EAAMmB,SAASkI,EAAS9E,MAwDH,KAIrBvF,EAAA+H,cAAC0W,EAAI,CAAApN,kCAAA,EAEDtD,UAAW,EACX1F,QA1DhB,WACI,GAAIvG,EAAM,CACN,MAAMuI,EAAU,MACZ,OAAQ9E,GACJ,IAAK,OACD,OAAO/E,EAAAmT,cAAc7R,EAAM,GAC/B,IAAK,SACD,OAAOtB,EAAAkT,gBAAgB5R,EAAMwc,KALzB,GAWZjU,GACArJ,EAAMmB,SAASkI,EAAS9E,MA4CD,kGCzPvC,MAAAvF,EAAAC,EAAAC,EAAA,SACAC,EAAAF,EAAAC,EAAA,qBAEAkM,EAAAnM,EAAAC,EAAA,GACAM,EAAAP,EAAAC,EAAA,GAyBMU,EAAYT,EAAAU,QAAOC,GAAG;eACbE,GAA+BA,EAAMqe,KAAO,OAAS;;;;;;;EASpE1e,EAAAgI,UAAA,SAA0B3H,GACtB,MAAMuE,KACFA,EAAA7C,QACAA,EAAAC,QACAA,EAAA1B,OACAA,EAAA2D,SACAA,EAAAiB,cACAA,EAAAlC,YACAA,EAAAC,YACAA,EAAAgF,QACAA,EAAAlF,QACAA,EAAAmF,OACAA,GACA7H,GACGiM,GAAcjN,EAAMkN,SAAS1M,EAAA2M,iBAC9BkS,GACQ,QAAT9Z,GACY,SAATA,GACS,WAATA,GACS,WAATA,IACJ/C,QAAQoC,GACN9C,EAuBMtB,EAAA6B,QAAQrB,EAAMc,MAAQd,EAAMc,KAAK+D,GAAiB7E,EAAMc,KAGpE,OACI9B,EAAA+H,cAACnH,EAAS,CAACmE,UAAU,4BAA4Bsa,KAAMA,GACnDrf,EAAA+H,cAAA,MAAA,KACI/H,EAAA+H,cAACqE,EAAAyB,OAAM,CACH9I,UAAU,8BACVgJ,UAAW,EACX9M,OAAQA,EACRoH,QAASO,GAET5I,EAAA+H,cAAA,IAAA,KAAIkF,EAAWnL,EAAK2J,cAExBzL,EAAA+H,cAACqE,EAAAyB,OAAM,CACH9I,UAAU,6BACVgJ,UAAW,EACX9M,OAAQA,EACRoH,QAASQ,GAER/G,EAAKwL,gBAGdtN,EAAA+H,cAAA,MAAA,KACI/H,EAAA+H,cAACqE,EAAAyB,OAAM,CACH9I,UAAU,mCACVgJ,UAAW,EACX7I,YA/CRxC,IAAW1B,EAAMc,OACVtB,EAAAkQ,aAAalQ,EAAAmQ,aAAa7O,GAAO,GAAKY,EA+CrCzB,OAAQA,EACRoH,QAASzE,GAAW,KAIxB5D,EAAA+H,cAACqE,EAAAyB,OAAM,CACH9I,UAAU,oCACVgJ,UAAW,EACX9M,OAAQA,EACRoH,QAAS3E,GAAO,KAIpB1D,EAAA+H,cAACqE,EAAAyB,OAAM,CACH9I,UAAU,mCACVgJ,UAAW,EACX7I,SAzDhB,WACI,GAAIvC,GAAW3B,EAAMc,KAAM,CACvB,MAAMwd,EAAW9e,EAAA6B,QAAQrB,EAAMc,MACzBd,EAAMc,KAAKd,EAAMc,KAAK0E,OAAS,GAC/BxF,EAAMc,KAEZ,OAAOtB,EAAAwK,QAAQxK,EAAAgQ,WAAW8O,GAAW,GAAK3c,EAG9C,OAAO,EAgDe4c,GACVte,OAAQA,EACRoH,QAAS1E,GAAW,6KCjIxC,MAAA3D,EAAAC,EAAAC,EAAA,SACAC,EAAAF,EAAAC,EAAA,qBACAkM,EAAAnM,EAAAC,EAAA,GAMAM,EAAAP,EAAAC,EAAA,GA6BaS,EAAA6c,KAAOrd,EAAAU,QAAOC,GAAG;;;;;;EAQjBH,EAAAC,UAAYT,EAAAU,QAAOF,EAAA6c,KAAK;;;;;cAKvBxc,GACNA,EAAMkE,SAAW,cAAgB;;;;EAMzC,MAAMyZ,EAAQxe,EAAAU,QAAOqd,IAAI;;;cAGXld,GAAwBA,EAAMkE,SAAW,cAAgB;sBACjDlE,GACdA,EAAMkE,SAAW,OAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA8BrBvE,EAAA6e,YAAcrf,EAAAU,QAAOuL,EAAAmF,YAAY;;EAI9C,MAAMkO,EAAetf,EAAAU,QAAOqd,IAAI;;;;EAMnBvd,EAAA+e,YAAcvf,EAAAU,QAAOqd,IAAI;;;EAKzBvd,EAAAgf,KAAOxf,EAAAU,QAAOqd,IAAI;;;;;oBAKXld,GAA6BA,EAAM4e;;EAIvD,MAAMC,EAAc7e,IAChB,SAAS8e,IACL,MAAMpb,SAAEA,EAAAE,SAAUA,GAAa5D,EAE/B,OAAK4D,GAAYF,EACN,OAGJ,WAcX,OACI1E,EAAA+H,cAACpH,EAAAgf,KAAI,CACDC,KAbR,WACI,OAAQE,KACJ,IAAK,WACD,MAAO,KACX,IAAK,OACD,MAAO,IACX,QACI,MAAO,IAMLC,GACNhb,UAAW,uBAAuB+a,OAKjCnf,EAAAqf,sBAAwBhf,GACjChB,EAAA+H,cAACpH,EAAA6e,YAAW,CACRza,UAAU,yBACVgJ,UAAW,EACX7I,SAAUlE,EAAMkE,SAChBmD,QAASrH,EAAMqH,SAEfrI,EAAA+H,cAAC0X,EAAY,KAAA,MAIrB,MAAMQ,EAAY,CAACzf,EAAA+X,KAAKQ,UAAWvY,EAAA+X,KAAKS,OAAQxY,EAAA+X,KAAKM,KAE/CqH,EAAiB,CACnB1f,EAAA+X,KAAKW,MACL1Y,EAAA+X,KAAKI,WACLnY,EAAA+X,KAAKE,YACLjY,EAAA+X,KAAKC,SACLhY,EAAA+X,KAAKG,WACLlY,EAAA+X,KAAKM,KAGT,MAAMpP,UAAuBzJ,EAAMwZ,cAqC/BjY,YAAYP,GACRQ,MAAMR,GAlCFS,KAAA0e,OAA4B,GAC5B1e,KAAA2e,SAAU,EAsfV3e,KAAAyH,QAAU,MACd,IAAIrH,EAAU,EAEd,OAAOiK,IACH/J,aAAaF,GAEb,MAAMT,EAAQ0K,EAAE0B,cAEhBhN,EAAAuV,cAAc3U,GAEdS,EAAUG,WAAW,KACjB,IAAKP,KAAKsB,MAAMsd,aAAe5e,KAAK2e,QAAS,CACzC,MAAME,EAAc9f,EAAA+M,aAAanM,EAAO,cAExCK,KAAKT,MAAMiD,oBAAoBqc,KAEpC,MAhBO,GAndd7e,KAAKsB,MAAQ,GAEbtB,KAAK8e,YAAc9e,KAAK8e,YAAYrd,KAAKzB,MACzCA,KAAK+e,UAAY/e,KAAK+e,UAAUtd,KAAKzB,MACrCA,KAAK2d,QAAU3d,KAAK2d,QAAQlc,KAAKzB,MACjCA,KAAKyH,QAAUzH,KAAKyH,QAAQhG,KAAKzB,MACjCA,KAAK4G,QAAU5G,KAAK4G,QAAQnF,KAAKzB,MACjCA,KAAKgf,WAAahf,KAAKgf,WAAWvd,KAAKzB,MACvCA,KAAK0d,OAAS1d,KAAK0d,OAAOjc,KAAKzB,MAC/BA,KAAKU,SAAWV,KAAKU,SAASe,KAAKzB,MACnCA,KAAK2C,QAAU3C,KAAK2C,QAAQlB,KAAKzB,MACjCA,KAAKuC,QAAUvC,KAAKuC,QAAQd,KAAKzB,MACjCA,KAAKyG,SAAWzG,KAAKyG,SAAShF,KAAKzB,MA7CvCif,mBACI,OAAOjf,KAAKT,MAAMsD,OAAOuQ,MAAM,IAAIyH,OAAO,CAACC,EAAMpK,KAC7C,MAAMwO,EAAWpE,EAAKA,EAAK/V,OAAS,GAWpC,OARIma,GAAaxO,IAASwO,EAASC,OAAO,EAAG,IACxCpgB,EAAA+R,gBAAgBV,KAAK8O,IAAangB,EAAA+R,gBAAgBV,KAAKM,GAExDoK,EAAKA,EAAK/V,OAAS,IAAM2L,EAEzBoK,EAAO,IAAIA,EAAMpK,GAGdoK,GACR,IAGPqC,cACI,OAAO1I,SAAS5H,cAAc,UAGlCuS,iBACI,MAGMnT,EAHcjM,KAAKT,MACpBsD,OAAQuQ,MAAMrU,EAAA+R,iBACd/C,OAAOsR,GAAKte,QAAQse,IACHC,UAAUvgB,EAAA2X,aAEhC,OAAO1W,KAAK0e,QAAc,IAAPzS,EAAW,EAAIA,GAqB/BnM,mBAAmBuE,GACtB9D,WAAW,KACP,IAAKP,KAAK2e,QACN,OAGJ,MAAMnY,KAAEA,EAAA/F,MAAMA,EAAAoC,OAAOA,EAAAiB,KAAQA,EAAAhD,gBAAMA,GAAoBd,KAAKT,MACtDggB,EAAWvf,KAAK0e,OAAOtZ,KAAKyQ,GAAOA,IAAQ7V,KAAKmd,SAChDqC,EACO,QAAT1b,GAA2B,UAATA,GAA6B,SAATA,EAE1C,IAAKyb,GACG/Y,EAAM,CACN,MAAM4Y,WAAEA,GAAepf,KAEvB,GAAIqE,EAAU5D,QAAUA,GAAAA,EAAgB,CACpC,MAAM8S,EAAQxU,EAAAoU,UAAU1S,EAAOoC,GAE/B7C,KAAK0e,OAAOe,QACR,CAAC9f,EAAOsM,IAAOtM,EAAMgU,UAAYJ,EAAMtH,IAGvCmT,GAAcI,GACdJ,EAAWM,QAIfF,IACKnb,EAAUmC,MAAQ/F,IAAU4D,EAAU5D,OACnC2e,GACArgB,EAAAuV,cAAc8K,IAOlC,GACI5Y,GACAnC,EAAUP,OAASA,IAClB9D,KAAKsB,MAAMsd,aACZY,EACF,CACE,MAAM7f,EAAQK,KAAK0e,OAAOiB,KAAKxS,IAC3B,MAAMtK,EAAS9D,EAAA+M,aAAaqB,EAAI,cAGhC,OAFapO,EAAAgF,cAAclB,KAEXiB,IAGpB/E,EAAAuV,cAAc3U,GAGlB,IAAK6G,GAAQ/F,EAAO,CAChB,MAAM8S,EAAQxU,EAAAoU,UAAU1S,EAAOoC,GAE/B7C,KAAK0e,OAAOe,QAAQ,CAAC9f,EAAOsM,IAAOtM,EAAMgU,UAAYJ,EAAMtH,IAG3DzF,GAAQnC,EAAU5D,QAAUA,IAAUK,GACtCd,KAAK0e,OAAOe,QAAQ9f,GAAUA,EAAMgU,UAAY,IAG/CnN,GACDxG,KAAKyE,SAAS,CAAEma,aAAa,KAElC,IAGA9e,oBACHE,KAAK2e,SAAU,EAEX3e,KAAKT,MAAMkB,OACXT,KAAK4f,cAIN9f,uBACHE,KAAK2e,SAAU,EAGZ7e,SACH,MAAM0F,YACFA,EAAA/E,MACAA,EAAA0C,SACAA,EAAAF,SACAA,EAAAQ,SACAA,EAAAmE,cACAA,EAAAF,cACAA,EAAAlB,KACAA,GACAxG,KAAKT,MACHsgB,EAAkB7f,KAAKT,MAAMoI,sBAAwBgD,EAAAoF,YACrD+P,EACF9f,KAAKT,MAAMsI,gBAAkB3I,EAAAqf,sBAC3BwB,EAAkBva,IAAgBgB,EAClCwZ,EAAcvf,IAAUgD,EACxBwc,EAAWhd,IAAaE,EACxB+c,OACgBnd,IAAlB2E,EAA8BA,EAAgB0W,EAElD,OACI7f,EAAA+H,cAACpH,EAAAC,UAAS,CAAA0Q,YACI,QACVvM,UAAU,wCACV0D,IAAKhH,KAAKT,MAAM4gB,SAChB1c,SAAUA,EACVmD,QAAS5G,KAAKyG,UAEdlI,EAAA+H,cAACpH,EAAA6c,KAAI,KACAmE,GACG3hB,EAAA+H,cAAC4Z,EAAa,CACV/c,SAAUA,EACVF,SAAUA,IAGlB1E,EAAA+H,cAACpH,EAAA6c,KAAI,KACA/b,KAAKiH,cACL8Y,GACGxhB,EAAA+H,cAACpH,EAAA+e,YAAW,CAAC3a,UAAU,8BAClBkC,KAKjBjH,EAAA+H,cAACpH,EAAA6c,KAAI,KACAiE,GACGzhB,EAAA+H,cAACwZ,EAAc,CACXrc,SAAUA,EACVmD,QAAS5G,KAAKuC,WAGpB0d,GACE1hB,EAAA+H,cAACuZ,EAAe,CACZ7P,GAAIpI,EACJnE,SAAUA,EACV+C,KAAMA,MAQtB1G,cACJ,MAAM0G,KAAEA,EAAA/C,SAAMA,EAAAjE,OAAUA,EAAAiB,MAAQA,GAAUT,KAAKT,MACzC6gB,EAAiBpgB,KAAKT,MAAMuI,eAC5BuY,GAAmB5c,IAAajE,EAEtC,IAAKgH,IAAS/F,EACV,OAAO,KAGX,GAAI2f,EACA,OAAO7hB,EAAA+H,cAAC8Z,EAAcpX,OAAAC,OAAA,GAAKjJ,KAAKT,QAGpC,MAAM0f,EAAejf,KAAKif,aAE1B,OACI1gB,EAAA+H,cAACpH,EAAA6c,KAAI,KACAkD,EAAa9U,IAAI,CAACkJ,EAAOpH,KACtB,GAAIoH,EAAMD,MAAM,IAAIhO,KAAKkb,GAAKvhB,EAAA+R,gBAAgBV,KAAKkQ,IAC/C,OAAO,KACJ,CACH,MAAMC,EAAYtB,EAAahT,EAAI,GAC7BuU,EAAgBzf,QAAQhC,EAAAgF,cAAcsP,IACtC7N,EAAcgb,EAAgBnN,OAAQtQ,EAE5C,OACIxE,EAAA+H,cAAC4W,EAAK,CAAAtN,kCAAA,EAEFyQ,gBAAiBA,EACjB5c,SAAUA,IAAa+c,EAAaC,mBAClBjb,EAAWkb,iBACb3hB,EAAA6X,qBAAqB2J,GACrClU,IAAKgH,EAAKsN,aACEtN,EACZrM,IAAKhH,KAAK8e,YACVC,UAAW/e,KAAK+e,UAChBpB,QAAS3d,KAAK2d,QACdlW,QAASzH,KAAKyH,QACdiW,OAAQ1d,KAAK0d,OACb9W,QAAS5G,KAAK4G,QACdga,cAAe5gB,KAAKgf,WACpBte,SAAUV,KAAKU,SACfiC,QAAS3C,KAAK2C,cASlC7C,YAAYqN,GACZA,EACAnN,KAAK0e,OAAOlb,KAAK2J,GAEjBnN,KAAK0e,OAAS,GAId5e,UAAUuK,GACd,MAAM7I,kBACFA,EAAAqB,OACAA,EAAApC,MACAA,EAAAK,gBACAA,EAAA4E,SACAA,GACA1F,KAAKT,MACHI,EAAQ0K,EAAE0B,eACV4H,UAAEA,EAAAkN,YAAWA,EAAAC,gBAAaA,GAAoBnhB,EAC9Ckf,EAAc9f,EAAA+M,aAAanM,EAAO,cAClCohB,EAAgBhiB,EAAAuS,qBAAqBuN,GACrC3K,EAAMC,eACN6M,IAAe9M,GACfnT,QAAQmT,EAAI+M,YAAc/M,EAAIgN,cAEpC,IAAIC,EAAe1Q,SAASkD,EAAW,IAEvC,OAAQtJ,EAAEqI,SACN,KAAK3T,EAAA+X,KAAKK,MACV,KAAKpY,EAAA+X,KAAKO,IACV,KAAKtY,EAAA+X,KAAKQ,UACV,KAAKvY,EAAA+X,KAAKY,IACV,KAAK3Y,EAAA+X,KAAKa,MAEN,YADAtN,EAAEoT,iBAEN,KAAK1e,EAAA+X,KAAKE,YAQN,OAPA3M,EAAEoT,sBAEEoD,aAAuBO,gBACvBP,EAAYnB,QAEZ3gB,EAAAuV,cAAc3U,IAGtB,KAAKZ,EAAA+X,KAAKI,WAQN,OAPA7M,EAAEoT,sBAEEqD,aAA2BM,gBAC3BN,EAAgBpB,QAEhB3gB,EAAAuV,cAAc3U,IAGtB,KAAKZ,EAAA+X,KAAKC,SACV,KAAKhY,EAAA+X,KAAKG,WAGN,GAFA5M,EAAEoT,kBAEGsD,EACD,OAGJ,MAAMM,EAAYhX,EAAEqI,UAAY3T,EAAA+X,KAAKC,SAMrC,GAJIuK,MAAMH,KACNA,EAAe,GAGf5Q,SAAS4Q,GAAe,CACxB,MAAM7Q,EAAavR,EAAAgF,cAAc8a,GAEjC,GAAK/d,GAgBD,GAAIL,GAAS6P,EAAY,CACrB,MAAMnB,EAAYkS,EAAY,MAAQ,WAEhCzY,EAAU7J,EAAAsW,eACZ5U,EACA6P,EACAnB,EACAzJ,GAQJ,GANgB3G,EAAAuG,UACZ,MACAsD,EACA5I,KAAKT,OAGI,CACT,MAAMgiB,EAAYxiB,EAAAoU,UAAUvK,EAAS/F,GAErC7C,KAAK0e,OAAOvU,IACR,CAAC0L,EAAK5J,IAAO4J,EAAIlC,UAAY4N,EAAUtV,UAnCjC,CAClB,MAAMyF,EAAqB,WAAfpB,GAA0B5K,GAAgB,EAChD8b,EACFL,GAAgBE,EAAY3P,GAAOA,GACjC+P,EAAQ1iB,EAAAwS,oBACViQ,EACA3C,GAGA4C,IACA9hB,EAAMgU,UACe,iBAAV8N,EACDA,EACA1iB,EAAAgU,aAAayO,IA4B/BziB,EAAAuV,cAAc3U,GACd6B,EAAkBzC,EAAAuU,UAAUtT,KAAK0e,OAAQ7b,IAE7C,OAGR,MAAM6N,EAAO3R,EAAA0T,mBAAmBpI,EAAEqI,SAC5BgP,EAAa/N,IAAcqN,EAAerN,EAAYjD,EAAOA,EAEnE,GAAI8N,EAAU1L,SAASzI,EAAEqI,UAAYrI,EAAEsX,SAAWtX,EAAEuX,QAChD,OAGJ,IAAKb,EAED,YADA1W,EAAEoT,iBAIN,MAAMgE,EAAQ1iB,EAAAwS,oBAAoBmQ,EAAY7C,GAU9C,GARK4C,EAEuB,iBAAVA,IACdpX,EAAEoT,iBAEF9d,EAAMgU,UAAY8N,GAJlBpX,EAAEoT,iBAQFzd,KAAKsB,MAAMsd,aACXvU,EAAEqI,UAAY3T,EAAA+X,KAAKQ,WACnBjN,EAAEqI,UAAY3T,EAAA+X,KAAKS,OACrB,CACE,MAAO6H,GAAcpf,KAAK0e,OAC1B,IAAImD,EAAgB9iB,EAAAwS,oBAAoBb,EAAMmO,GAE1CgD,IAAmC,IAAlBA,IACjBA,EAAgBnR,GAGhBmR,IACAxX,EAAEoT,iBAEFzd,KAAK0e,OAAOe,QAAQ,CAACtS,EAAIlB,IAAY,IAANA,IAAYkB,EAAGwG,UAAY,KAE7B,IAAzBkO,EAAc9c,OACdhG,EAAAuV,cAAc8K,IAEdrgB,EAAA2J,iBAEA0W,EAAWzL,UAAYkO,EACvBzC,EAAWM,QAEX3gB,EAAAuV,cAAc8K,EAAY,CAAC,SAMlC4B,GAAgBrN,EAAU5O,QAAU8Z,EAAY9Z,QACjDsF,EAAEoT,iBAIF3d,QAAQuK,GACZ,MAAM7I,kBAAEA,EAAAqB,OAAmBA,EAAA0E,SAAQA,EAAAd,SAAUA,GAAazG,KAAKT,MACzDI,EAAQ0K,EAAE0B,eACV4H,UAAEA,EAAAkN,YAAWA,EAAAC,gBAAaA,GAAoBnhB,EAC9CmiB,EAAY/iB,EAAA+M,aAAanM,EAAO,cAEtC,GAAI0K,EAAEqI,UAAY3T,EAAA+X,KAAKK,MAOnB,OANA9M,EAAEoT,iBAEEzd,KAAKmd,SACLnd,KAAKmd,QAAQ4E,YAEjBxa,IAIJ,GAAI8C,EAAEqI,UAAY3T,EAAA+X,KAAKO,KAAO5Q,EAC1BA,SAIJ,GAAIzG,KAAKsB,MAAMsd,YACPvU,EAAEqI,UAAY3T,EAAA+X,KAAKQ,WAAajN,EAAEqI,UAAY3T,EAAA+X,KAAKS,SAEnDvX,KAAK0e,OAAOe,QAAQtS,GAAOA,EAAGwG,UAAY,IAE1C5U,EAAAuV,cAActU,KAAK0e,OAAO,KAG9B1e,KAAKyE,SAAS,CAAEma,aAAa,SAI5B,GAAIvU,EAAEqI,UAAY3T,EAAA+X,KAAKQ,UACpB3D,EACAhU,EAAMgU,UAAY,GACXmN,aAA2BM,iBAClCriB,EAAAuV,cAAcwM,QAKjB,GACDnN,EAAW5O,QAAU+c,EAAU/c,SAC1B0Z,EAAe3L,SAASzI,EAAEqI,UAC/BrI,EAAEqI,UAAY3T,EAAA+X,KAAKY,KACnBrN,EAAEqI,UAAY3T,EAAA+X,KAAKa,MACrB,CACE,IACKtN,EAAEqI,UAAY3T,EAAA+X,KAAKY,KAAOrN,EAAEqI,UAAY3T,EAAA+X,KAAKa,QAC9ChE,EAAU5O,OAAS+c,EAAU/c,OAC/B,CACE,MAAMuL,EAAavR,EAAAgF,cAAc+d,GAEjC,IAAK/iB,EAAAsR,mBAAmBsD,EAAWrD,GAC/B,OAIHuQ,EAEMA,aAAuBO,iBAC9BriB,EAAAuV,cAAcuM,GAFd9hB,EAAAuV,cAAc3U,GAKlB6B,EAAkBzC,EAAAuU,UAAUtT,KAAK0e,OAAQ7b,KAIzC/C,QAAQuK,GACZtL,EAAAuV,cAAcjK,EAAE0B,eAGZjM,WAAWuK,GACf,MAAM1K,EAAQ0K,EAAE0B,cAEZpM,EAAMqiB,YAAchiB,KAAK0e,OAAOtZ,KAAK+H,GAAMpM,QAAQoM,EAAGwG,cACtD5U,EAAAuV,cAActU,KAAK0e,OAAO,IAC1B3f,EAAAuV,cAAc3U,EAAMqiB,YACpBhiB,KAAKyE,SAAS,CAAEma,aAAa,GAAQ5e,KAAKT,MAAMiJ,cAwBhD1I,OAAOuK,GACX,IAAKrK,KAAKsB,MAAMsd,YAAa,CACzB,MAAMjf,EAAQ0K,EAAEC,OACV7J,EAAQd,EAAMgU,UACdmO,EAAY/iB,EAAA+M,aAAanM,EAAO,cAChC2Q,EAAavR,EAAAgF,cAAc+d,GAEjC,GAAIxR,EAAY,CACZ,MAAM2R,EAAcljB,EAAA4X,SAASlW,EAAO6P,GAEhC2R,IACAtiB,EAAMgU,UAAYsO,IAM9B1hB,WAAW,KACP,MAAM4c,QAAEA,GAAYnd,KAGhBA,KAAK2e,SACL3e,KAAKT,MAAMkH,UACXzG,KAAKT,MAAMiH,MACX2W,IACCpe,EAAA+M,aAAaqR,EAAS,mCAEvBnd,KAAKT,MAAMkH,YAEhB,GAGC3G,SAASuK,GACb,MAAMxH,OAAEA,EAAArB,kBAAQA,GAAsBxB,KAAKT,MACrCI,EAAQ0K,EAAE0B,eACV4H,UAAEA,EAAAkN,YAAWA,GAAgBlhB,EAEnC6B,EAAkBzC,EAAAuU,UAAUtT,KAAK0e,OAAQ7b,IAErC8Q,EAAU5O,QAAUhG,EAAA+M,aAAanM,EAAO,cAAcoF,QAClD8b,aAAuBO,iBACvBP,EAAYnB,QAKhB5f,QAAQuK,GACZA,EAAEoT,iBAEF,MAAMrT,EAAOC,EAAE6X,cAAcC,QAAQ,cAEjC/X,IACApK,KAAKT,MAAMoD,QAAQyH,GAEfC,EAAEC,kBAAkB8W,iBACpB/W,EAAEC,OAAOyX,QAKbjiB,QAAQuK,GACZA,EAAE+X,kBAEFpiB,KAAKT,MAAMgD,UAGPzC,SAASuK,GACb,MAAM7D,KAAEA,EAAA/C,SAAMA,EAAAgD,SAAUA,GAAazG,KAAKT,MAEtCkE,GAIAgD,IACKzG,KAAK0e,OAAOtZ,KAAKyQ,GAAOA,IAAQxL,EAAEC,SAAY9D,GAC/CC,MAMHvH,EAAAgJ,MAAQ3J,EAAM8jB,WACvB,CAAC9iB,EAAgCyH,IAC7BzI,EAAA+H,cAAC0B,EAAcgB,OAAAC,OAAA,CAACkX,SAAUnZ,GAASzH,iGC1wB3C,MAAAhB,EAAAC,EAAAC,EAAA,SACAC,EAAAF,EAAAC,EAAA,qBACAkM,EAAAnM,EAAAC,EAAA,GAEAM,EAAAP,EAAAC,EAAA,GACAK,EAAAN,EAAAC,EAAA,IAQM2f,EAAc,IAAM7f,EAAA+H,cAACxH,EAAAof,KAAI,CAAC5a,UAAU,sBAAsB6a,KAAK,OAE/DmE,EAAc5jB,EAAAU,SAcpB,SAAeG,GACX,MAAMkB,MAAEA,EAAA6C,UAAOA,GAAc/D,EACvB6gB,EAAiB7gB,EAAMuI,eAEvBya,EAAclY,IAChB,IAA0B,IAAtB9K,EAAMgF,YAAsB,CAC5B,MAAMwH,cAAEA,GAAkB1B,EAE1B9J,WAAW,KACP,MAAMF,EAAO,IAAIuD,KACbmI,EAAcD,aAAa,cAAgB,GAEzC/C,EAAQ0H,SACV1E,EAAcD,aAAa,eAAiB,IAC5C,IAGJvM,EAAMkJ,cAAcpI,EAAM0I,IAC3B,QACIxJ,EAAMkH,UACblH,EAAMkH,YAIR+b,EACG/hB,EAID2f,EACO7hB,EAAA+H,cAAC8Z,EAAcpX,OAAAC,OAAA,GAAK1J,IAGV,IAAjBkB,EAAMsE,OACCxG,EAAA+H,cAAA,OAAA,KAAOvH,EAAAkF,WAAWxD,EAAM,GAAIlB,EAAMsD,SAIzCtE,EAAA+H,cAAA/H,EAAAkkB,SAAA,KACKhiB,EAAM0J,IAAI,CAAC9E,EAAG4G,KACX,MAAMD,EAAMjN,EAAAkF,WAAWoB,EAAG9F,EAAMsD,QAEhC,OAAI9D,EAAA4B,UAAU0E,EAAG9F,EAAM2E,WAEf3F,EAAA+H,cAACoc,EAAS,CAACrW,IAAKJ,EAAGrF,QAASrH,EAAMkH,UAC7BuF,GAKLzN,EAAA+H,cAAA,OAAA,CACI+F,IAAKJ,EAAC0W,aACM1W,EAACM,YACFlH,EAAEud,eACbhc,QAAS2b,GAERvW,MA9Bd,KAuCf,OAAOzN,EAAA+H,cAAA,MAAA,CAAKhD,UAAWA,GAAYkf,KA/EN;;;;;;;;EAU3BE,EAAYhkB,EAAAU,QAAOqd,IAAI;;EAwEhBvd,EAAA+I,WAAa1J,EAAM8jB,WAC5B,CAAC9iB,EAAqCyH,KAClC,MAAMxB,YACFA,EAAA/E,MACAA,EAAA+F,KACAA,EAAA/C,SACAA,EAAAmE,cACAA,EAAAF,cACAA,EAAAjB,SACAA,GACAlH,EACEsgB,EAAkBtgB,EAAMoI,sBAAwBgD,EAAAoF,YAChD+P,EAAiBvgB,EAAMsI,gBAAkB/I,EAAAyf,sBACzCwB,EAAkBva,IAAgB/E,EAClCyf,OACgBnd,IAAlB2E,EAA8BA,EAAgB0W,EAgBlD,SAAST,EAAQtT,GACb,OAAQA,EAAEqI,SACN,KAAK3T,EAAA+X,KAAKO,IACF7Q,GAAQC,GACRA,KAMhB,OAxBAlI,EAAM2O,UAAU,KACZuH,SAASoO,KAAKC,iBAAiB,QAASnF,GAEjC,KACHlJ,SAASoO,KAAKE,oBAAoB,QAASpF,KAEhD,IAmBCpf,EAAA+H,cAACxH,EAAAK,UAAS,CAAA0Q,YACI,QACVvM,UAAU,wCACVG,SAAUA,EACVuD,IAAKA,EACLJ,QAASnG,GAASgD,OAAWV,EAAY0D,GAEzClI,EAAA+H,cAACxH,EAAAid,KAAI,KACAmE,GAAiB3hB,EAAA+H,cAAC4Z,EAAa,MAChC3hB,EAAA+H,cAACxH,EAAAid,KAAI,KACDxd,EAAA+H,cAACgc,EAAWtZ,OAAAC,OAAA,GAAK1J,IAChBwgB,GACGxhB,EAAA+H,cAACxH,EAAAmf,YAAW,CAAC3a,UAAU,8BAClBkC,KAKjBjH,EAAA+H,cAACxH,EAAAid,KAAI,KACAtb,GACGlC,EAAA+H,cAACwZ,EAAc,CAACrc,SAAUA,EAAUmD,QArCpD,SAAiByD,GACbA,EAAE+X,kBAEF7iB,EAAMgD,aAoCEhE,EAAA+H,cAACuZ,EAAe,CACZ7P,GAAIpI,EACJnE,SAAUA,EACV+C,KAAMA,EACNI,QAASnD,OAAWV,EAAY0D,uHCrKxD,MAAAkE,EAAAnM,EAAAC,EAAA,GA8I6BuK,OAAAga,eAAA9jB,EAAA,gCAAA,CAAA+jB,YAAA,EAAAC,IAAA,WAAA,OA9IpBvY,EAAAwY","sourcesContent":["import * as React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Select } from 'react-slct';\nimport { MenuContainerProps } from 'react-slct/dist/typings';\nimport { Menu } from './menu';\nimport { MenuTitle } from './menu/title';\nimport { Value } from './value/value';\nimport {\n    isUndefined,\n    startOfDay,\n    isEnabled,\n    dateFormat,\n    validateDate,\n    setDate,\n    clearSelection,\n    endOfDay,\n    isBefore,\n    isAfter,\n    dateEqual,\n    startOfWeek,\n    endOfWeek,\n    sortDates,\n    isDateFormat,\n    isTimeFormat,\n    isArray,\n    getFormatType,\n    addDays,\n    stringEqual\n} from './utils';\nimport {\n    ReactTimebombProps,\n    ReactTimebombState,\n    ReactTimebombError,\n    ReactTimebombDate,\n    FormatType\n} from './typings';\nimport { ValueMulti } from './value/value-multi';\n\nexport * from './typings';\n\ninterface MenuWrapperProps {\n    mobile?: boolean;\n}\n\nconst Container = styled.div`\n    width: 100%;\n    height: 100%;\n    position: relative;\n    background: #fff;\n`;\n\nconst MenuWrapper = styled.div`\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    border: 1px solid #ccc;\n    box-sizing: border-box;\n    padding: 0;\n    background: white;\n    z-index: 1;\n    height: 100%;\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 13px;\n\n    * {\n        box-sizing: border-box;\n    }\n\n    ${(props: MenuWrapperProps) =>\n        props.mobile\n            ? css`\n                  position: fixed;\n                  left: 50% !important;\n                  top: 50% !important;\n                  max-width: 96%;\n                  width: 360px !important;\n                  height: 320px !important;\n                  margin-left: -180px;\n                  margin-top: -160px;\n                  max-height: 100%;\n                  font-size: 16px;\n                  box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.1);\n\n                  @media (max-width: 360px) {\n                      width: 100% !important;\n                      left: 0 !important;\n                      margin-left: 0;\n                      max-width: 100%;\n                  }\n              `\n            : ''}\n`;\n\nconst BlindInput = styled.input`\n    position: absolute;\n    left: 0;\n    top: 0;\n    opacity: 0;\n    pointer-events: none;\n`;\n\nexport class ReactTimebomb extends React.Component<\n    ReactTimebombProps,\n    ReactTimebombState\n> {\n    public static MENU_WIDTH = 320;\n\n    private onToggle?: () => void;\n    private onCloseMenu?: () => void;\n    private onOpenMenu?: () => void;\n    private valueRef = React.createRef<HTMLDivElement>();\n\n    /** @internal */\n    public static getDerivedStateFromProps(\n        props: ReactTimebombProps\n    ): Partial<ReactTimebombState> | null {\n        const format = props.format!;\n        const { minDate, maxDate } = props;\n\n        return {\n            minDate: minDate ? startOfDay(minDate) : undefined,\n            maxDate: maxDate ? endOfDay(maxDate) : undefined,\n            showTime: isTimeFormat(format),\n            showDate: isDateFormat(format)\n        };\n    }\n\n    /** @internal */\n    public static defaultProps: Partial<ReactTimebombProps> = {\n        format: 'YYYY-MM-DD'\n    };\n\n    private getMobileMenuContainer(\n        MenuContainer: React.ComponentType<MenuContainerProps>\n    ) {\n        return styled(MenuContainer)`\n            position: fixed;\n            left: 0 !important;\n            top: 0 !important;\n            right: 0 !important;\n            bottom: 0 !important;\n            width: 100% !important;\n            height: 100% !important;\n            background: rgba(0, 0, 0, 0.12);\n            transform: none;\n        `;\n    }\n\n    private get className() {\n        const classNames = ['react-timebomb'];\n\n        if (this.props.className) {\n            classNames.push(this.props.className);\n        }\n\n        if (this.props.error) {\n            classNames.push('error');\n        }\n\n        if (this.props.disabled) {\n            classNames.push('disabled');\n        }\n\n        return classNames.join(' ');\n    }\n\n    private get defaultDateValue() {\n        const { value, minDate, maxDate } = this.props;\n\n        if (value) {\n            return value;\n        }\n\n        let date = new Date();\n\n        if (maxDate && isBefore(maxDate, date)) {\n            date = maxDate;\n        } else if (minDate && isAfter(minDate, date)) {\n            date = minDate;\n        }\n\n        return startOfDay(date);\n    }\n\n    private get initialState(): ReactTimebombState {\n        return {\n            allowValidation: false,\n            mode: getFormatType(this.props.format!),\n            valueText: this.props.value\n                ? dateFormat(this.props.value, this.props.format!)\n                : undefined,\n            date: this.defaultDateValue,\n            hoverDate: undefined,\n            menuHeight: 'auto',\n            selectedRange: 0,\n            preventClose: false\n        };\n    }\n\n    constructor(props: ReactTimebombProps) {\n        super(props);\n\n        const { minDate, maxDate } = props;\n\n        if (minDate && maxDate && isBefore(maxDate, minDate)) {\n            console.error(\n                '[react-timebomb]: minDate must appear before maxDate'\n            );\n        }\n\n        this.state = this.initialState;\n\n        this.onChangeValueText = this.onChangeValueText.bind(this);\n        this.emitChangeAndClose = this.emitChangeAndClose.bind(this);\n        this.onSelectDay = this.onSelectDay.bind(this);\n        this.onModeDay = this.onModeDay.bind(this);\n        this.onModeYear = this.onModeYear.bind(this);\n        this.onModeMonth = this.onModeMonth.bind(this);\n        this.onChangeMonth = this.onChangeMonth.bind(this);\n        this.onChangeYear = this.onChangeYear.bind(this);\n        this.onReset = this.onReset.bind(this);\n        this.onNextMonth = this.onNextMonth.bind(this);\n        this.onPrevMonth = this.onPrevMonth.bind(this);\n        this.onSelectTime = this.onSelectTime.bind(this);\n        this.onSubmitOrCancelTime = this.onSubmitOrCancelTime.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.onClear = this.onClear.bind(this);\n        this.onChangeFormatGroup = this.onChangeFormatGroup.bind(this);\n        this.onHoverDays = this.onHoverDays.bind(this);\n        this.onMultiValueSelect = this.onMultiValueSelect.bind(this);\n        this.onPaste = this.onPaste.bind(this);\n        this.onMobileMenuContainerClick = this.onMobileMenuContainerClick.bind(\n            this\n        );\n    }\n\n    public async componentDidUpdate(\n        prevProps: ReactTimebombProps,\n        prevState: ReactTimebombState\n    ) {\n        const { valueText, showDate, showTime, preventClose } = this.state;\n        const { value, format, selectRange, showConfirm } = this.props;\n\n        if (prevProps.format !== format || prevProps.value !== value) {\n            this.setState({\n                valueText: value ? dateFormat(value, format!) : undefined\n            });\n        }\n\n        if (!stringEqual(prevState.valueText, valueText)) {\n            const result = await this.validateValueText();\n\n            if (result.error) {\n                this.emitError(result.error, result.valueText);\n            }\n\n            if (result.date) {\n                const rangeIsComplete =\n                    selectRange &&\n                    isArray(result.date) &&\n                    result.date.length === 2;\n\n                if (\n                    (!showConfirm && !selectRange && showDate) ||\n                    rangeIsComplete\n                ) {\n                    if (prevState.mode === 'day' && !preventClose) {\n                        this.emitChangeAndClose(result.date);\n                    } else {\n                        this.emitChange(result.date);\n                    }\n                }\n\n                if (!showDate && showTime) {\n                    this.emitChange(result.date);\n                }\n            }\n        }\n    }\n\n    private setStateAsync(state: Partial<ReactTimebombState>) {\n        return new Promise((resolve) => {\n            this.setState(state as any, resolve);\n        });\n    }\n\n    private validateValueText(): Promise<{\n        date?: ReactTimebombDate;\n        error?: ReactTimebombError;\n        valueText?: string | string[];\n    }> {\n        const { valueText, allowValidation } = this.state;\n        const { format } = this.props;\n        const validDate = validateDate(valueText, format!);\n\n        return new Promise(async (resolve) => {\n            if (validDate) {\n                await this.setStateAsync({ allowValidation: true });\n\n                const enabled = isArray(validDate)\n                    ? validDate.some((d) => isEnabled('day', d, this.props))\n                    : isEnabled('day', validDate, this.props);\n\n                if (enabled) {\n                    await this.setStateAsync({ date: validDate });\n\n                    resolve({ date: validDate });\n                } else {\n                    resolve({ error: 'outOfRange', valueText });\n                }\n            } else if (valueText) {\n                resolve({ error: 'invalidDate', valueText });\n            } else if (!isUndefined(valueText) && allowValidation) {\n                resolve({ date: undefined });\n            }\n        });\n    }\n\n    public render(): React.ReactNode {\n        const {\n            placeholder,\n            showConfirm,\n            showCalendarWeek,\n            selectRange,\n            format,\n            error,\n            disabled,\n            mobile,\n            timeStep,\n            confirmComponent,\n            onOpen\n        } = this.props;\n        const {\n            showDate,\n            showTime,\n            valueText,\n            mode,\n            selectedRange,\n            minDate,\n            maxDate,\n            hoverDate\n        } = this.state;\n        const value = valueText\n            ? validateDate(valueText, format!)\n            : this.props.value;\n        const menuWidth = Math.max(\n            ReactTimebomb.MENU_WIDTH,\n            this.props.menuWidth || 0\n        );\n        const menuLeft =\n            isArray(value) &&\n            value.length === 1 &&\n            this.valueRef.current &&\n            selectRange === true\n                ? this.valueRef.current.getBoundingClientRect().left +\n                  this.valueRef.current.getBoundingClientRect().width -\n                  menuWidth\n                : undefined;\n\n        return (\n            <Select\n                value={value}\n                placeholder={placeholder}\n                error={error}\n                onOpen={onOpen}\n                onClose={this.onClose}\n            >\n                {({\n                    placeholder,\n                    open,\n                    onToggle,\n                    onClose,\n                    onOpen,\n                    onRef,\n                    MenuContainer\n                }) => {\n                    const showMenu =\n                        open && (showDate || showTime) && !disabled;\n                    const className = [this.className];\n                    const onClick = mobile\n                        ? this.onMobileMenuContainerClick\n                        : undefined;\n\n                    if (showMenu) {\n                        className.push('open');\n                    }\n\n                    this.onToggle = onToggle;\n                    this.onCloseMenu = onClose;\n                    this.onOpenMenu = onOpen;\n\n                    if (mobile) {\n                        MenuContainer = this.getMobileMenuContainer(\n                            MenuContainer\n                        );\n                    }\n\n                    return (\n                        <Container ref={onRef} className={className.join(' ')}>\n                            {this.renderValue(value, placeholder, open)}\n                            {showMenu ? (\n                                <MenuContainer\n                                    menuLeft={menuLeft}\n                                    menuWidth={menuWidth}\n                                    menuHeight={this.state.menuHeight}\n                                    onClick={onClick}\n                                >\n                                    <MenuWrapper\n                                        className=\"react-timebomb-menu\"\n                                        mobile={mobile}\n                                    >\n                                        <MenuTitle\n                                            mode={mode}\n                                            mobile={mobile}\n                                            date={this.state.date}\n                                            minDate={minDate}\n                                            maxDate={maxDate}\n                                            selectedRange={selectedRange}\n                                            showTime={showTime}\n                                            showDate={showDate}\n                                            onMonth={this.onModeMonth}\n                                            onYear={this.onModeYear}\n                                            onNextMonth={this.onNextMonth}\n                                            onPrevMonth={this.onPrevMonth}\n                                            onReset={this.onReset}\n                                        />\n                                        <Menu\n                                            showTime={showTime}\n                                            showDate={showDate}\n                                            showConfirm={showConfirm}\n                                            showCalendarWeek={showCalendarWeek}\n                                            selectRange={selectRange}\n                                            timeStep={timeStep}\n                                            date={this.state.date}\n                                            value={value}\n                                            valueText={valueText}\n                                            format={format!}\n                                            mode={mode}\n                                            mobile={mobile}\n                                            minDate={minDate}\n                                            maxDate={maxDate}\n                                            selectedRange={selectedRange}\n                                            hoverDate={hoverDate}\n                                            confirmComponent={confirmComponent}\n                                            onHoverDays={this.onHoverDays}\n                                            onSelectDay={this.onSelectDay}\n                                            onChangeMonth={this.onChangeMonth}\n                                            onChangeYear={this.onChangeYear}\n                                            onSelectTime={this.onSelectTime}\n                                            onSubmitTime={\n                                                this.onSubmitOrCancelTime\n                                            }\n                                            onSubmit={this.emitChangeAndClose}\n                                        />\n                                    </MenuWrapper>\n                                </MenuContainer>\n                            ) : (\n                                <BlindInput type=\"text\" onFocus={onToggle} />\n                            )}\n                        </Container>\n                    );\n                }}\n            </Select>\n        );\n    }\n\n    private renderValue(\n        value: ReactTimebombDate,\n        placeholder?: string,\n        open?: boolean\n    ) {\n        const {\n            minDate,\n            maxDate,\n            disabled,\n            format,\n            selectRange,\n            mobile,\n            timeStep,\n            iconComponent,\n            arrowButtonComponent,\n            arrowButtonId,\n            clearComponent,\n            labelComponent\n        } = this.props;\n        const {\n            showDate,\n            showTime,\n            allowValidation,\n            mode,\n            hoverDate\n        } = this.state;\n        const isMulti = selectRange || isArray(value);\n        const ValueComponent = isMulti ? ValueMulti : Value;\n\n        let componentValue = isMulti\n            ? value\n                ? isArray(value)\n                    ? value\n                    : [value]\n                : undefined\n            : value;\n\n        if (\n            isArray(componentValue) &&\n            componentValue.length === 1 &&\n            hoverDate\n        ) {\n            componentValue = [...componentValue, hoverDate].sort(\n                (a, b) => a.getTime() - b.getTime()\n            );\n        }\n\n        placeholder = open && !isMulti ? undefined : placeholder;\n\n        return (\n            <ValueComponent\n                ref={this.valueRef}\n                mode={mode}\n                disabled={disabled}\n                mobile={mobile}\n                placeholder={placeholder}\n                format={format!}\n                selectRange={selectRange}\n                value={componentValue as any}\n                hoverDate={hoverDate}\n                minDate={minDate}\n                maxDate={maxDate}\n                allowValidation={allowValidation}\n                open={open}\n                showDate={showDate}\n                showTime={showTime}\n                timeStep={timeStep}\n                iconComponent={iconComponent}\n                arrowButtonId={arrowButtonId}\n                arrowButtonComponent={arrowButtonComponent}\n                clearComponent={clearComponent}\n                labelComponent={labelComponent}\n                onClear={this.onClear}\n                onChangeValueText={this.onChangeValueText}\n                onChangeFormatGroup={this.onChangeFormatGroup}\n                onToggle={this.onToggle}\n                onSubmit={this.emitChangeAndClose}\n                onAllSelect={this.onModeDay}\n                onValueSelect={this.onMultiValueSelect}\n                onPaste={this.onPaste}\n            />\n        );\n    }\n\n    private onClose() {\n        clearSelection();\n\n        // get rid of this timeout\n        // fixme\n        setTimeout(async () => {\n            clearSelection();\n\n            await this.setStateAsync(this.initialState);\n\n            if (this.props.onClose) {\n                this.props.onClose();\n            }\n        }, 16);\n    }\n\n    private async emitError(\n        error: ReactTimebombError,\n        value: ReactTimebombState['valueText']\n    ) {\n        if (this.state.allowValidation) {\n            await this.setStateAsync({ allowValidation: false });\n\n            if (this.props.onError) {\n                this.props.onError(error, value);\n            }\n        }\n    }\n\n    private emitChange = (() => {\n        let timeout = 0;\n\n        return (date: ReactTimebombDate) => {\n            clearTimeout(timeout);\n\n            timeout = setTimeout(async () => {\n                const { value, onChange } = this.props;\n\n                if (dateEqual(value, date)) {\n                    return;\n                }\n\n                const changeDate = isArray(date) ? date : [date];\n\n                onChange(...changeDate);\n\n                await this.setStateAsync({\n                    allowValidation: Boolean(date),\n                    preventClose: false\n                });\n            }, 0);\n        };\n    })();\n\n    private async emitChangeAndClose(newDate?: ReactTimebombDate) {\n        if (this.onCloseMenu) {\n            this.onCloseMenu();\n        }\n        clearSelection();\n\n        const { date } = newDate\n            ? { date: newDate }\n            : await this.validateValueText();\n\n        if (date) {\n            this.emitChange(date);\n        }\n    }\n\n    private getSelectedRange(date: ReactTimebombDate) {\n        if (isArray(date)) {\n            if (date.length === 2) {\n                if (date[0] > date[1]) {\n                    return 0;\n                } else {\n                    return 1;\n                }\n            } else if (date.length === 1) {\n                return 0;\n            }\n        } else {\n            return 0;\n        }\n\n        return this.state.selectedRange;\n    }\n\n    private async onClear() {\n        await this.setStateAsync({ valueText: undefined });\n\n        this.emitChange(undefined);\n    }\n\n    private onChangeValueText(valueText: string | undefined): void {\n        this.setState({ valueText, preventClose: true });\n    }\n\n    private async onChangeFormatGroup(format?: string) {\n        await this.setStateAsync({\n            menuHeight: 'auto',\n            mode: format ? getFormatType(format) : undefined\n        });\n    }\n\n    private onHoverDays([date0, date1]: (Date | undefined)[]) {\n        const hoverDate = date1 || date0;\n\n        if (\n            isArray(this.state.valueText) &&\n            isArray(this.state.date) &&\n            this.state.valueText.length === 1 &&\n            this.state.date.length === 1 &&\n            hoverDate\n        ) {\n            this.setState({ hoverDate });\n        }\n    }\n\n    private async onMultiValueSelect(date: Date, index: number) {\n        if (index === 0) {\n            await this.setStateAsync({ ...this.initialState, hoverDate: date });\n        }\n\n        if (\n            index === 1 &&\n            isArray(this.state.valueText) &&\n            isArray(this.state.date)\n        ) {\n            const [valueText0] = this.state.valueText;\n            const [date0] = this.state.date;\n\n            await this.setStateAsync({\n                ...this.initialState,\n                valueText: [valueText0],\n                date: [date0],\n                hoverDate: date\n            });\n        }\n\n        // since closing of the menu is delayed (16ms), we need to deplay the opening as well\n        // fixme\n        setTimeout(async () => {\n            if (this.onOpenMenu) {\n                this.onOpenMenu();\n            }\n\n            await this.setStateAsync({ hoverDate: date });\n        }, 32);\n    }\n\n    private onSelectDay(day: Date): void {\n        const { value, selectRange } = this.props;\n        const format = this.props.format!;\n\n        const valueDate = (() => {\n            if (value instanceof Date) {\n                return value;\n            }\n\n            if (isArray(value)) {\n                return value[0];\n            }\n\n            return day;\n        })();\n\n        if (selectRange === 'week') {\n            const date = [startOfWeek(day), endOfWeek(day)];\n            const valueText = dateFormat(date, format);\n\n            this.setState({ date, valueText, hoverDate: undefined });\n        } else if (typeof selectRange === 'number') {\n            const date = [day, addDays(day, selectRange - 1)];\n            const valueText = dateFormat(date, format);\n\n            this.setState({ date, valueText, hoverDate: undefined });\n        } else if (selectRange === true) {\n            const date = setDate(\n                day,\n                valueDate.getHours(),\n                valueDate.getMinutes()\n            );\n            const dateArr =\n                isArray(this.state.valueText) &&\n                this.state.valueText.length === 1\n                    ? [\n                          validateDate(this.state.valueText[0], format) as Date,\n                          date\n                      ]\n                    : [date];\n\n            const selectedRange = this.getSelectedRange(dateArr);\n            const valueText = dateFormat(dateArr.sort(sortDates), format);\n\n            this.setState({\n                date: dateArr,\n                valueText,\n                selectedRange,\n                hoverDate: undefined\n            });\n        } else {\n            const date = setDate(\n                day,\n                valueDate.getHours(),\n                valueDate.getMinutes()\n            );\n            const valueText = dateFormat(date, format);\n\n            this.setState({ date, valueText, hoverDate: undefined });\n        }\n    }\n\n    private onModeDay() {\n        this.setState({ mode: 'day' });\n    }\n\n    private onModeYear() {\n        this.setState({ mode: 'year' });\n    }\n\n    private onModeMonth() {\n        this.setState({ mode: 'month' });\n    }\n\n    private onChangeMonth(date: Date) {\n        this.setState({ date, mode: 'day' });\n    }\n\n    private onChangeYear(date: Date) {\n        this.setState({ date, mode: 'day' });\n    }\n\n    private onReset(): void {\n        this.setState({ date: this.defaultDateValue });\n    }\n\n    private onNextMonth(): void {\n        const currentDate = isArray(this.state.date)\n            ? this.state.date[this.state.selectedRange]\n            : this.state.date;\n\n        if (currentDate) {\n            const date = new Date(currentDate);\n\n            date.setMonth(date.getMonth() + 1);\n\n            this.setState({ date });\n        }\n    }\n\n    private onPrevMonth(): void {\n        const currentDate = isArray(this.state.date)\n            ? this.state.date[this.state.selectedRange]\n            : this.state.date;\n\n        if (currentDate) {\n            const date = new Date(currentDate);\n\n            date.setMonth(date.getMonth() - 1);\n\n            this.setState({ date });\n        }\n    }\n\n    private async onSelectTime(time: Date, mode: FormatType, commit = false) {\n        const format = this.props.format!;\n        const value = this.props.value || new Date();\n\n        const newDate = isArray(value)\n            ? value.map((d) => setDate(d, time.getHours(), time.getMinutes()))\n            : setDate(value, time.getHours(), time.getMinutes());\n\n        const valueText = dateFormat(newDate, format);\n\n        await this.setStateAsync({ mode, valueText });\n\n        if (commit) {\n            this.emitChange(newDate);\n        }\n    }\n\n    private onPaste(text: string) {\n        const date = validateDate(text, this.props.format!);\n\n        if (date instanceof Date) {\n            this.onSelectDay(date);\n        }\n    }\n\n    private onSubmitOrCancelTime(time: Date | undefined, mode: FormatType) {\n        if (time) {\n            this.onSelectTime(time, mode, true);\n        }\n\n        if (this.onToggle) {\n            this.onToggle();\n        }\n    }\n\n    private onMobileMenuContainerClick(e: React.MouseEvent<HTMLDivElement>) {\n        if (\n            e.target instanceof HTMLDivElement &&\n            e.target.classList.contains('react-slct-menu')\n        ) {\n            if (this.onToggle) {\n                this.onToggle();\n            }\n        }\n    }\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { ReactTimebombState } from '../';\nimport { Button } from '../components/button';\nimport { ReactTimebombDate, ReactTimebombMenuProps } from '../typings';\nimport {\n    addDays,\n    addMonths,\n    endOfMonth,\n    getAttribute,\n    getMonthNames,\n    isArray,\n    isEnabled,\n    startOfMonth,\n    subtractDays,\n    subtractMonths,\n    validateDate\n} from '../utils';\nimport { GestureDirection, GestureWrapper } from './mobile';\nimport { MenuTable } from './table';\nimport { MenuTime } from './time';\n\nconst MonthAndYearContainer = styled.div`\n    display: flex;\n    height: ${(props: { mobile?: boolean }) =>\n        props.mobile ? '100%' : '220px'};\n`;\n\nconst MonthsContainer = styled.div`\n    display: flex;\n    flex: 1;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-self: flex-start;\n    align-items: flex-start;\n    padding: 10px;\n    box-sizing: border-box;\n    height: 100%;\n\n    button {\n        width: ${(props: { mobile?: boolean }) =>\n            props.mobile ? 'calc(33% - 6px)' : '33%'};\n        font-size: 16px;\n        font-weight: normal;\n        font-style: normal;\n        font-stretch: normal;\n        min-height: 25%;\n        border: none;\n        margin: 0;\n    }\n`;\n\nconst MonthContainer = styled.div`\n    flex: 1;\n    padding: 0;\n    height: 100%;\n    overflow: hidden;\n`;\n\nconst YearContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n    border-left: solid 1px #e6e6e6;\n    padding: 10px;\n    flex: 0 0 90px;\n\n    button {\n        width: 100%;\n        font-size: 16px;\n        font-weight: normal;\n        font-style: normal;\n        font-stretch: normal;\n        border: none;\n        padding: 6px 0;\n        margin: 0 0 4px;\n        min-height: 46px;\n    }\n`;\n\nconst Confirm = styled.div`\n    width: 100%;\n    text-align: center;\n    padding: 10px 0;\n\n    button {\n        padding: 3px 28px;\n    }\n`;\n\nconst MobileMenuTable = styled(MenuTable)`\n    width: 33.3%;\n`;\n\nfunction getDate(\n    date: ReactTimebombDate,\n    selectedRange: ReactTimebombState['selectedRange']\n) {\n    return (isArray(date) ? date[selectedRange] : date)!;\n}\n\nfunction MenuMonths(props: ReactTimebombMenuProps) {\n    const { value, mobile, selectedRange } = props;\n    const [monthNames] = React.useState(getMonthNames(true));\n    const valueDate = getDate(value, selectedRange);\n    const date = getDate(props.date, selectedRange);\n    const month = value && valueDate.getMonth();\n    const year = value && valueDate.getFullYear();\n\n    function onChangeMonth(e: React.MouseEvent<HTMLButtonElement>) {\n        const date = new Date(getAttribute(e.currentTarget, 'data-date'));\n\n        setTimeout(() => props.onChangeMonth(date), 0);\n    }\n\n    return (\n        <MonthsContainer mobile={mobile} className=\"months\">\n            {monthNames.map((str, i) => {\n                const newDate = new Date(date);\n\n                newDate.setMonth(i);\n\n                const enabled = isEnabled('month', newDate, props);\n                const selected =\n                    month === newDate.getMonth() &&\n                    year === newDate.getFullYear();\n\n                return (\n                    <Button\n                        key={str}\n                        tabIndex={-1}\n                        className={selected ? 'selected' : undefined}\n                        selected={selected}\n                        disabled={!enabled}\n                        mobile={props.mobile}\n                        data-date={newDate.toISOString()}\n                        onClick={onChangeMonth}\n                    >\n                        {str}\n                    </Button>\n                );\n            })}\n        </MonthsContainer>\n    );\n}\n\nfunction MenuYear(props: ReactTimebombMenuProps) {\n    const { value, minDate, maxDate } = props;\n    const [\n        yearContainer,\n        setYearContainer\n    ] = React.useState<HTMLDivElement | null>(null);\n\n    React.useEffect(scrollToYear, [props.date]);\n\n    function scrollToYear() {\n        if (yearContainer) {\n            const selected = yearContainer.querySelector('.selected');\n\n            if (selected) {\n                selected.scrollIntoView();\n\n                if (yearContainer.scrollBy) {\n                    yearContainer.scrollBy({ top: -10 });\n                }\n            }\n        }\n    }\n\n    function getFullYears() {\n        const valueDate = getDate(value, props.selectedRange);\n        const year = getDate(props.date, props.selectedRange).getFullYear();\n\n        const getDateConfig = (date: Date, newYear: number) => {\n            date = new Date(date);\n            date.setFullYear(newYear);\n\n            const enabled = isEnabled('year', date, props);\n            const selected = year === newYear;\n\n            if (value) {\n                date.setSeconds(valueDate.getSeconds());\n                date.setMinutes(valueDate.getMinutes());\n                date.setHours(valueDate.getHours());\n                date.setDate(valueDate.getDate());\n                date.setMonth(valueDate.getMonth());\n            }\n\n            return { date, enabled, selected };\n        };\n\n        if (minDate && !maxDate) {\n            const currentYear = minDate.getFullYear();\n\n            return Array(120)\n                .fill(undefined)\n                .map((_, i) => getDateConfig(minDate, currentYear + i))\n                .filter(obj => obj.enabled);\n        } else if (!minDate && maxDate) {\n            const currentYear = maxDate.getFullYear();\n\n            return Array(120)\n                .fill(undefined)\n                .map((_, i) => getDateConfig(maxDate, currentYear - i))\n                .filter(obj => obj.enabled)\n                .reverse();\n        } else if (minDate && maxDate) {\n            const minYear = minDate.getFullYear();\n            const maxYear = maxDate.getFullYear();\n            const array: {\n                date: Date;\n                enabled: boolean;\n                selected: boolean;\n            }[] = [];\n\n            for (let i = maxYear; i >= minYear; i--) {\n                array.push(getDateConfig(maxDate, i));\n            }\n\n            return array.reverse();\n        } else {\n            const now = new Date();\n            const currentDate = valueDate > now ? valueDate : now;\n            const currentYear = currentDate.getFullYear();\n\n            return Array(120)\n                .fill(undefined)\n                .map((_, i) => {\n                    const date = new Date(currentDate);\n\n                    date.setFullYear(currentYear - i);\n\n                    const enabled = isEnabled('year', date, props);\n                    const selected = year === date.getFullYear();\n\n                    return { date, enabled, selected };\n                })\n                .filter(obj => obj.enabled)\n                .reverse();\n        }\n    }\n\n    function onSelectYear(e: React.MouseEvent<HTMLButtonElement>) {\n        const date = new Date(getAttribute(e.currentTarget, 'data-date'));\n\n        setTimeout(() => props.onChangeYear(date), 0);\n    }\n\n    function onYearContainer(el: HTMLDivElement | null) {\n        setYearContainer(el);\n        scrollToYear();\n    }\n\n    return (\n        <YearContainer ref={onYearContainer} className=\"years\">\n            {getFullYears()\n                .map(({ date, selected }) => {\n                    const fullYear = date.getFullYear();\n                    const dateStr = date.toISOString();\n\n                    return (\n                        <Button\n                            key={dateStr}\n                            tabIndex={-1}\n                            className={selected ? 'selected' : undefined}\n                            selected={selected}\n                            mobile={props.mobile}\n                            data-date={dateStr}\n                            onClick={onSelectYear}\n                        >\n                            {fullYear}\n                        </Button>\n                    );\n                })\n                .reverse()}\n        </YearContainer>\n    );\n}\n\nfunction MenuConfirm(props: ReactTimebombMenuProps) {\n    const { valueText, format } = props;\n    const validDate = validateDate(valueText, format);\n    const isValid = validDate\n        ? isArray(validDate)\n            ? validDate.every(v => isEnabled('day', v, props))\n            : isEnabled('day', validDate, props)\n        : false;\n\n    return (\n        <Confirm>\n            <Button\n                tabIndex={-1}\n                disabled={!isValid}\n                mobile={props.mobile}\n                onClick={() => props.onSubmit()}\n            >\n                Ok\n            </Button>\n        </Confirm>\n    );\n}\n\nfunction MonthWrapper(props: ReactTimebombMenuProps) {\n    const { minDate, maxDate, mobile } = props;\n\n    function allowPrev() {\n        let date = props.date;\n\n        if (!minDate) {\n            return true;\n        }\n\n        if (isArray(date)) {\n            date = date[0];\n        }\n\n        if (date) {\n            if (subtractDays(startOfMonth(date), 1) < minDate) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function allowNext() {\n        let date = props.date;\n\n        if (!maxDate) {\n            return true;\n        }\n\n        if (isArray(date)) {\n            date = date[0];\n        }\n\n        if (date) {\n            if (addDays(endOfMonth(date), 1) > maxDate) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function onChangeMonth(direction: GestureDirection) {\n        const { onChangeMonth } = props;\n        const date = getDate(props.date, props.selectedRange);\n\n        switch (direction) {\n            case 'next':\n                onChangeMonth(addMonths(date, 1));\n                break;\n            case 'prev':\n                onChangeMonth(subtractMonths(date, 1));\n                break;\n        }\n    }\n\n    if (mobile) {\n        return (\n            <GestureWrapper\n                allowNext={allowNext()}\n                allowPrev={allowPrev()}\n                onChangeMonth={onChangeMonth}\n            >\n                <MobileMenuTable\n                    date={subtractMonths(\n                        getDate(props.date, props.selectedRange),\n                        1\n                    )}\n                    minDate={props.minDate}\n                    maxDate={props.maxDate}\n                    mobile={props.mobile}\n                    selectRange={props.selectRange}\n                    selectedRange={props.selectedRange}\n                    showCalendarWeek={props.showCalendarWeek}\n                    showConfirm={props.showConfirm}\n                    showTime={props.showTime}\n                    value={subtractMonths(\n                        getDate(props.value, props.selectedRange),\n                        1\n                    )}\n                    onSubmit={props.onSubmit}\n                    onSelectDay={props.onSelectDay}\n                />\n                <MobileMenuTable\n                    date={props.date}\n                    minDate={props.minDate}\n                    maxDate={props.maxDate}\n                    mobile={props.mobile}\n                    selectRange={props.selectRange}\n                    selectedRange={props.selectedRange}\n                    showCalendarWeek={props.showCalendarWeek}\n                    showConfirm={props.showConfirm}\n                    showTime={props.showTime}\n                    value={props.value}\n                    onSubmit={props.onSubmit}\n                    onSelectDay={props.onSelectDay}\n                />\n                <MobileMenuTable\n                    date={addMonths(\n                        getDate(props.date, props.selectedRange),\n                        1\n                    )}\n                    minDate={props.minDate}\n                    maxDate={props.maxDate}\n                    mobile={props.mobile}\n                    selectRange={props.selectRange}\n                    selectedRange={props.selectedRange}\n                    showCalendarWeek={props.showCalendarWeek}\n                    showConfirm={props.showConfirm}\n                    showTime={props.showTime}\n                    value={addMonths(\n                        getDate(props.value, props.selectedRange),\n                        1\n                    )}\n                    onSubmit={props.onSubmit}\n                    onSelectDay={props.onSelectDay}\n                />\n            </GestureWrapper>\n        );\n    }\n\n    return (\n        <MenuTable\n            date={props.date}\n            minDate={props.minDate}\n            maxDate={props.maxDate}\n            mobile={props.mobile}\n            selectRange={props.selectRange}\n            selectedRange={props.selectedRange}\n            showCalendarWeek={props.showCalendarWeek}\n            showConfirm={props.showConfirm}\n            showTime={props.showTime}\n            value={props.value}\n            hoverDate={props.hoverDate}\n            onSubmit={props.onSubmit}\n            onSelectDay={props.onSelectDay}\n            onHoverDays={props.onHoverDays}\n        />\n    );\n}\n\nexport function Menu(props: ReactTimebombMenuProps) {\n    const { mode, mobile, showDate, showConfirm, showTime } = props;\n    const ConfirmComponent = props.confirmComponent || MenuConfirm;\n\n    if (showDate || showTime) {\n        switch (mode) {\n            case 'year':\n            case 'month':\n                return (\n                    <MonthAndYearContainer mobile={mobile}>\n                        <MenuMonths {...props} />\n                        <MenuYear {...props} />\n                    </MonthAndYearContainer>\n                );\n            case 'day':\n            case 'hour':\n            case 'minute':\n            case 'second':\n                return (\n                    <MonthContainer>\n                        {showDate && <MonthWrapper {...props} />}\n                        {showTime && (\n                            <MenuTime\n                                date={props.date}\n                                timeStep={props.timeStep}\n                                topDivider={props.showDate}\n                                format={props.format}\n                                onChange={props.onSelectTime}\n                                onSubmit={props.onSubmitTime}\n                                onCancel={props.onSubmitTime}\n                            />\n                        )}\n                        {showConfirm && <ConfirmComponent {...props} />}\n                    </MonthContainer>\n                );\n        }\n    }\n\n    return null;\n}\n","import * as React from 'react';\nimport styled, { css } from 'styled-components';\n\nexport interface ButtonProps {\n    selected?: boolean;\n    mobile?: boolean;\n}\n\nconst StyledButton = styled.button`\n    margin-right: 5px;\n    border: 1px solid #ccc;\n    border-radius: 3px;\n    padding: 3px 6px;\n    height: 21px;\n    line-height: 1;\n    box-sizing: border-box;\n    background: ${(props: ButtonProps) => (props.selected ? '#ccc' : '#fff')};\n\n    ${(props: ButtonProps) =>\n        props.mobile\n            ? css`\n                  font-size: 16px;\n                  margin-right: 6px;\n                  padding: 6px 12px;\n                  height: auto;\n                  min-height: 21px;\n              `\n            : ''}\n\n    &:focus {\n        outline: none;\n    }\n\n    &:disabled {\n        cursor: not-allowed;\n    }\n\n    &:not(:disabled) {\n        cursor: pointer;\n    }\n\n    &:not(:disabled):hover {\n        background-color: ${(props: ButtonProps) =>\n            props.selected ? '#ccc' : '#efefef'};\n    }\n\n    &:last-child {\n        margin-right: 0;\n    }\n`;\n\nexport const Button = (props: ButtonProps & React.ButtonHTMLAttributes<{}>) => (\n    <StyledButton\n        data-react-timebomb-selectable\n        data-role=\"button\"\n        type=\"button\"\n        {...props}\n    />\n);\n\nexport const SmallButton = styled(Button)`\n    font-size: 13px;\n    color: #ccc;\n    cursor: pointer;\n    border: none;\n\n    &:hover:not(:disabled) {\n        color: #333;\n    }\n\n    &:focus {\n        outline: none;\n    }\n`;\n\nexport interface ArrowButtonProps {\n    open?: boolean;\n    disabled?: boolean;\n    id?: string;\n    onClick?(): void;\n}\n\nexport const ArrowButton = (props: ArrowButtonProps) => (\n    <SmallButton\n        className=\"react-timebomb-arrow\"\n        id={props.id}\n        disabled={props.disabled}\n        tabIndex={-1}\n        onClick={props.onClick}\n    >\n        {props.open ? '▲' : '▼'}\n    </SmallButton>\n);\n","// @ts-ignore\nimport momentDefaultImport from 'moment';\nimport * as momentImport from 'moment';\nimport { ReactTimebombDate, FormatType } from './typings';\n\nconst moment: typeof momentImport = momentDefaultImport || momentImport;\n\nexport const formatSplitExpr = /[.|:|\\-|\\\\|_|\\/|\\s]/;\n\nexport function dateFormat(date: Date, format: string): string;\nexport function dateFormat(date: Date[], format: string): string[];\nexport function dateFormat(\n    date: Date | Date[],\n    format: string\n): string | string[];\nexport function dateFormat(\n    date: Date | Date[],\n    format: string\n): string | string[] {\n    if (isArray(date)) {\n        return date.map(date => moment(date).format(format));\n    } else {\n        return moment(date).format(format);\n    }\n}\n\nexport function validateDate(\n    date: string | string[] | undefined,\n    format: string\n): ReactTimebombDate {\n    if (isArray(date)) {\n        const dates = date\n            .map(date => {\n                const instance = moment(date, format, true);\n\n                return instance.isValid() ? instance.toDate() : undefined;\n            })\n            .filter(d => Boolean(d)) as Date[];\n\n        return dates.length === 0 ? undefined : dates;\n    } else {\n        const instance = moment(date, format, true);\n\n        return instance.isValid() ? instance.toDate() : undefined;\n    }\n}\n\nexport function getFormatType(format: string): FormatType | undefined {\n    if (/^D/.test(format)) {\n        return 'day';\n    }\n\n    if (/^M/.test(format)) {\n        return 'month';\n    }\n\n    if (/^Y/.test(format)) {\n        return 'year';\n    }\n\n    if (/^h/i.test(format)) {\n        return 'hour';\n    }\n\n    if (/^m/.test(format)) {\n        return 'minute';\n    }\n\n    if (/^s/.test(format)) {\n        return 'second';\n    }\n\n    return undefined;\n}\n\nexport function is24HoursFormat(format?: string): boolean {\n    if (!format) {\n        return false;\n    }\n\n    return /H|k/.test(format);\n}\n\nexport function getMeridiem(format?: string) {\n    if (!format) {\n        return undefined;\n    }\n\n    const matcher = format.match(/\\s+([aAp])$/);\n\n    if (matcher) {\n        return matcher[1];\n    }\n\n    return undefined;\n}\n\nexport function formatIsActualNumber(format: string) {\n    // day / year\n    if (/D|Y|H|h|m|s/.test(format)) {\n        return true;\n    }\n\n    // month\n    if (format === 'M' || format === 'MM') {\n        return true;\n    }\n\n    return false;\n}\n\n/** @return returns a string with transformed value, true for valid input or false for invalid input */\nexport function validateFormatGroup(\n    input: string | number,\n    format: string\n): boolean | string {\n    const formatType = getFormatType(format);\n\n    return validateFormatType(input, formatType);\n}\n\n/** @return returns a string with transformed value, true for valid input or false for invalid input */\nexport function validateFormatType(\n    input: string | number,\n    formatType?: FormatType\n) {\n    if (isFinite(input as any)) {\n        const int = typeof input === 'string' ? parseInt(input, 10) : input;\n        const char = String(input);\n        const strLen = char.length;\n\n        switch (formatType) {\n            case 'day':\n                if (strLen === 1) {\n                    if (int >= 0 && int <= 3) {\n                        return true;\n                    } else {\n                        return `0${input}`;\n                    }\n                }\n\n                if (strLen === 2 && int >= 1 && int <= 31) {\n                    return true;\n                }\n                break;\n            case 'month':\n                if (strLen === 1) {\n                    if (int === 0 || int === 1) {\n                        return true;\n                    } else {\n                        return `0${input}`;\n                    }\n                }\n\n                if (strLen === 2 && int >= 0 && int <= 12) {\n                    return true;\n                }\n                break;\n            case 'year':\n                if (strLen === 1 && (int === 1 || int === 2)) {\n                    return true;\n                }\n\n                if (\n                    strLen >= 2 &&\n                    (char.startsWith('19') || char.startsWith('20'))\n                ) {\n                    return true;\n                }\n                break;\n            case 'hour':\n                if (strLen === 1) {\n                    if (int >= 0 && int <= 2) {\n                        return true;\n                    } else {\n                        return `0${input}`;\n                    }\n                }\n\n                if (strLen >= 2 && int >= 0 && int <= 24) {\n                    return true;\n                }\n                break;\n            case 'minute':\n            case 'second':\n                if (strLen === 1) {\n                    if (int >= 0 && int <= 5) {\n                        return true;\n                    } else {\n                        return `0${input}`;\n                    }\n                }\n\n                if (strLen >= 2 && int >= 0 && int <= 59) {\n                    return true;\n                }\n                break;\n        }\n    }\n\n    return false;\n}\n\nconst ALLOWED_CHARS = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n\nexport function stringFromCharCode(keyCode: number): string {\n    const charCode = keyCode - 48 * Math.floor(keyCode / 48);\n    const char = String.fromCharCode(96 <= keyCode ? charCode : keyCode);\n\n    if (ALLOWED_CHARS.includes(char)) {\n        return char;\n    }\n\n    return '';\n}\n\nexport function formatNumber(number: number): string {\n    if (number <= 1) {\n        return '01';\n    }\n\n    if (number <= 9) {\n        return `0${number}`;\n    }\n\n    return String(number);\n}\n\nexport function formatNumberRaw(number: number): string {\n    if (number <= 9) {\n        return `0${Number(number) || 0}`;\n    }\n\n    return String(number);\n}\n\nexport function splitDate(date: Date, format: string): string[] {\n    const formattedDate = dateFormat(date, format);\n\n    return formattedDate\n        .split(formatSplitExpr)\n        .filter(group => group && formatSplitExpr.test(group) === false);\n}\n\nexport function joinDates(\n    parts: (string | HTMLElement)[],\n    format: string\n): string {\n    const strParts = parts\n        .map(part => (part instanceof HTMLElement ? part.innerText : part))\n        .filter(val => val);\n    const splittedFormat = format.split(formatSplitExpr);\n\n    if (strParts.length !== splittedFormat.length) {\n        return '';\n    }\n\n    const date = strParts.join(' ');\n    const spaceFormat = splittedFormat.join(' ');\n    const momentDate = moment(date, spaceFormat);\n    const parsingFlags = momentDate.parsingFlags();\n\n    if (parsingFlags.overflow === 2) {\n        return moment(\n            // @ts-ignore\n            new Date(...parsingFlags.parsedDateParts)\n        ).format(format);\n    }\n\n    return momentDate.format(format);\n}\n\nexport function clearSelection(): void {\n    const sel = getSelection();\n\n    if (sel) {\n        if (sel.empty) {\n            // Chrome\n            sel.empty();\n        } else if (sel.removeAllRanges) {\n            // Firefox\n            sel.removeAllRanges();\n        }\n    }\n}\n\nexport function selectElement(\n    el: HTMLElement | undefined,\n    caret?: number[]\n): void {\n    if (el) {\n        const range = document.createRange();\n        const sel = getSelection();\n\n        if (caret === undefined) {\n            range.selectNodeContents(el);\n        } else {\n            const [start, end] = caret;\n\n            range.setStart(el, start);\n            range.setEnd(el, end);\n        }\n\n        if (sel) {\n            sel.removeAllRanges();\n            sel.addRange(range);\n        }\n    }\n}\n\nexport function getWeekOfYear(date: Date): number {\n    return moment(date).isoWeek();\n}\n\nexport function startOfWeek(date: Date): Date {\n    return moment(date)\n        .startOf('isoWeek')\n        .toDate();\n}\n\nexport function endOfWeek(date: Date): Date {\n    return moment(date)\n        .endOf('isoWeek')\n        .toDate();\n}\n\nexport function startOfDay(date: Date): Date {\n    const newDate = new Date(date);\n\n    newDate.setHours(0, 0, 0, 0);\n\n    return newDate;\n}\n\nexport function endOfDay(date: Date): Date {\n    const newDate = new Date(date);\n\n    newDate.setHours(23, 59, 59, 999);\n\n    return newDate;\n}\n\nexport function addDays(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'days')\n        .toDate();\n}\n\nexport function addMonths(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'months')\n        .toDate();\n}\n\nexport function addYears(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'years')\n        .toDate();\n}\n\nexport function addHours(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'hours')\n        .toDate();\n}\n\nexport function addMinutes(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'minutes')\n        .toDate();\n}\n\nexport function addSeconds(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'seconds')\n        .toDate();\n}\n\nexport function subtractSeconds(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'seconds')\n        .toDate();\n}\n\nexport function subtractMinutes(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'minutes')\n        .toDate();\n}\n\nexport function subtractHours(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'hours')\n        .toDate();\n}\n\nexport function subtractDays(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'days')\n        .toDate();\n}\n\nexport function subtractMonths(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'months')\n        .toDate();\n}\n\nexport function subtractYears(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'years')\n        .toDate();\n}\n\nexport function manipulateDate(\n    date: Date,\n    formatType: FormatType,\n    direction: 'add' | 'subtract',\n    timeStep?: number\n): Date {\n    switch (formatType) {\n        case 'day':\n            if (direction === 'add') return addDays(date, 1);\n            if (direction === 'subtract') return subtractDays(date, 1);\n            break;\n        case 'month':\n            if (direction === 'add') return addMonths(date, 1);\n            if (direction === 'subtract') return subtractMonths(date, 1);\n            break;\n        case 'year':\n            if (direction === 'add') return addYears(date, 1);\n            if (direction === 'subtract') return subtractYears(date, 1);\n            break;\n        case 'hour':\n            if (direction === 'add') return addHours(date, 1);\n            if (direction === 'subtract') return subtractHours(date, 1);\n            break;\n        case 'minute':\n            if (direction === 'add') return addMinutes(date, timeStep || 1);\n            if (direction === 'subtract')\n                return subtractMinutes(date, timeStep || 1);\n            break;\n        case 'second':\n            if (direction === 'add') return addSeconds(date, timeStep || 1);\n            if (direction === 'subtract')\n                return subtractSeconds(date, timeStep || 1);\n            break;\n    }\n\n    return new Date();\n}\n\nexport function startOfMonth(date: Date): Date {\n    const newDate = new Date(date);\n\n    newDate.setDate(1);\n    newDate.setHours(0, 0, 0, 0);\n\n    return newDate;\n}\n\nexport function endOfMonth(date: Date): Date {\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n}\n\nexport function isUndefined(val): val is undefined {\n    return val === null || val === undefined;\n}\n\nexport function setDate(date: Date, hour: number, min?: number): Date {\n    const newDate = new Date(date);\n\n    newDate.setHours(hour, min);\n\n    return newDate;\n}\n\nexport function isSameDay(dateA: Date, dateB: Date): boolean {\n    return moment(dateA).isSame(dateB, 'day');\n}\n\nexport function isToday(date: Date): boolean {\n    return moment(date).isSame(new Date(), 'day');\n}\n\nexport function isBefore(date: Date, inp: Date) {\n    return moment(date).isBefore(inp, 'day');\n}\n\nexport function isAfter(date: Date, inp: Date) {\n    return moment(date).isAfter(inp, 'day');\n}\n\nexport function isBetween(\n    date: Date,\n    cmpDateA?: Date,\n    cmpDateB?: Date,\n    context: momentImport.unitOfTime.StartOf = 'day'\n) {\n    return moment(date).isBetween(cmpDateA, cmpDateB, context, '[]');\n}\n\nexport function dateEqual(\n    dateA?: ReactTimebombDate,\n    dateB?: ReactTimebombDate,\n    considerTime = false\n) {\n    if (!dateA || !dateB) {\n        return false;\n    }\n\n    if (considerTime) {\n        if (isArray(dateA)) {\n            dateA = dateA.map(startOfDay);\n        } else {\n            dateA = startOfDay(dateA);\n        }\n\n        if (isArray(dateB)) {\n            dateB = dateB.map(startOfDay);\n        } else {\n            dateB = startOfDay(dateB);\n        }\n    }\n\n    if (isArray(dateA) && isArray(dateB)) {\n        return dateA.every((date, i) => {\n            const dBi = dateB![i];\n\n            if (date && dBi) {\n                return date.getTime() === dBi.getTime();\n            }\n\n            return false;\n        });\n    } else if (isArray(dateA) && dateB instanceof Date) {\n        return dateA.some(d => d.getTime() === (dateB as Date).getTime());\n    } else if (isArray(dateB) && dateA instanceof Date) {\n        return dateB.some(d => d.getTime() === (dateA as Date).getTime());\n    } else if (!isArray(dateA) && !isArray(dateB)) {\n        return dateA.getTime() === dateB.getTime();\n    }\n\n    return false;\n}\n\nexport function stringEqual(\n    valueA?: string | string[],\n    valueB?: string | string[]\n): boolean {\n    if (valueA === valueB) {\n        return true;\n    }\n\n    if (!valueA || !valueB) {\n        return false;\n    }\n\n    if (isArray(valueA) && isArray(valueB) && valueA.length === valueB.length) {\n        return valueA.every((val, i) => val === valueB[i]);\n    }\n\n    return false;\n}\n\nexport function getMonthNames(short?: boolean): string[] {\n    if (short) {\n        return moment.monthsShort();\n    }\n\n    return moment.months();\n}\n\nexport function getWeekdayNames() {\n    return moment.weekdaysShort();\n}\n\nexport function isEnabled(\n    context: momentImport.unitOfTime.StartOf,\n    date: Date,\n    { minDate, maxDate }: { minDate?: Date; maxDate?: Date }\n): boolean {\n    if (!minDate && !maxDate) {\n        return true;\n    }\n\n    if (minDate && !maxDate) {\n        return moment(date).isSameOrAfter(minDate, context);\n    }\n\n    if (!minDate && maxDate) {\n        return moment(date).isSameOrBefore(maxDate, context);\n    }\n\n    return isBetween(date, minDate, maxDate, context);\n}\n\nexport function getAttribute(input: Element, attr: string): string {\n    return input.getAttribute(attr)!;\n}\n\nexport function isDayFormat(format: string) {\n    return Boolean(/d/i.test(format));\n}\n\nexport function isDateFormat(format: string) {\n    return Boolean(/D|M|Y/.test(format));\n}\n\nexport function isTimeFormat(format: string) {\n    return Boolean(/H|h|m|k|a|S|s/.test(format));\n}\n\nexport function sortDates(a: Date, b: Date) {\n    return a.getTime() - b.getTime();\n}\n\nexport function isArray(val: any): val is any[] {\n    return Array.isArray(val);\n}\n\nexport function fillZero(value: string | number, formatType: FormatType) {\n    value = String(value);\n\n    switch (formatType) {\n        case 'day':\n            if (value === '1' || value === '2' || value === '3') {\n                return `0${value}`;\n            }\n            break;\n        case 'month':\n            if (value === '1') {\n                return `0${value}`;\n            }\n            break;\n    }\n\n    return undefined;\n}\n\nexport function replaceSpaceWithNbsp(str?: string) {\n    if (!str) {\n        return str;\n    }\n\n    return str.replace(/ /g, ' ');\n}\n\nexport const keys = {\n    ARROW_UP: 38,\n    ARROW_RIGHT: 39,\n    ARROW_DOWN: 40,\n    ARROW_LEFT: 37,\n    ENTER: 13,\n    TAB: 9,\n    ESC: 27,\n    BACKSPACE: 8,\n    DELETE: 46,\n    SPACE: 32,\n    SHIFT: 16,\n    DOT: 190,\n    COMMA: 188\n};\n","import * as React from 'react';\nimport { withGesture, GestureState } from 'react-with-gesture';\nimport styled from 'styled-components';\n\nconst MobileMenuTableWrapper = styled.div`\n    display: flex;\n    width: 300%;\n    position: relative;\n    left: -100%;\n    transition: ${(props: { animate: boolean }) =>\n        props.animate ? 'transform 0.15s ease-out' : 'none'};\n`;\n\nexport type GestureDirection = 'next' | 'prev';\n\ninterface GestureWrapperProps extends GestureState {\n    children: React.ReactNode;\n    allowPrev: boolean;\n    allowNext: boolean;\n    onChangeMonth(direction: GestureDirection): void;\n}\n\n@(withGesture({ mouse: false }) as any)\nexport class GestureWrapper extends React.PureComponent<\n    {\n        allowPrev: boolean;\n        allowNext: boolean;\n        onChangeMonth(direction: GestureDirection): void;\n    },\n    { x?: string; cooldown?: boolean }\n> {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    public componentDidUpdate(prevProps: GestureWrapperProps) {\n        const props = this.props as GestureWrapperProps;\n        const { allowNext, allowPrev, down } = props;\n\n        if (prevProps.down && !down) {\n            const [xDir] = props.direction;\n            let x = '';\n            let direction: GestureDirection | undefined;\n\n            if (xDir > 0) {\n                x = '33.3%';\n                direction = 'prev';\n            } else if (xDir < 0) {\n                x = '-33.3%';\n                direction = 'next';\n            }\n\n            if (x && direction) {\n                if (\n                    (direction === 'next' && !allowNext) ||\n                    (direction === 'prev' && !allowPrev)\n                ) {\n                    return;\n                }\n\n                this.setState({ x, cooldown: true }, () => {\n                    setTimeout(() => {\n                        this.setState({ x: undefined }, () => {\n                            this.props.onChangeMonth(direction!);\n                            this.setState({ cooldown: false });\n                        });\n                    }, 167);\n                });\n            }\n        }\n    }\n\n    public render() {\n        const props = this.props as GestureWrapperProps;\n        const { x, cooldown } = this.state;\n        let [deltaX] = props.delta;\n\n        if (!this.props.allowNext && deltaX < 0) {\n            deltaX = 0;\n        }\n\n        if (!this.props.allowPrev && deltaX > 0) {\n            deltaX = 0;\n        }\n\n        let translateX = x || `${props.down ? deltaX : 0}px`;\n\n        if (cooldown && props.cancel) {\n            props.cancel();\n        }\n\n        return (\n            <MobileMenuTableWrapper\n                animate={Boolean(x)}\n                style={{ transform: `translateX(${translateX})` }}\n            >\n                {props.children}\n            </MobileMenuTableWrapper>\n        );\n    }\n}\n","import * as React from 'react';\nimport {\n    ReactTimebombProps,\n    ReactTimebombState,\n    ReactTimebombDate\n} from '../typings';\nimport {\n    startOfMonth,\n    startOfWeek,\n    endOfWeek,\n    addDays,\n    getWeekdayNames,\n    getWeekOfYear,\n    isArray,\n    dateEqual,\n    isEnabled,\n    isSameDay\n} from '../utils';\nimport styled from 'styled-components';\nimport { WeekNum, Day } from './day';\n\ninterface MenuTableProps {\n    className?: string;\n    showTime: ReactTimebombState['showTime'];\n    showConfirm: ReactTimebombProps['showConfirm'];\n    showCalendarWeek: ReactTimebombProps['showCalendarWeek'];\n    selectRange: ReactTimebombProps['selectRange'];\n    value: ReactTimebombProps['value'];\n    minDate: ReactTimebombProps['minDate'];\n    maxDate: ReactTimebombProps['maxDate'];\n    date: ReactTimebombState['date'];\n    hoverDate?: ReactTimebombState['hoverDate'];\n    selectedRange: ReactTimebombState['selectedRange'];\n    mobile: ReactTimebombProps['mobile'];\n    onSelectDay(date: Date): void;\n    onHoverDays?(dates: Date[]): void;\n    onSubmit(): void;\n}\n\nconst Table = styled.table`\n    width: 100%;\n    height: 186px;\n    table-layout: fixed;\n    font-size: inherit;\n    user-select: none;\n    padding: 5px 10px;\n    box-sizing: border-box;\n\n    td.calendar-week {\n        color: #aaa;\n    }\n\n    th.calendar-week {\n        text-align: left;\n        color: #aaa;\n    }\n\n    tr {\n        th {\n            padding: 3px 2px;\n            width: 14.285714286%;\n            text-align: center;\n        }\n\n        td {\n            width: 14.285714286%;\n        }\n    }\n`;\n\nfunction getSelected(config: {\n    day: Date;\n    value: ReactTimebombDate;\n    selectRange: ReactTimebombProps['selectRange'];\n    hoverDays: Date[];\n    showTime?: boolean;\n}) {\n    const { day, value, hoverDays, showTime, selectRange } = config;\n\n    if (value) {\n        if (selectRange === 'week') {\n            const dayWeekOfYear = getWeekOfYear(day);\n\n            if (isArray(value)) {\n                return value.some(v => getWeekOfYear(v) === dayWeekOfYear);\n            }\n\n            return getWeekOfYear(value) === dayWeekOfYear;\n        }\n\n        if (selectRange && isArray(value)) {\n            const [minDate, maxDate] = value;\n\n            if (value.length === 1 && hoverDays.length) {\n                const firstHover = hoverDays[0];\n                const lastHover = hoverDays[hoverDays.length - 1];\n\n                return isEnabled('day', day, {\n                    minDate: minDate < firstHover ? minDate : firstHover,\n                    maxDate: minDate > lastHover ? minDate : lastHover\n                });\n            }\n\n            if (value.length === 2) {\n                return isEnabled('day', day, {\n                    minDate,\n                    maxDate\n                });\n            }\n        }\n    }\n\n    return dateEqual(value, day, showTime);\n}\n\nexport function MenuTable(props: MenuTableProps) {\n    const {\n        value,\n        showCalendarWeek,\n        selectRange,\n        selectedRange,\n        showConfirm,\n        hoverDate,\n        showTime,\n        onSubmit\n    } = props;\n    const [hoverDays, setHoverDays] = React.useState<Date[]>(\n        getDefaultHoverDays()\n    );\n    const [selectedDates, setSelectedDates] = React.useState<Date[]>([]);\n    const { current: weekdayNames } = React.useRef(getWeekdayNames());\n    const [sun, mon, tue, wed, thu, fri, sat] = weekdayNames;\n    const className = ['month', props.className]\n        .filter(c => Boolean(c))\n        .join(' ');\n\n    const monthMatrix = React.useMemo(() => {\n        const date = getDate(props.date);\n        const dateMonth = date.getMonth();\n        const dateYear = date.getFullYear();\n        const weeks: (Date)[][] = [];\n\n        let base = startOfMonth(date);\n        let week = 0;\n\n        while (\n            startOfWeek(base).getMonth() === dateMonth ||\n            endOfWeek(base).getMonth() === dateMonth\n        ) {\n            const weekStart = startOfWeek(\n                new Date(dateYear, dateMonth, week++ * 7 + 1)\n            );\n\n            weeks.push([\n                weekStart,\n                addDays(weekStart, 1),\n                addDays(weekStart, 2),\n                addDays(weekStart, 3),\n                addDays(weekStart, 4),\n                addDays(weekStart, 5),\n                addDays(weekStart, 6)\n            ]);\n\n            base = addDays(base, 7);\n        }\n\n        return weeks;\n    }, [getCacheKey()]);\n\n    React.useEffect(() => {\n        if (props.onHoverDays) {\n            props.onHoverDays(hoverDays);\n        }\n    }, [hoverDays]);\n\n    React.useEffect(() => {\n        setSelectedDates(\n            monthMatrix.reduce((memo, dates) => {\n                memo.push(\n                    ...dates.filter(day =>\n                        getSelected({\n                            day,\n                            value,\n                            selectRange,\n                            hoverDays,\n                            showTime\n                        })\n                    )\n                );\n\n                return memo;\n            }, [])\n        );\n    }, [monthMatrix, hoverDays, value]);\n\n    function getDefaultHoverDays() {\n        if (!hoverDate) {\n            return [];\n        }\n\n        if (isArray(value)) {\n            return [value[0], hoverDate];\n        }\n\n        return [];\n    }\n\n    function getCacheKey() {\n        const date = getDate(props.date);\n        const dateMonth = date.getMonth();\n        const dateYear = date.getFullYear();\n\n        // cache\n        return `${dateMonth}-${dateYear}`;\n    }\n\n    function getDate(date: ReactTimebombDate) {\n        return (isArray(date) ? date[selectedRange] : date)!;\n    }\n\n    function onSelectDay(date: Date): void {\n        props.onSelectDay(date);\n\n        if (!showConfirm && !selectRange) {\n            onSubmit();\n        }\n    }\n\n    function onDayMouseEnter(day: Date) {\n        if (typeof selectRange === 'number') {\n            const days = Array(selectRange)\n                .fill(null)\n                .map((_, i) => addDays(day, i));\n\n            setHoverDays(days);\n        } else if (selectRange === 'week') {\n            const firstDay = startOfWeek(day);\n            const days = Array(7)\n                .fill(null)\n                .map((_, i) => addDays(firstDay, i));\n\n            setHoverDays(days);\n        } else {\n            setHoverDays([day]);\n        }\n    }\n\n    function onDayMouseLeave() {\n        setHoverDays([]);\n    }\n\n    return (\n        <Table className={className} cellSpacing={0} cellPadding={0}>\n            <thead>\n                <tr>\n                    {showCalendarWeek && <th className=\"calendar-week\" />}\n                    <th>{mon}</th>\n                    <th>{tue}</th>\n                    <th>{wed}</th>\n                    <th>{thu}</th>\n                    <th>{fri}</th>\n                    <th>{sat}</th>\n                    <th>{sun}</th>\n                </tr>\n            </thead>\n            <tbody>\n                {monthMatrix.map(dates => {\n                    const weekNum = getWeekOfYear(dates[0]);\n                    const selected = dates.some(day =>\n                        selectedDates.some(d => isSameDay(d, day))\n                    );\n                    const selectedStart = dates.some(day =>\n                        dateEqual(selectedDates[0], day)\n                    );\n                    const selectedEnd = dates.some(day =>\n                        dateEqual(selectedDates[selectedDates.length - 1], day)\n                    );\n\n                    const className = [\n                        'day',\n                        selected && 'selected',\n                        selectedStart && 'selected-start',\n                        selectedEnd && 'selected-end'\n                    ]\n                        .filter(c => c)\n                        .join(' ');\n\n                    return (\n                        <tr key={weekNum} className={className}>\n                            {showCalendarWeek && (\n                                <td className=\"calendar-week\">\n                                    <WeekNum\n                                        day={dates[0]}\n                                        onClick={onSelectDay}\n                                    >\n                                        {weekNum}\n                                    </WeekNum>\n                                </td>\n                            )}\n                            {dates.map(day => {\n                                const hover = hoverDays.some(hoverDay =>\n                                    dateEqual(hoverDay, day)\n                                );\n                                const selected = selectedDates.some(d =>\n                                    isSameDay(d, day)\n                                );\n                                const selectedStart = dateEqual(\n                                    selectedDates[0],\n                                    day\n                                );\n                                const selectedEnd = dateEqual(\n                                    selectedDates[selectedDates.length - 1],\n                                    day\n                                );\n                                const className = [\n                                    'day',\n                                    selected && 'selected',\n                                    selectedStart && 'selected-start',\n                                    selectedEnd && 'selected-end'\n                                ]\n                                    .filter(c => c)\n                                    .join(' ');\n\n                                return (\n                                    <td\n                                        key={day.toISOString()}\n                                        className={className}\n                                    >\n                                        <Day\n                                            day={day}\n                                            hover={hover}\n                                            selected={selected}\n                                            selectedStart={selectedStart}\n                                            selectedEnd={selectedEnd}\n                                            date={props.date}\n                                            minDate={props.minDate}\n                                            maxDate={props.maxDate}\n                                            showTime={props.showTime}\n                                            onSelectDay={onSelectDay}\n                                            onMouseEnter={onDayMouseEnter}\n                                            onMouseLeave={onDayMouseLeave}\n                                        />\n                                    </td>\n                                );\n                            })}\n                        </tr>\n                    );\n                })}\n            </tbody>\n        </Table>\n    );\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { ReactTimebombMenuProps } from '../typings';\nimport { isArray, isEnabled, isToday } from '../utils';\n\ninterface DayProps {\n    day: Date;\n    hover: boolean;\n    selected: boolean;\n    selectedStart: boolean;\n    selectedEnd: boolean;\n    date: ReactTimebombMenuProps['date'];\n    minDate: ReactTimebombMenuProps['minDate'];\n    maxDate: ReactTimebombMenuProps['maxDate'];\n    showTime: ReactTimebombMenuProps['showTime'];\n    onSelectDay: ReactTimebombMenuProps['onSelectDay'];\n    onMouseEnter(day: Date): void;\n    onMouseLeave(day: Date): void;\n}\n\ninterface StyledDayProps {\n    selected?: boolean;\n    disabled?: boolean;\n    current: boolean;\n}\n\nconst Flex = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst StyledDay = styled(Flex)`\n    padding: 8px 2px;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    color: ${(props: StyledDayProps) => (props.current ? 'inherit' : '#aaa')};\n    background-color: transparent;\n    pointer-events: ${(props: StyledDayProps) =>\n        props.disabled ? 'none' : 'auto'};\n    user-select: none;\n    opacity: ${(props: StyledDayProps) => (props.disabled ? 0.3 : 1)};\n\n    &.today {\n        background-color: rgba(172, 206, 247, 0.4);\n    }\n\n    &.hover {\n        background-color: #eee;\n    }\n\n    &.selected {\n        font-weight: bold;\n        background-color: rgba(221, 221, 221, 0.3);\n    }\n\n    &.selected-start,\n    &.selected-end {\n        background-color: rgba(221, 221, 221, 1);\n    }\n`;\n\nexport function Day(props: DayProps) {\n    const { day, date, hover, minDate, maxDate, showTime } = props;\n    const [enabled, setEnabled] = React.useState(true);\n    const [today, setToday] = React.useState(false);\n    const current = React.useMemo(getCurrent, [date, day, showTime]);\n\n    React.useEffect(() => {\n        setToday(isToday(day));\n    }, [day.getTime()]);\n\n    React.useEffect(() => {\n        setEnabled(\n            isEnabled('day', day, {\n                minDate: props.minDate,\n                maxDate: props.maxDate\n            })\n        );\n    }, [\n        minDate ? minDate.getTime() : minDate,\n        maxDate ? maxDate.getTime() : maxDate\n    ]);\n\n    function getCurrent() {\n        const dayMonth = day.getMonth();\n\n        if (isArray(date)) {\n            return date.some(d => d.getMonth() === dayMonth);\n        }\n\n        if (date) {\n            return dayMonth === date.getMonth();\n        }\n\n        return false;\n    }\n\n    function onSelectDay() {\n        props.onSelectDay(day);\n    }\n\n    function onMouseEnter() {\n        props.onMouseEnter(day);\n    }\n\n    function onMouseLeave() {\n        props.onMouseLeave(day);\n    }\n\n    function getClassNames() {\n        const classes = ['value'];\n\n        if (props.selected) {\n            classes.push('selected');\n        }\n\n        if (props.selectedStart) {\n            classes.push('selected-start');\n        }\n\n        if (props.selectedEnd) {\n            classes.push('selected-end');\n        }\n\n        if (today) {\n            classes.push('today');\n        }\n\n        if (hover) {\n            classes.push('hover');\n        }\n\n        return classes.join(' ');\n    }\n\n    return (\n        <StyledDay\n            className={getClassNames()}\n            current={current}\n            disabled={!enabled}\n            onClick={onSelectDay}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n        >\n            {day.getDate()}\n        </StyledDay>\n    );\n}\n\ninterface WeekNumProps {\n    day: Date;\n    children: React.ReactNode;\n    onClick(day: Date): void;\n}\n\nexport function WeekNum(props: WeekNumProps) {\n    function onClick() {\n        props.onClick(props.day);\n    }\n\n    return <div onClick={onClick}>{props.children}</div>;\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { ReactTimebombProps, ReactTimebombState, FormatType } from '../typings';\nimport { isArray, dateFormat, getMeridiem, is24HoursFormat } from '../utils';\nimport { NumberInput } from '../components/number-input';\n\nconst Container = styled.div`\n    padding: 0;\n    display: flex;\n    align-items: center;\n    margin: 0 auto;\n    width: 100%;\n    border-top: ${(props: { topDivider?: boolean }) =>\n        props.topDivider ? '1px solid #ccc' : 'none'};\n\n    &:not(:last-child) {\n        border-bottom: 1px solid #ccc;\n    }\n`;\n\nconst Divider = styled.span`\n    margin: 0 5px;\n    font-weight: bold;\n`;\n\nconst Meridiem = styled.span`\n    margin: 0 10px;\n`;\n\ninterface MenuTimeProps {\n    date: ReactTimebombState['date'];\n    timeStep: ReactTimebombProps['timeStep'];\n    topDivider?: boolean;\n    format?: string;\n    onChange(date: Date, mode: FormatType): void;\n    onSubmit(date: Date, mode: FormatType): void;\n    onCancel(date: undefined, mode: FormatType): void;\n}\n\nexport function MenuTime(props: MenuTimeProps) {\n    const { date, timeStep, topDivider, onChange, onSubmit, onCancel } = props;\n    const meridiem = getMeridiem(props.format);\n\n    if (isArray(date) || !date) {\n        return null;\n    }\n\n    return (\n        <Container topDivider={topDivider} className=\"react-timebomb-time\">\n            <NumberInput\n                date={date}\n                step={1}\n                mode=\"hour\"\n                mode24Hours={is24HoursFormat(props.format)}\n                onChange={onChange}\n                onSubmit={onSubmit}\n                onCancel={onCancel}\n            />\n            <Divider className=\"divider\">:</Divider>\n            <NumberInput\n                date={date}\n                step={timeStep}\n                mode=\"minute\"\n                onChange={onChange}\n                onSubmit={onSubmit}\n                onCancel={onCancel}\n            />\n            {meridiem && (\n                <Meridiem className=\"meridiem\">\n                    {dateFormat(date, meridiem)}\n                </Meridiem>\n            )}\n        </Container>\n    );\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { FormatType } from '../typings';\nimport {\n    formatNumberRaw,\n    keys,\n    addMinutes,\n    addHours,\n    subtractHours,\n    subtractMinutes,\n    dateFormat\n} from '../utils';\n\nconst Steps = styled.div`\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 24px;\n    height: 100%;\n    border-width: 0 1px;\n    border-style: solid;\n    border-color: #ccc;\n    visibility: hidden;\n`;\n\nconst Step = styled.button`\n    margin: 0;\n    padding: 0;\n    line-height: 1;\n    border: none;\n    flex: 1;\n    font-size: 8px;\n    color: #ccc;\n    cursor: pointer;\n    -webkit-appearance: none;\n\n    &:focus {\n        outline: none;\n    }\n\n    &:hover {\n        background: #eee;\n        color: #000;\n    }\n`;\n\nconst InputContainer = styled.div`\n    position: relative;\n    flex: 1;\n    display: flex;\n\n    &:hover {\n        ${Steps} {\n            visibility: visible;\n        }\n    }\n\n    &:last-child {\n        ${Steps} {\n            border-right: none;\n        }\n    }\n`;\n\nconst Input = styled.input`\n    flex: 1;\n    padding: 0 25px 0 6px;\n    margin: 0;\n    width: 50%;\n    min-height: 32px;\n    text-align: center;\n    border: none;\n\n    // @see https://stackoverflow.com/a/4298216/1138860\n    &::-webkit-outer-spin-button,\n    &::-webkit-inner-spin-button {\n        /* display: none; <- Crashes Chrome on hover */\n        -webkit-appearance: none;\n        margin: 0; /* <-- Apparently some margin are still there even though it's hidden */\n    }\n\n    &:focus {\n        outline: none;\n    }\n\n    &:focus {\n        background: #eee;\n\n        + ${Steps} {\n            visibility: visible;\n        }\n    }\n`;\n\ninterface NumberInputProps {\n    date: Date;\n    mode: FormatType;\n    mode24Hours?: boolean;\n    step?: number;\n    onChange(date: Date, mode: FormatType): void;\n    onSubmit(date: Date, mode: FormatType): void;\n    onCancel(date: undefined, mode: FormatType): void;\n}\n\nexport function NumberInput(props: NumberInputProps) {\n    const { date, step, mode, mode24Hours, onCancel, onSubmit } = props;\n    const ref = React.useRef<HTMLInputElement | null>(null);\n    const [focused, setFocused] = React.useState(false);\n    const [value, setValue] = React.useState<number | string | undefined>(\n        getDateValue(date)\n    );\n\n    React.useEffect(() => {\n        setValue(getDateValue(props.date));\n    }, [date.getTime()]);\n\n    React.useEffect(() => {\n        if (value && focused) {\n            const newDate = new Date(date);\n\n            props.onChange(newDate, mode);\n        }\n    }, [value]);\n\n    function getDateValue(date: Date) {\n        switch (mode) {\n            case 'hour':\n                return dateFormat(date, mode24Hours ? 'H' : 'h');\n            case 'minute':\n                return date.getMinutes();\n        }\n\n        return 0;\n    }\n\n    function getRenderedValue() {\n        if (focused) {\n            return value;\n        } else {\n            return isFinite(value as any) ? formatNumberRaw(value as any) : '';\n        }\n    }\n\n    function onFocusIn() {\n        setFocused(true);\n    }\n\n    function onFocusOut() {\n        if (document.querySelector(':focus') !== ref.current) {\n            setFocused(false);\n        }\n    }\n\n    function onChange(e: React.SyntheticEvent<HTMLInputElement>) {\n        const { value } = e.currentTarget;\n\n        if (value.length > 2) {\n            e.preventDefault();\n            return;\n        }\n\n        if (value === '') {\n            setValue(value);\n        } else if (date) {\n            const newDate = new Date(date);\n\n            setValue(getDateValue(newDate));\n        }\n    }\n\n    function onStepUp() {\n        if (date) {\n            const newDate = (() => {\n                switch (mode) {\n                    case 'hour':\n                        return addHours(date, 1);\n                    case 'minute':\n                        return addMinutes(date, step!);\n                }\n\n                return undefined;\n            })();\n\n            if (newDate) {\n                props.onChange(newDate, mode);\n            }\n        }\n    }\n\n    function onStepDown() {\n        if (date) {\n            const newDate = (() => {\n                switch (mode) {\n                    case 'hour':\n                        return subtractHours(date, 1);\n                    case 'minute':\n                        return subtractMinutes(date, step!);\n                }\n\n                return undefined;\n            })();\n\n            if (newDate) {\n                props.onChange(newDate, mode);\n            }\n        }\n    }\n\n    function onKeyUp(e: React.KeyboardEvent<HTMLInputElement>) {\n        switch (e.keyCode) {\n            case keys.ENTER:\n                onSubmit(date, mode);\n                break;\n            case keys.ESC:\n                onCancel(undefined, mode);\n                break;\n        }\n    }\n\n    return (\n        <InputContainer\n            className={`react-timebomb-number-input ${mode}`}\n            onMouseEnter={onFocusIn}\n            onMouseLeave={onFocusOut}\n        >\n            <Input\n                data-react-timebomb-selectable\n                type=\"number\"\n                ref={ref}\n                step={step}\n                value={getRenderedValue()}\n                onChange={onChange}\n                onFocus={onFocusIn}\n                onBlur={onFocusOut}\n                onKeyUp={onKeyUp}\n            />\n            <Steps>\n                <Step\n                    data-react-timebomb-selectable\n                    tabIndex={-1}\n                    onClick={onStepUp}\n                >\n                    ▲\n                </Step>\n                <Step\n                    data-react-timebomb-selectable\n                    tabIndex={-1}\n                    onClick={onStepDown}\n                >\n                    ▼\n                </Step>\n            </Steps>\n        </InputContainer>\n    );\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { ReactTimebombProps, ReactTimebombState } from '../typings';\nimport { Button } from '../components/button';\nimport {\n    subtractDays,\n    startOfMonth,\n    endOfMonth,\n    addDays,\n    getMonthNames,\n    isArray\n} from '../utils';\n\ninterface MenuTitleProps {\n    date: ReactTimebombState['date'];\n    minDate: ReactTimebombProps['minDate'];\n    maxDate: ReactTimebombProps['maxDate'];\n    mobile: ReactTimebombProps['mobile'];\n    mode: ReactTimebombState['mode'];\n    selectedRange: ReactTimebombState['selectedRange'];\n    showTime: ReactTimebombState['showTime'];\n    showDate: ReactTimebombState['showDate'];\n    onPrevMonth(): void;\n    onNextMonth(): void;\n    onReset(): void;\n    onMonth(): void;\n    onYear(): void;\n}\n\nconst Container = styled.div`\n    display: ${(props: { show: boolean }) => (props.show ? 'flex' : 'none')};\n    align-items: center;\n    width: 100%;\n    padding: 10px;\n    justify-content: space-between;\n    box-sizing: border-box;\n    white-space: nowrap;\n`;\n\nexport function MenuTitle(props: MenuTitleProps) {\n    const {\n        mode,\n        minDate,\n        maxDate,\n        mobile,\n        showDate,\n        selectedRange,\n        onNextMonth,\n        onPrevMonth,\n        onMonth,\n        onReset,\n        onYear\n    } = props;\n    const [monthNames] = React.useState(getMonthNames());\n    const show =\n        (mode === 'day' ||\n            mode === 'hour' ||\n            mode === 'minute' ||\n            mode === 'second') &&\n        Boolean(showDate);\n    const date = getDate();\n\n    function prevDisabled(): boolean {\n        if (minDate && props.date) {\n            return subtractDays(startOfMonth(date), 1) < minDate;\n        }\n\n        return false;\n    }\n\n    function nextDisabled(): boolean {\n        if (maxDate && props.date) {\n            const lastDate = isArray(props.date)\n                ? props.date[props.date.length - 1]\n                : props.date;\n\n            return addDays(endOfMonth(lastDate), 1) > maxDate;\n        }\n\n        return false;\n    }\n\n    function getDate() {\n        return (isArray(props.date) ? props.date[selectedRange] : props.date)!;\n    }\n\n    return (\n        <Container className=\"react-timebomb-menu-title\" show={show}>\n            <div>\n                <Button\n                    className=\"react-timebomb-button-month\"\n                    tabIndex={-1}\n                    mobile={mobile}\n                    onClick={onMonth}\n                >\n                    <b>{monthNames[date.getMonth()]}</b>\n                </Button>\n                <Button\n                    className=\"react-timebomb-button-year\"\n                    tabIndex={-1}\n                    mobile={mobile}\n                    onClick={onYear}\n                >\n                    {date.getFullYear()}\n                </Button>\n            </div>\n            <div>\n                <Button\n                    className=\"react-timebomb-button-month-prev\"\n                    tabIndex={-1}\n                    disabled={prevDisabled()}\n                    mobile={mobile}\n                    onClick={onPrevMonth}\n                >\n                    ◀\n                </Button>\n                <Button\n                    className=\"react-timebomb-button-month-reset\"\n                    tabIndex={-1}\n                    mobile={mobile}\n                    onClick={onReset}\n                >\n                    ○\n                </Button>\n                <Button\n                    className=\"react-timebomb-button-month-next\"\n                    tabIndex={-1}\n                    disabled={nextDisabled()}\n                    mobile={mobile}\n                    onClick={onNextMonth}\n                >\n                    ▶\n                </Button>\n            </div>\n        </Container>\n    );\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { ArrowButton, SmallButton } from '../components/button';\nimport {\n    ClearComponentProps,\n    IconProps,\n    ReactTimebombValueProps\n} from '../typings';\nimport {\n    clearSelection,\n    fillZero,\n    formatIsActualNumber,\n    formatNumber,\n    formatSplitExpr,\n    getAttribute,\n    getFormatType,\n    isDayFormat,\n    isEnabled,\n    joinDates,\n    keys,\n    manipulateDate,\n    replaceSpaceWithNbsp,\n    selectElement,\n    splitDate,\n    stringFromCharCode,\n    validateFormatGroup,\n    validateFormatType\n} from '../utils';\n\ninterface ValueState {\n    allSelected?: boolean;\n}\n\ninterface InputProps {\n    disabled?: boolean;\n}\n\nexport const Flex = styled.div`\n    display: flex;\n    align-items: center;\n    white-space: nowrap;\n    position: relative;\n    line-height: 1;\n`;\n\nexport const Container = styled(Flex)`\n    justify-content: space-between;\n    align-items: center;\n    padding: 5px 10px;\n    border: 1px solid #ccc;\n    cursor: ${(props: { disabled?: boolean }) =>\n        props.disabled ? 'not-allowed' : 'pointer'};\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n`;\n\nconst Input = styled.span`\n    padding: 2px 0 2px 0;\n    min-width: 1px;\n    cursor: ${(props: InputProps) => (props.disabled ? 'not-allowed' : 'text')};\n    pointer-events: ${(props: InputProps) =>\n        props.disabled ? 'none' : 'auto'};\n\n    &:focus {\n        outline: none;\n    }\n\n    &:last-of-type {\n        padding: 2px 10px 2px 0;\n    }\n\n    &:not(:last-of-type):after {\n        content: attr(data-separator);\n        min-width: 4px;\n        display: inline-block;\n    }\n\n    &:empty:before {\n        content: attr(data-placeholder);\n        color: #aaa;\n    }\n\n    &:empty:not(:last-of-type):after {\n        color: #aaa;\n    }\n\n    &:not([contenteditable='true']) {\n        user-select: none;\n    }\n`;\n\nexport const ClearButton = styled(SmallButton)`\n    font-size: 18px;\n`;\n\nconst ClearButtonX = styled.span`\n    position: relative;\n    left: -1px;\n    top: -2px;\n`;\n\nexport const Placeholder = styled.span`\n    color: #aaa;\n    user-select: none;\n`;\n\nexport const Icon = styled.span`\n    margin-right: 5px;\n    user-select: none;\n\n    &:after {\n        content: '${(props: { icon: string }) => props.icon}';\n    }\n`;\n\nconst DefaultIcon = (props: IconProps) => {\n    function getIconClass(): 'time' | 'calendar' {\n        const { showTime, showDate } = props;\n\n        if (!showDate && showTime) {\n            return 'time';\n        }\n\n        return 'calendar';\n    }\n\n    function getIcon() {\n        switch (getIconClass()) {\n            case 'calendar':\n                return '📅';\n            case 'time':\n                return '⏱';\n            default:\n                return '';\n        }\n    }\n\n    return (\n        <Icon\n            icon={getIcon()}\n            className={`react-timebomb-icon ${getIconClass()}`}\n        />\n    );\n};\n\nexport const DefaultClearComponent = (props: ClearComponentProps) => (\n    <ClearButton\n        className=\"react-timebomb-clearer\"\n        tabIndex={-1}\n        disabled={props.disabled}\n        onClick={props.onClick}\n    >\n        <ClearButtonX>×</ClearButtonX>\n    </ClearButton>\n);\n\nconst META_KEYS = [keys.BACKSPACE, keys.DELETE, keys.TAB];\n\nconst FORBIDDEN_KEYS = [\n    keys.SHIFT,\n    keys.ARROW_LEFT,\n    keys.ARROW_RIGHT,\n    keys.ARROW_UP,\n    keys.ARROW_DOWN,\n    keys.TAB\n];\n\nclass ValueComponent extends React.PureComponent<\n    ReactTimebombValueProps,\n    ValueState\n> {\n    private inputs: HTMLSpanElement[] = [];\n    private mounted = false;\n\n    private get formatGroups(): string[] {\n        return this.props.format.split('').reduce((memo, char) => {\n            const prevChar = memo[memo.length - 1];\n\n            if (\n                (prevChar && char === prevChar.substr(0, 1)) ||\n                (formatSplitExpr.test(prevChar) && formatSplitExpr.test(char))\n            ) {\n                memo[memo.length - 1] += char;\n            } else {\n                memo = [...memo, char];\n            }\n\n            return memo;\n        }, [] as string[]);\n    }\n\n    private get focused(): HTMLElement | null {\n        return document.querySelector(':focus');\n    }\n\n    private get firstInput() {\n        const formatParts = this.props\n            .format!.split(formatSplitExpr)\n            .filter(s => Boolean(s));\n        const i = formatParts.findIndex(isDayFormat);\n\n        return this.inputs[i === -1 ? 0 : i];\n    }\n\n    constructor(props: ReactTimebombValueProps) {\n        super(props);\n\n        this.state = {};\n\n        this.onSearchRef = this.onSearchRef.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onKeyUp = this.onKeyUp.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.onDblClick = this.onDblClick.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onPaste = this.onPaste.bind(this);\n        this.onClear = this.onClear.bind(this);\n        this.onToggle = this.onToggle.bind(this);\n    }\n\n    public componentDidUpdate(prevProps: ReactTimebombValueProps): void {\n        setTimeout(() => {\n            if (!this.mounted) {\n                return;\n            }\n\n            const { open, value, format, mode, allowValidation } = this.props;\n            const hasFocus = this.inputs.some(inp => inp === this.focused);\n            const allowTextSelection =\n                mode === 'day' || mode === 'month' || mode === 'year';\n\n            if (!hasFocus) {\n                if (open) {\n                    const { firstInput } = this;\n\n                    if (prevProps.value !== value && value) {\n                        const parts = splitDate(value, format);\n\n                        this.inputs.forEach(\n                            (input, i) => (input.innerText = parts[i])\n                        );\n\n                        if (firstInput && allowTextSelection) {\n                            firstInput.focus();\n                        }\n                    }\n\n                    if (allowTextSelection) {\n                        if (!prevProps.open || value !== prevProps.value) {\n                            if (firstInput) {\n                                selectElement(firstInput);\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (\n                open &&\n                prevProps.mode !== mode &&\n                !this.state.allSelected &&\n                allowTextSelection\n            ) {\n                const input = this.inputs.find(el => {\n                    const format = getAttribute(el, 'data-group');\n                    const type = getFormatType(format);\n\n                    return type === mode;\n                });\n\n                selectElement(input);\n            }\n\n            if (!open && value) {\n                const parts = splitDate(value, format);\n\n                this.inputs.forEach((input, i) => (input.innerText = parts[i]));\n            }\n\n            if (open && prevProps.value && !value && !allowValidation) {\n                this.inputs.forEach(input => (input.innerText = ''));\n            }\n\n            if (!open) {\n                this.setState({ allSelected: false });\n            }\n        }, 16);\n    }\n\n    public componentDidMount() {\n        this.mounted = true;\n\n        if (this.props.value) {\n            this.forceUpdate();\n        }\n    }\n\n    public componentWillUnmount() {\n        this.mounted = false;\n    }\n\n    public render(): React.ReactNode {\n        const {\n            placeholder,\n            value,\n            showDate,\n            showTime,\n            disabled,\n            arrowButtonId,\n            iconComponent,\n            open\n        } = this.props;\n        const ArrowButtonComp = this.props.arrowButtonComponent || ArrowButton;\n        const ClearComponent =\n            this.props.clearComponent || DefaultClearComponent;\n        const showPlaceholder = placeholder && !open;\n        const showClearer = value && !disabled;\n        const timeOnly = showTime && !showDate;\n        const IconComponent =\n            iconComponent !== undefined ? iconComponent : DefaultIcon;\n\n        return (\n            <Container\n                data-role=\"value\"\n                className=\"react-slct-value react-timebomb-value\"\n                ref={this.props.innerRef}\n                disabled={disabled}\n                onClick={this.onToggle}\n            >\n                <Flex>\n                    {IconComponent && (\n                        <IconComponent\n                            showDate={showDate}\n                            showTime={showTime}\n                        />\n                    )}\n                    <Flex>\n                        {this.renderValue()}\n                        {showPlaceholder && (\n                            <Placeholder className=\"react-timebomb-placeholder\">\n                                {placeholder}\n                            </Placeholder>\n                        )}\n                    </Flex>\n                </Flex>\n                <Flex>\n                    {showClearer && (\n                        <ClearComponent\n                            disabled={disabled}\n                            onClick={this.onClear}\n                        />\n                    )}\n                    {!timeOnly && (\n                        <ArrowButtonComp\n                            id={arrowButtonId}\n                            disabled={disabled}\n                            open={open}\n                        />\n                    )}\n                </Flex>\n            </Container>\n        );\n    }\n\n    private renderValue(): React.ReactNode {\n        const { open, disabled, mobile, value } = this.props;\n        const LabelComponent = this.props.labelComponent;\n        const contentEditable = !disabled && !mobile;\n\n        if (!open && !value) {\n            return null;\n        }\n\n        if (LabelComponent) {\n            return <LabelComponent {...this.props} />;\n        }\n\n        const formatGroups = this.formatGroups;\n\n        return (\n            <Flex>\n                {formatGroups.map((group, i) => {\n                    if (group.split('').some(g => formatSplitExpr.test(g))) {\n                        return null;\n                    } else {\n                        const separator = formatGroups[i + 1];\n                        const hasFormatType = Boolean(getFormatType(group));\n                        const placeholder = hasFormatType ? group : undefined;\n\n                        return (\n                            <Input\n                                data-react-timebomb-selectable\n                                contentEditable={contentEditable}\n                                disabled={disabled || !hasFormatType}\n                                data-placeholder={placeholder}\n                                data-separator={replaceSpaceWithNbsp(separator)}\n                                key={group}\n                                data-group={group}\n                                ref={this.onSearchRef}\n                                onKeyDown={this.onKeyDown}\n                                onKeyUp={this.onKeyUp}\n                                onFocus={this.onFocus}\n                                onBlur={this.onBlur}\n                                onClick={this.onClick}\n                                onDoubleClick={this.onDblClick}\n                                onChange={this.onChange}\n                                onPaste={this.onPaste}\n                            />\n                        );\n                    }\n                })}\n            </Flex>\n        );\n    }\n\n    private onSearchRef(el: HTMLSpanElement | null): void {\n        if (el) {\n            this.inputs.push(el);\n        } else {\n            this.inputs = [];\n        }\n    }\n\n    private onKeyDown(e: React.KeyboardEvent<HTMLSpanElement>): void {\n        const {\n            onChangeValueText,\n            format,\n            value,\n            allowValidation,\n            timeStep\n        } = this.props;\n        const input = e.currentTarget;\n        const { innerText, nextSibling, previousSibling } = input;\n        const formatGroup = getAttribute(input, 'data-group');\n        const numericFormat = formatIsActualNumber(formatGroup);\n        const sel = getSelection();\n        const hasSelection = sel\n            ? Boolean(sel.focusOffset - sel.anchorOffset)\n            : false;\n        let numericValue = parseInt(innerText, 10);\n\n        switch (e.keyCode) {\n            case keys.ENTER:\n            case keys.ESC:\n            case keys.BACKSPACE:\n            case keys.DOT:\n            case keys.COMMA:\n                e.preventDefault();\n                return;\n            case keys.ARROW_RIGHT:\n                e.preventDefault();\n\n                if (nextSibling instanceof HTMLSpanElement) {\n                    nextSibling.focus();\n                } else {\n                    selectElement(input);\n                }\n                return;\n            case keys.ARROW_LEFT:\n                e.preventDefault();\n\n                if (previousSibling instanceof HTMLSpanElement) {\n                    previousSibling.focus();\n                } else {\n                    selectElement(input);\n                }\n                return;\n            case keys.ARROW_UP:\n            case keys.ARROW_DOWN:\n                e.preventDefault();\n\n                if (!numericFormat) {\n                    return;\n                }\n\n                const isArrowUp = e.keyCode === keys.ARROW_UP;\n\n                if (isNaN(numericValue)) {\n                    numericValue = 0;\n                }\n\n                if (isFinite(numericValue)) {\n                    const formatType = getFormatType(formatGroup);\n\n                    if (!allowValidation) {\n                        const add = formatType === 'minute' ? timeStep || 1 : 1;\n                        const nextValue =\n                            numericValue + (isArrowUp ? add : -add);\n                        const valid = validateFormatGroup(\n                            nextValue,\n                            formatGroup\n                        );\n\n                        if (valid) {\n                            input.innerText =\n                                typeof valid === 'string'\n                                    ? valid\n                                    : formatNumber(nextValue);\n                        }\n                    } else {\n                        if (value && formatType) {\n                            const direction = isArrowUp ? 'add' : 'subtract';\n\n                            const newDate = manipulateDate(\n                                value,\n                                formatType,\n                                direction,\n                                timeStep\n                            );\n                            const enabled = isEnabled(\n                                'day',\n                                newDate,\n                                this.props\n                            );\n\n                            if (enabled) {\n                                const dateParts = splitDate(newDate, format);\n\n                                this.inputs.map(\n                                    (inp, i) => (inp.innerText = dateParts[i])\n                                );\n                            }\n                        }\n                    }\n\n                    selectElement(input);\n                    onChangeValueText(joinDates(this.inputs, format));\n                }\n                return;\n        }\n\n        const char = stringFromCharCode(e.keyCode);\n        const groupValue = innerText && !hasSelection ? innerText + char : char;\n\n        if (META_KEYS.includes(e.keyCode) || e.metaKey || e.ctrlKey) {\n            return;\n        }\n\n        if (!numericFormat) {\n            e.preventDefault();\n            return;\n        }\n\n        const valid = validateFormatGroup(groupValue, formatGroup);\n\n        if (!valid) {\n            e.preventDefault();\n        } else if (typeof valid === 'string') {\n            e.preventDefault();\n\n            input.innerText = valid;\n        }\n\n        if (\n            this.state.allSelected &&\n            e.keyCode !== keys.BACKSPACE &&\n            e.keyCode !== keys.DELETE\n        ) {\n            const [firstInput] = this.inputs;\n            let validatedChar = validateFormatGroup(char, formatGroup);\n\n            if (validatedChar && validatedChar === true) {\n                validatedChar = char;\n            }\n\n            if (validatedChar) {\n                e.preventDefault();\n\n                this.inputs.forEach((el, i) => i !== 0 && (el.innerText = ''));\n\n                if (validatedChar.length === 2) {\n                    selectElement(firstInput);\n                } else {\n                    clearSelection();\n\n                    firstInput.innerText = validatedChar;\n                    firstInput.focus();\n\n                    selectElement(firstInput, [1, 1]);\n                }\n            }\n        }\n\n        // validate group\n        if (!hasSelection && innerText.length >= formatGroup.length) {\n            e.preventDefault();\n        }\n    }\n\n    private onKeyUp(e: React.KeyboardEvent<HTMLSpanElement>): void {\n        const { onChangeValueText, format, onSubmit, onToggle } = this.props;\n        const input = e.currentTarget;\n        const { innerText, nextSibling, previousSibling } = input;\n        const dataGroup = getAttribute(input, 'data-group');\n\n        if (e.keyCode === keys.ENTER) {\n            e.preventDefault();\n\n            if (this.focused) {\n                this.focused.blur();\n            }\n            onSubmit();\n            return;\n        }\n\n        if (e.keyCode === keys.ESC && onToggle) {\n            onToggle();\n            return;\n        }\n\n        if (this.state.allSelected) {\n            if (e.keyCode === keys.BACKSPACE || e.keyCode === keys.DELETE) {\n                // delete all\n                this.inputs.forEach(el => (el.innerText = ''));\n\n                selectElement(this.inputs[0]);\n            }\n\n            this.setState({ allSelected: false });\n        }\n\n        // remove text / focus prev\n        else if (e.keyCode === keys.BACKSPACE) {\n            if (innerText) {\n                input.innerText = '';\n            } else if (previousSibling instanceof HTMLSpanElement) {\n                selectElement(previousSibling);\n            }\n        }\n\n        // focus next\n        else if (\n            (innerText.length >= dataGroup.length &&\n                !FORBIDDEN_KEYS.includes(e.keyCode)) ||\n            e.keyCode === keys.DOT ||\n            e.keyCode === keys.COMMA\n        ) {\n            if (\n                (e.keyCode === keys.DOT || e.keyCode === keys.COMMA) &&\n                innerText.length < dataGroup.length\n            ) {\n                const formatType = getFormatType(dataGroup);\n\n                if (!validateFormatType(innerText, formatType)) {\n                    return;\n                }\n            }\n\n            if (!nextSibling) {\n                selectElement(input);\n            } else if (nextSibling instanceof HTMLSpanElement) {\n                selectElement(nextSibling);\n            }\n\n            onChangeValueText(joinDates(this.inputs, format));\n        }\n    }\n\n    private onClick(e: React.SyntheticEvent<HTMLSpanElement>): void {\n        selectElement(e.currentTarget);\n    }\n\n    private onDblClick(e: React.SyntheticEvent<HTMLSpanElement>) {\n        const input = e.currentTarget;\n\n        if (input.parentNode && this.inputs.some(el => Boolean(el.innerText))) {\n            selectElement(this.inputs[0]);\n            selectElement(input.parentNode as HTMLElement);\n            this.setState({ allSelected: true }, this.props.onAllSelect);\n        }\n    }\n\n    private onFocus = (() => {\n        let timeout = 0;\n\n        return (e: React.SyntheticEvent<HTMLSpanElement>) => {\n            clearTimeout(timeout);\n\n            const input = e.currentTarget;\n\n            selectElement(input);\n\n            timeout = setTimeout(() => {\n                if (!this.state.allSelected && this.mounted) {\n                    const formatGroup = getAttribute(input, 'data-group');\n\n                    this.props.onChangeFormatGroup(formatGroup);\n                }\n            }, 16);\n        };\n    })();\n\n    private onBlur(e: React.SyntheticEvent<HTMLSpanElement>): void {\n        if (!this.state.allSelected) {\n            const input = e.target as HTMLSpanElement;\n            const value = input.innerText;\n            const dataGroup = getAttribute(input, 'data-group');\n            const formatType = getFormatType(dataGroup);\n\n            if (formatType) {\n                const filledValue = fillZero(value, formatType);\n\n                if (filledValue) {\n                    input.innerText = filledValue;\n                }\n            }\n        }\n\n        // check if timebomb is still focused\n        setTimeout(() => {\n            const { focused } = this;\n\n            if (\n                this.mounted &&\n                this.props.onToggle &&\n                this.props.open &&\n                focused &&\n                !getAttribute(focused, 'data-react-timebomb-selectable')\n            ) {\n                this.props.onToggle();\n            }\n        }, 0);\n    }\n\n    private onChange(e: React.KeyboardEvent<HTMLSpanElement>): void {\n        const { format, onChangeValueText } = this.props;\n        const input = e.currentTarget;\n        const { innerText, nextSibling } = input;\n\n        onChangeValueText(joinDates(this.inputs, format));\n\n        if (innerText.length >= getAttribute(input, 'data-group').length) {\n            if (nextSibling instanceof HTMLSpanElement) {\n                nextSibling.focus();\n            }\n        }\n    }\n\n    private onPaste(e: React.ClipboardEvent<HTMLSpanElement>) {\n        e.preventDefault();\n\n        const text = e.clipboardData.getData('text/plain');\n\n        if (text) {\n            this.props.onPaste(text);\n\n            if (e.target instanceof HTMLSpanElement) {\n                e.target.blur();\n            }\n        }\n    }\n\n    private onClear(e: React.MouseEvent<HTMLButtonElement>): void {\n        e.stopPropagation();\n\n        this.props.onClear();\n    }\n\n    private onToggle(e: React.SyntheticEvent<HTMLSpanElement>): void {\n        const { open, disabled, onToggle } = this.props;\n\n        if (disabled) {\n            return;\n        }\n\n        if (onToggle) {\n            if (!this.inputs.some(inp => inp === e.target) || !open) {\n                onToggle();\n            }\n        }\n    }\n}\n\nexport const Value = React.forwardRef(\n    (props: ReactTimebombValueProps, ref: React.Ref<HTMLDivElement>) => (\n        <ValueComponent innerRef={ref} {...props} />\n    )\n);\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { ArrowButton } from '../components/button';\nimport { ReactTimebombMultiValueProps } from '../typings';\nimport { dateEqual, dateFormat, keys } from '../utils';\nimport {\n    Container,\n    DefaultClearComponent,\n    Flex,\n    Icon,\n    Placeholder\n} from './value';\n\nconst DefaultIcon = () => <Icon className=\"react-timebomb-icon\" icon=\"📅\" />;\n\nconst StyledValue = styled(Value)`\n    > span:after {\n        content: ' – ';\n    }\n\n    > span:last-child:after {\n        content: '';\n    }\n`;\n\nconst HoverSpan = styled.span`\n    opacity: 0.5;\n`;\n\nfunction Value(props: ReactTimebombMultiValueProps) {\n    const { value, className } = props;\n    const LabelComponent = props.labelComponent;\n\n    const onClickDate = (e: React.SyntheticEvent<HTMLSpanElement>) => {\n        if (props.selectRange === true) {\n            const { currentTarget } = e;\n\n            setTimeout(() => {\n                const date = new Date(\n                    currentTarget.getAttribute('data-date') || 0\n                );\n                const index = parseInt(\n                    currentTarget.getAttribute('data-index') || '0',\n                    10\n                );\n\n                props.onValueSelect(date, index);\n            }, 0);\n        } else if (props.onToggle) {\n            props.onToggle();\n        }\n    };\n\n    const content = (() => {\n        if (!value) {\n            return null;\n        }\n\n        if (LabelComponent) {\n            return <LabelComponent {...props} />;\n        }\n\n        if (value.length === 1) {\n            return <span>{dateFormat(value[0], props.format)}</span>;\n        }\n\n        return (\n            <>\n                {value.map((d, i) => {\n                    const str = dateFormat(d, props.format);\n\n                    if (dateEqual(d, props.hoverDate)) {\n                        return (\n                            <HoverSpan key={i} onClick={props.onToggle}>\n                                {str}\n                            </HoverSpan>\n                        );\n                    } else {\n                        return (\n                            <span\n                                key={i}\n                                data-index={i}\n                                data-date={d.toDateString()}\n                                onClick={onClickDate}\n                            >\n                                {str}\n                            </span>\n                        );\n                    }\n                })}\n            </>\n        );\n    })();\n\n    return <div className={className}>{content}</div>;\n}\n\nexport const ValueMulti = React.forwardRef(\n    (props: ReactTimebombMultiValueProps, ref: React.Ref<HTMLDivElement>) => {\n        const {\n            placeholder,\n            value,\n            open,\n            disabled,\n            arrowButtonId,\n            iconComponent,\n            onToggle\n        } = props;\n        const ArrowButtonComp = props.arrowButtonComponent || ArrowButton;\n        const ClearComponent = props.clearComponent || DefaultClearComponent;\n        const showPlaceholder = placeholder && !value;\n        const IconComponent =\n            iconComponent !== undefined ? iconComponent : DefaultIcon;\n\n        React.useEffect(() => {\n            document.body.addEventListener('keyup', onKeyUp);\n\n            return () => {\n                document.body.removeEventListener('keyup', onKeyUp);\n            };\n        }, []);\n\n        function onClear(e: React.MouseEvent<HTMLButtonElement>): void {\n            e.stopPropagation();\n\n            props.onClear();\n        }\n\n        function onKeyUp(e: KeyboardEvent) {\n            switch (e.keyCode) {\n                case keys.ESC:\n                    if (open && onToggle) {\n                        onToggle();\n                    }\n                    break;\n            }\n        }\n\n        return (\n            <Container\n                data-role=\"value\"\n                className=\"react-slct-value react-timebomb-value\"\n                disabled={disabled}\n                ref={ref}\n                onClick={value || disabled ? undefined : onToggle}\n            >\n                <Flex>\n                    {IconComponent && <IconComponent />}\n                    <Flex>\n                        <StyledValue {...props} />\n                        {showPlaceholder && (\n                            <Placeholder className=\"react-timebomb-placeholder\">\n                                {placeholder}\n                            </Placeholder>\n                        )}\n                    </Flex>\n                </Flex>\n                <Flex>\n                    {value && (\n                        <ClearComponent disabled={disabled} onClick={onClear} />\n                    )}\n                    <ArrowButtonComp\n                        id={arrowButtonId}\n                        disabled={disabled}\n                        open={open}\n                        onClick={disabled ? undefined : onToggle}\n                    />\n                </Flex>\n            </Container>\n        );\n    }\n);\n","import { ArrowButtonProps } from './components/button';\n\nexport type ReactTimebombDate = undefined | Date | Date[];\n\ntype ReactComponent<P = {}> =\n    | React.ComponentClass<P>\n    | React.StatelessComponent<P>;\n\nexport interface ReactTimebombProps {\n    className?: string;\n    value?: ReactTimebombDate;\n    format?: string;\n    placeholder?: string;\n    menuWidth?: number;\n    minDate?: Date;\n    maxDate?: Date;\n    selectRange?: 'week' | number | boolean;\n    showCalendarWeek?: boolean;\n    showConfirm?: boolean;\n    disabled?: boolean;\n    error?: any;\n    mobile?: boolean;\n    arrowButtonId?: string;\n    arrowButtonComponent?: ReactComponent<ArrowButtonProps>;\n    clearComponent?: ReactComponent<ClearComponentProps>;\n    iconComponent?: ReactComponent<IconProps> | null;\n    labelComponent?: ReactComponent<\n        ReactTimebombValueProps | ReactTimebombMultiValueProps\n    >;\n    confirmComponent?: ReactComponent<ReactTimebombMenuProps>;\n    timeStep?: number;\n    onChange(...dates: (undefined | Date)[]): void;\n    onError?(\n        error: ReactTimebombError,\n        ...value: ReactTimebombState['valueText'][]\n    ): void;\n    onOpen?(): void;\n    onClose?(): void;\n}\n\nexport interface ReactTimebombState {\n    minDate?: Date;\n    maxDate?: Date;\n    valueText?: string | string[];\n    allowValidation?: boolean;\n    date: ReactTimebombDate;\n    mode?: FormatType;\n    showDate?: boolean;\n    showTime?: boolean;\n    preventClose?: boolean;\n    selectedRange: number;\n    menuHeight?: 'auto';\n    hoverDate?: Date;\n}\n\nexport type ReactTimebombError = 'outOfRange' | 'invalidDate';\nexport type FormatType =\n    | 'day'\n    | 'month'\n    | 'year'\n    | 'hour'\n    | 'minute'\n    | 'second';\n\nexport interface ReactTimebombValueProps {\n    className?: string;\n    innerRef?: React.Ref<HTMLDivElement>;\n    open?: boolean;\n    value?: Date;\n    format: string;\n    placeholder: ReactTimebombProps['placeholder'];\n    minDate: ReactTimebombProps['minDate'];\n    maxDate: ReactTimebombProps['maxDate'];\n    showDate: ReactTimebombState['showDate'];\n    showTime: ReactTimebombState['showTime'];\n    mode: ReactTimebombState['mode'];\n    allowValidation: ReactTimebombState['allowValidation'];\n    arrowButtonComponent: ReactTimebombProps['arrowButtonComponent'];\n    clearComponent: ReactTimebombProps['clearComponent'];\n    arrowButtonId: ReactTimebombProps['arrowButtonId'];\n    iconComponent: ReactTimebombProps['iconComponent'];\n    labelComponent: ReactTimebombProps['labelComponent'];\n    disabled: ReactTimebombProps['disabled'];\n    mobile: ReactTimebombProps['mobile'];\n    timeStep: ReactTimebombProps['timeStep'];\n    hoverDate: ReactTimebombState['hoverDate'];\n    selectRange: ReactTimebombProps['selectRange'];\n    onToggle?(): void;\n    onChangeValueText(valueText?: string, commit?: boolean): void;\n    onChangeFormatGroup(formatGroup: string): void;\n    onAllSelect(): void;\n    onSubmit(): void;\n    onClear(): void;\n    onPaste(text: string): void;\n}\n\nexport type ReactTimebombMultiValueProps = Omit<\n    ReactTimebombValueProps,\n    'value'\n> & {\n    value: undefined | Date[];\n    onValueSelect(date: Date, index: number): void;\n};\n\nexport interface ReactTimebombMenuProps {\n    showTime: ReactTimebombState['showTime'];\n    showDate: ReactTimebombState['showDate'];\n    showConfirm: ReactTimebombProps['showConfirm'];\n    showCalendarWeek: ReactTimebombProps['showCalendarWeek'];\n    selectRange: ReactTimebombProps['selectRange'];\n    value: ReactTimebombProps['value'];\n    valueText: ReactTimebombState['valueText'];\n    minDate: ReactTimebombProps['minDate'];\n    maxDate: ReactTimebombProps['maxDate'];\n    date: ReactTimebombState['date'];\n    mode: ReactTimebombState['mode'];\n    timeStep: ReactTimebombProps['timeStep'];\n    selectedRange: ReactTimebombState['selectedRange'];\n    mobile: ReactTimebombProps['mobile'];\n    confirmComponent: ReactTimebombProps['confirmComponent'];\n    hoverDate: ReactTimebombState['hoverDate'];\n    format: string;\n    onSelectDay(date: Date): void;\n    onChangeYear(date: Date): void;\n    onChangeMonth(date: Date): void;\n    onSelectTime(date: Date, mode: FormatType): void;\n    onSubmitTime(date: Date | undefined, mode: FormatType): void;\n    onHoverDays(dates: Date[]): void;\n    onSubmit(): void;\n}\n\nexport interface IconProps {\n    showDate?: boolean;\n    showTime?: boolean;\n}\n\nexport interface ClearComponentProps {\n    disabled?: boolean;\n    onClick(e: React.MouseEvent<HTMLButtonElement>): void;\n}\n\nexport { ClearComponentProps as ReactTimebombClearComponentProps };\nexport { ArrowButtonProps as ReactTimebombArrowButtonProps };\n"]}