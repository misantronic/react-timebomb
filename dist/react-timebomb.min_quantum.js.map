{"version":3,"sources":["src/index.tsx","src/menu.tsx","src/utils.ts","src/menu-day.tsx","src/menu-title.tsx","src/value.tsx","src/value-multi.tsx"],"names":["React","$fsx","r","styled_components_1","react_slct_1","menu_1","menu_title_1","value_1","utils_1","typings_1","exports","ReactTimebombProps","ReactTimebombState","ReactTimebombError","value_multi_1","Container","default","div","MenuWrapper","props","menuHeight","BlindInput","input","ReactTimebomb","Component","[object Object]","super","minDate","maxDate","selectRange","showConfirm","isBefore","Error","this","state","initialState","onChangeValueText","bind","onValueSubmit","onSelectDay","onModeYear","onModeMonths","onSelectMonth","onSelectYear","onReset","onNextMonth","onPrevMonth","onSelectTime","onClose","onClear","showTime","Boolean","test","format","className","classNames","push","error","join","defaultDateValue","value","date","Date","isAfter","startOfDay","allowValidation","mode","valueText","dateFormat","undefined","selectedRange","prevProps","prevState","setState","valueTextDidUpdate","commit","validDate","validateDate","Array","isArray","every","d","isEnabled","emitChange","emitError","isUndefined","placeholder","menuWidth","showCalendarWeek","selectWeek","MENU_HEIGHT","endOfDay","createElement","Select","open","onToggle","onRef","MenuContainer","ref","renderValue","Math","max","MENU_WIDTH","MenuTitle","onMonths","onYear","Menu","onSubmit","type","onFocus","multiValue","ValueMulti","Value","clearSelection","setTimeout","onError","onChange","dateEqual","length","day","valueDate","startOfWeek","endOfWeek","setDate","getHours","getMinutes","dateArr","getSelectedRange","sort","sortDates","currentDate","setMonth","getMonth","time","splitted","split","newDate","map","parseInt","v","defaultProps","button_1","menu_day_1","MonthAndYearContainer","MonthsContainer","MonthContainer","YearContainer","Confirm","Table","table","css","PureComponent","monthMatrixCache","Map","now","monthMatrix","getDate","dateMonth","dateYear","getFullYear","cacheKey","cached","get","weeks","base","startOfMonth","week","weekStart","addDays","set","fullYears","year","currentYear","fill","_","i","setFullYear","enabled","selected","filter","obj","reverse","minYear","array","renderMenuMonths","renderMenuYear","renderMonth","renderConfirm","onYearContainer","fullYear","dateStr","toISOString","Button","key","tabIndex","data-date","onClick","months","getMonthNames","month","str","disabled","cellSpacing","cellPadding","dates","weekNum","getWeekOfYear","WeekDay","Day","isValid","e","getAttribute","currentTarget","el","querySelector","scrollIntoView","scrollBy","top","moment_1","momentImport","moment","formatSplit","getFormatType","setHours","num","add","toDate","instance","validateFormatGroup","isFinite","int","char","String","strLen","startsWith","stringFromCharCode","keyCode","charCode","floor","fromCharCode","formatNumber","number","splitDate","joinDates","parts","strParts","part","HTMLElement","innerText","val","splittedFormat","spaceFormat","momentDate","parsingFlags","overflow","parsedDateParts","sel","getSelection","empty","removeAllRanges","isoWeek","startOf","endOf","subtractDays","manipulateDate","subtract","isSame","inp","dateA","isSameOrAfter","context","attr","a","b","getTime","keys","ARROW_UP","ARROW_RIGHT","ARROW_DOWN","ARROW_LEFT","ENTER","TAB","ESC","BACKSPACE","DELETE","SPACE","SHIFT","A","Flex","StyledDay","current","today","dayWeekOfYear","some","dayMonth","isToday","updateState","dayChanged","minMaxChanged","children","show","prevDisabled","firstDate","nextDisabled","lastDate","endOfMonth","Input","span","ArrowButton","ClearButton","Placeholder","Icon","WHITELIST_KEYS","FORBIDDEN_KEYS","searchInputs","onSearchRef","onKeyDown","onKeyUp","onBlur","formatGroups","reduce","memo","prevChar","substr","focused","document","forEach","focus","selectText","showPlaceholder","data-role","group","separator","contentEditable","data-placeholder","data-separator","data-group","data-react-timebomb-selectable","range","createRange","selectNodeContents","addRange","nextSibling","previousSibling","hasSelection","focusOffset","baseOffset","numericValue","preventDefault","HTMLSpanElement","isArrowUp","isNaN","formatGroup","formatType","direction","shiftKey","dateParts","nextValue","valid","dataValue","dataGroup","groupValue","includes","metaKey","ctrlKey","blur","setAttribute","target","fillZero","stopPropagation","body","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { Select } from 'react-slct';\nimport { Menu } from './menu';\nimport { MenuTitle } from './menu-title';\nimport { Value } from './value';\nimport {\n    isUndefined,\n    startOfDay,\n    isEnabled,\n    dateFormat,\n    validateDate,\n    setDate,\n    clearSelection,\n    endOfDay,\n    isBefore,\n    isAfter,\n    dateEqual,\n    startOfWeek,\n    endOfWeek,\n    sortDates\n} from './utils';\nimport {\n    ReactTimebombProps,\n    ReactTimebombState,\n    ReactTimebombError,\n    ReactTimebombDate\n} from './typings';\nimport { ValueMulti } from './value-multi';\n\nexport { ReactTimebombProps, ReactTimebombState, ReactTimebombError };\n\nconst Container = styled.div`\n    width: 100%;\n    position: relative;\n`;\n\nconst MenuWrapper = styled.div`\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    border: 1px solid #ccc;\n    box-sizing: border-box;\n    padding: 0;\n    background: white;\n    z-index: 1;\n    max-height: ${(props: { menuHeight: number }) => props.menuHeight}px;\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 13px;\n`;\n\nconst BlindInput = styled.input`\n    position: absolute;\n    left: 0;\n    top: 0;\n    opacity: 0;\n    pointer-events: none;\n`;\n\nexport class ReactTimebomb extends React.Component<\n    ReactTimebombProps,\n    ReactTimebombState\n> {\n    public static MENU_WIDTH = 320;\n    public static MENU_HEIGHT = 320;\n\n    private onToggle?: () => void;\n\n    /** @internal */\n    public static getDerivedStateFromProps(\n        props: ReactTimebombProps\n    ): Partial<ReactTimebombState> | null {\n        return {\n            showTime: Boolean(/H|h|m|k|a|S|s/.test(props.format!))\n        };\n    }\n\n    /** @internal */\n    public static defaultProps: Partial<ReactTimebombProps> = {\n        format: 'YYYY-MM-DD'\n    };\n\n    private get className() {\n        const classNames = ['react-timebomb'];\n\n        if (this.props.className) {\n            classNames.push(this.props.className);\n        }\n\n        if (this.props.error) {\n            classNames.push('error');\n        }\n\n        return classNames.join(' ');\n    }\n\n    private get defaultDateValue() {\n        const { value, minDate, maxDate } = this.props;\n\n        if (value) {\n            return value;\n        }\n\n        let date = new Date();\n\n        if (maxDate && isBefore(maxDate, date)) {\n            date = maxDate;\n        } else if (minDate && isAfter(minDate, date)) {\n            date = minDate;\n        }\n\n        return startOfDay(date);\n    }\n\n    private get initialState(): ReactTimebombState {\n        return {\n            allowValidation: false,\n            mode: 'month',\n            valueText: this.props.value\n                ? dateFormat(this.props.value, this.props.format!)\n                : undefined,\n            date: this.defaultDateValue,\n            selectedRange: 0\n        };\n    }\n\n    constructor(props: ReactTimebombProps) {\n        super(props);\n\n        const { minDate, maxDate, selectRange, showConfirm } = props;\n\n        if (minDate && maxDate && isBefore(maxDate, minDate)) {\n            throw new Error('minDate must appear before maxDate');\n        }\n\n        if (selectRange && !showConfirm) {\n            throw new Error(\n                'when using `selectRange` please also set `showConfirm`'\n            );\n        }\n\n        this.state = this.initialState;\n\n        this.onChangeValueText = this.onChangeValueText.bind(this);\n        this.onValueSubmit = this.onValueSubmit.bind(this);\n        this.onSelectDay = this.onSelectDay.bind(this);\n        this.onModeYear = this.onModeYear.bind(this);\n        this.onModeMonths = this.onModeMonths.bind(this);\n        this.onSelectMonth = this.onSelectMonth.bind(this);\n        this.onSelectYear = this.onSelectYear.bind(this);\n        this.onReset = this.onReset.bind(this);\n        this.onNextMonth = this.onNextMonth.bind(this);\n        this.onPrevMonth = this.onPrevMonth.bind(this);\n        this.onSelectTime = this.onSelectTime.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.onClear = this.onClear.bind(this);\n    }\n\n    public componentDidUpdate(\n        prevProps: ReactTimebombProps,\n        prevState: ReactTimebombState\n    ): void {\n        const { valueText } = this.state;\n        const { value, format } = this.props;\n\n        if (prevProps.format !== format) {\n            this.setState({\n                valueText: value ? dateFormat(value, format!) : undefined\n            });\n        }\n\n        if (prevState.valueText !== valueText) {\n            this.valueTextDidUpdate(false);\n        }\n    }\n\n    private valueTextDidUpdate(commit: boolean): void {\n        const { valueText, allowValidation } = this.state;\n        const { format } = this.props;\n        const validDate = validateDate(valueText, format!);\n\n        if (validDate) {\n            this.setState({ allowValidation: true }, () => {\n                const enabled = Array.isArray(validDate)\n                    ? validDate.every(d => isEnabled('day', d, this.props))\n                    : isEnabled('day', validDate, this.props);\n\n                if (enabled) {\n                    this.setState({ date: validDate }, () =>\n                        this.emitChange(validDate, commit)\n                    );\n                } else {\n                    this.emitError('outOfRange', valueText!);\n                }\n            });\n        } else if (valueText) {\n            this.emitError('invalidDate', valueText);\n        } else if (!isUndefined(valueText) && allowValidation) {\n            this.emitChange(undefined, commit);\n        }\n    }\n\n    public render(): React.ReactNode {\n        const {\n            placeholder,\n            menuWidth,\n            showConfirm,\n            showCalendarWeek,\n            selectWeek,\n            format,\n            error\n        } = this.props;\n        const { showTime, valueText, mode, selectedRange } = this.state;\n        const menuHeight = ReactTimebomb.MENU_HEIGHT;\n        const minDate = this.props.minDate\n            ? startOfDay(this.props.minDate)\n            : undefined;\n        const maxDate = this.props.maxDate\n            ? endOfDay(this.props.maxDate)\n            : undefined;\n        const value = valueText\n            ? validateDate(valueText, format!)\n            : this.props.value;\n\n        return (\n            <Select<ReactTimebombDate>\n                value={value}\n                placeholder={placeholder}\n                error={error}\n                onClose={this.onClose}\n            >\n                {({ placeholder, open, onToggle, onRef, MenuContainer }) => {\n                    this.onToggle = onToggle;\n\n                    return (\n                        <Container ref={onRef} className={this.className}>\n                            {this.renderValue(value, placeholder, open)}\n                            {open ? (\n                                <MenuContainer\n                                    menuWidth={Math.max(\n                                        ReactTimebomb.MENU_WIDTH,\n                                        menuWidth || 0\n                                    )}\n                                    menuHeight={menuHeight}\n                                >\n                                    <MenuWrapper\n                                        className=\"react-timebomb-menu\"\n                                        menuHeight={menuHeight}\n                                    >\n                                        <MenuTitle\n                                            mode={mode}\n                                            date={this.state.date}\n                                            minDate={minDate}\n                                            maxDate={maxDate}\n                                            selectedRange={selectedRange}\n                                            onMonths={this.onModeMonths}\n                                            onYear={this.onModeYear}\n                                            onNextMonth={this.onNextMonth}\n                                            onPrevMonth={this.onPrevMonth}\n                                            onReset={this.onReset}\n                                        />\n                                        <Menu\n                                            showTime={showTime}\n                                            showConfirm={showConfirm}\n                                            showCalendarWeek={showCalendarWeek}\n                                            selectWeek={selectWeek}\n                                            date={this.state.date}\n                                            value={value}\n                                            valueText={valueText}\n                                            format={format!}\n                                            mode={mode}\n                                            minDate={minDate}\n                                            maxDate={maxDate}\n                                            selectedRange={selectedRange}\n                                            onSelectDay={this.onSelectDay}\n                                            onSelectMonth={this.onSelectMonth}\n                                            onSelectYear={this.onSelectYear}\n                                            onSelectTime={this.onSelectTime}\n                                            onSubmit={this.onValueSubmit}\n                                        />\n                                    </MenuWrapper>\n                                </MenuContainer>\n                            ) : (\n                                <BlindInput type=\"text\" onFocus={onToggle} />\n                            )}\n                        </Container>\n                    );\n                }}\n            </Select>\n        );\n    }\n\n    private renderValue(\n        value: ReactTimebombDate,\n        placeholder?: string,\n        open?: boolean\n    ) {\n        placeholder = open ? undefined : placeholder;\n\n        const { minDate, maxDate, format, selectRange } = this.props;\n        const { allowValidation } = this.state;\n\n        if (selectRange || Array.isArray(value)) {\n            const multiValue = value\n                ? Array.isArray(value)\n                    ? value\n                    : [value]\n                : undefined;\n\n            return (\n                <ValueMulti\n                    onClear={this.onClear}\n                    onToggle={this.onToggle!}\n                    open={open}\n                    placeholder={placeholder}\n                    value={multiValue}\n                />\n            );\n        }\n\n        return (\n            <Value\n                placeholder={placeholder}\n                format={format!}\n                value={value}\n                minDate={minDate}\n                maxDate={maxDate}\n                allowValidation={allowValidation}\n                open={open}\n                onClear={this.onClear}\n                onChangeValueText={this.onChangeValueText}\n                onToggle={this.onToggle!}\n                onSubmit={this.onValueSubmit}\n            />\n        );\n    }\n\n    private onClose() {\n        clearSelection();\n\n        setTimeout(() => {\n            clearSelection();\n\n            this.setState(this.initialState);\n        }, 16);\n    }\n\n    private emitError(\n        error: ReactTimebombError,\n        value: ReactTimebombState['valueText']\n    ): void {\n        if (this.state.allowValidation) {\n            this.setState({ allowValidation: false }, () => {\n                if (this.props.onError) {\n                    this.props.onError(error, value);\n                }\n            });\n        }\n    }\n\n    private emitChange(date: ReactTimebombDate, commit: boolean): void {\n        const { value, showConfirm, onChange } = this.props;\n\n        if (!showConfirm) {\n            commit = true;\n        }\n\n        if (dateEqual(value, date)) {\n            return;\n        }\n\n        if (commit) {\n            if (Array.isArray(date)) {\n                onChange(...date);\n            } else {\n                onChange(date);\n            }\n        }\n\n        this.setState({ allowValidation: Boolean(date) });\n    }\n\n    private getSelectedRange(date: ReactTimebombDate) {\n        if (Array.isArray(date)) {\n            if (date.length === 2) {\n                if (date[0] > date[1]) {\n                    return 0;\n                } else {\n                    return 1;\n                }\n            } else if (date.length === 1) {\n                return 0;\n            }\n        } else {\n            return 0;\n        }\n\n        return this.state.selectedRange;\n    }\n\n    private onClear() {\n        this.setState({ valueText: undefined }, () => {\n            this.emitChange(undefined, true);\n        });\n    }\n\n    private onChangeValueText(valueText: string | undefined): void {\n        this.setState({ valueText });\n    }\n\n    private onValueSubmit(): void {\n        if (this.onToggle) {\n            this.onToggle();\n        }\n        clearSelection();\n\n        this.valueTextDidUpdate(true);\n    }\n\n    private onSelectDay(day: Date): void {\n        const { value, format, selectWeek, selectRange } = this.props;\n\n        const valueDate =\n            value instanceof Date\n                ? value\n                : Array.isArray(value)\n                ? value[0]\n                : undefined;\n\n        if (selectWeek) {\n            const date = [startOfWeek(day), endOfWeek(day)];\n            const valueText = dateFormat(date, format!);\n\n            this.setState({ date, valueText });\n        } else {\n            const date = setDate(\n                day,\n                valueDate ? valueDate.getHours() : 0,\n                valueDate ? valueDate.getMinutes() : 0\n            );\n\n            if (selectRange) {\n                const dateArr =\n                    Array.isArray(this.state.valueText) &&\n                    this.state.valueText.length === 1\n                        ? [\n                              validateDate(\n                                  this.state.valueText[0],\n                                  format!\n                              ) as Date,\n                              date\n                          ]\n                        : [date];\n\n                const selectedRange = this.getSelectedRange(dateArr);\n                const valueText = dateFormat(dateArr.sort(sortDates), format!);\n\n                this.setState({ date: dateArr, valueText, selectedRange });\n            } else {\n                const valueText = dateFormat(date, format!);\n\n                this.setState({ date, valueText });\n            }\n        }\n    }\n\n    private onModeYear() {\n        this.setState({ mode: 'year' });\n    }\n\n    private onModeMonths() {\n        this.setState({ mode: 'months' });\n    }\n\n    private onSelectMonth(date: Date) {\n        this.setState({ date, mode: 'month' });\n    }\n\n    private onSelectYear(date: Date) {\n        this.setState({ date, mode: 'months' });\n    }\n\n    private onReset(): void {\n        this.setState({ date: this.defaultDateValue });\n    }\n\n    private onNextMonth(): void {\n        const currentDate = Array.isArray(this.state.date)\n            ? this.state.date[this.state.selectedRange]\n            : this.state.date;\n        const date = new Date(currentDate!);\n\n        date.setMonth(date.getMonth() + 1);\n\n        this.setState({ date });\n    }\n\n    private onPrevMonth(): void {\n        const currentDate = Array.isArray(this.state.date)\n            ? this.state.date[this.state.selectedRange]\n            : this.state.date;\n        const date = new Date(currentDate!);\n\n        date.setMonth(date.getMonth() - 1);\n\n        this.setState({ date });\n    }\n\n    private onSelectTime(time: string): void {\n        const { format } = this.props;\n        let value = this.props.value || new Date('1970-01-01');\n\n        if (!time) {\n            if (Array.isArray(value)) {\n                value = value.map(v => startOfDay(v));\n            }\n\n            this.emitChange(value, false);\n        } else {\n            const splitted = time.split(':');\n            const newDate = Array.isArray(value)\n                ? value.map(d =>\n                      setDate(\n                          d,\n                          parseInt(splitted[0], 10),\n                          parseInt(splitted[1], 10)\n                      )\n                  )\n                : setDate(\n                      value,\n                      parseInt(splitted[0], 10),\n                      parseInt(splitted[1], 10)\n                  );\n\n            const valueText = dateFormat(newDate, format!);\n\n            this.setState({ valueText }, () => this.emitChange(newDate, false));\n        }\n    }\n}\n","import * as React from 'react';\nimport styled, { css } from 'styled-components';\nimport { ReactTimebombState, ReactTimebombProps } from '.';\nimport {\n    isEnabled,\n    validateDate,\n    getMonthNames,\n    getWeekOfYear,\n    startOfWeek,\n    addDays,\n    startOfMonth,\n    endOfWeek,\n    getAttribute\n} from './utils';\nimport { Button } from './button';\nimport { Day, WeekDay } from './menu-day';\nimport { ReactTimebombDate } from './typings';\n\nexport interface MenuProps {\n    showTime: ReactTimebombState['showTime'];\n    showConfirm: ReactTimebombProps['showConfirm'];\n    showCalendarWeek: ReactTimebombProps['showCalendarWeek'];\n    selectWeek: ReactTimebombProps['selectWeek'];\n    value: ReactTimebombProps['value'];\n    valueText: ReactTimebombState['valueText'];\n    minDate: ReactTimebombProps['minDate'];\n    maxDate: ReactTimebombProps['maxDate'];\n    date: ReactTimebombState['date'];\n    mode: ReactTimebombState['mode'];\n    selectedRange: ReactTimebombState['selectedRange'];\n    format: string;\n    onSelectDay(date: Date): void;\n    onSelectYear(date: Date): void;\n    onSelectMonth(date: Date): void;\n    onSelectTime(time: string): void;\n    onSubmit(): void;\n}\n\ninterface TableProps {\n    selectWeek?: boolean;\n}\n\nconst MonthAndYearContainer = styled.div`\n    display: flex;\n    height: 220px;\n`;\n\nconst MonthsContainer = styled.div`\n    display: flex;\n    flex: 1;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-self: flex-start;\n    align-items: flex-start;\n    padding: 10px;\n\n    button {\n        width: 33%;\n        font-size: 16px;\n        font-weight: normal;\n        font-style: normal;\n        font-stretch: normal;\n        min-height: 46px;\n        border: none;\n        margin: 0 0 4px;\n    }\n`;\n\nconst MonthContainer = styled.div`\n    padding: 0 0 10px;\n`;\n\nconst YearContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n    border-left: solid 1px #e6e6e6;\n    padding: 10px;\n    flex: 0 0 90px;\n\n    button {\n        width: 100%;\n        font-size: 16px;\n        font-weight: normal;\n        font-style: normal;\n        font-stretch: normal;\n        border: none;\n        padding: 6px 0;\n        margin: 0 0 4px;\n        min-height: 46px;\n    }\n`;\n\nconst Confirm = styled.div`\n    width: 100%;\n    text-align: center;\n    padding: 10px 0 0;\n\n    button {\n        padding: 3px 28px;\n    }\n`;\n\nconst Table = styled.table`\n    width: 100%;\n    font-size: 13px;\n    user-select: none;\n    padding: 0 10px;\n    box-sizing: border-box;\n\n    td.calendar-week {\n        color: #aaa;\n    }\n\n    th.calendar-week {\n        text-align: left;\n        color: #aaa;\n    }\n\n    tr {\n        ${(props: TableProps) =>\n            props.selectWeek\n                ? css`\n                      &:hover {\n                          cursor: pointer;\n\n                          td.day {\n                              background-color: #eee;\n                          }\n                      }\n                  `\n                : ''};\n\n        th {\n            padding: 3px 2px;\n        }\n    }\n`;\n\nexport class Menu extends React.PureComponent<MenuProps> {\n    private get now(): Date {\n        return new Date();\n    }\n\n    private getDate(date: ReactTimebombDate) {\n        return (Array.isArray(date) ? date[this.props.selectedRange] : date)!;\n    }\n\n    private monthMatrixCache = new Map<string, (Date[])[]>();\n\n    private get monthMatrix(): (Date[])[] {\n        const date = this.getDate(this.props.date);\n        const dateMonth = date.getMonth();\n        const dateYear = date.getFullYear();\n\n        // cache\n        const cacheKey = `${dateMonth}-${dateYear}`;\n        const cached = this.monthMatrixCache.get(cacheKey);\n\n        if (cached) {\n            return cached;\n        }\n\n        // generate\n        const weeks: (Date)[][] = [];\n\n        let base = startOfMonth(date);\n        let week = 0;\n\n        while (\n            startOfWeek(base).getMonth() === dateMonth ||\n            endOfWeek(base).getMonth() === dateMonth\n        ) {\n            const weekStart = startOfWeek(\n                new Date(dateYear, dateMonth, week++ * 7 + 1)\n            );\n\n            weeks.push([\n                weekStart,\n                addDays(weekStart, 1),\n                addDays(weekStart, 2),\n                addDays(weekStart, 3),\n                addDays(weekStart, 4),\n                addDays(weekStart, 5),\n                addDays(weekStart, 6)\n            ]);\n\n            base = addDays(base, 7);\n        }\n\n        this.monthMatrixCache.set(cacheKey, weeks);\n\n        return weeks;\n    }\n\n    private get fullYears() {\n        const { minDate, maxDate } = this.props;\n        const year = this.getDate(this.props.date).getFullYear();\n\n        if (minDate && !maxDate) {\n            const currentYear = minDate.getFullYear();\n\n            return Array(120)\n                .fill(undefined)\n                .map((_, i) => {\n                    const date = new Date(minDate);\n\n                    date.setFullYear(currentYear + i);\n\n                    const enabled = isEnabled('year', date, this.props);\n                    const selected = year === date.getFullYear();\n\n                    return { date, enabled, selected };\n                })\n                .filter(obj => obj.enabled);\n        } else if (!minDate && maxDate) {\n            const currentYear = maxDate.getFullYear();\n\n            return Array(120)\n                .fill(undefined)\n                .map((_, i) => {\n                    const date = new Date(maxDate);\n\n                    date.setFullYear(currentYear - i);\n\n                    const enabled = isEnabled('year', date, this.props);\n                    const selected = year === date.getFullYear();\n\n                    return { date, enabled, selected };\n                })\n                .filter(obj => obj.enabled)\n                .reverse();\n        } else if (minDate && maxDate) {\n            const minYear = minDate.getFullYear();\n            const maxYear = maxDate.getFullYear();\n            const array: {\n                date: Date;\n                enabled: boolean;\n                selected: boolean;\n            }[] = [];\n\n            for (let i = maxYear; i >= minYear; i--) {\n                const date = new Date(maxDate);\n\n                date.setFullYear(i);\n\n                const enabled = isEnabled('year', date, this.props);\n                const selected = year === date.getFullYear();\n\n                array.push({ date, enabled, selected });\n            }\n\n            return array.reverse();\n        } else {\n            const currentDate = this.now;\n            const currentYear = currentDate.getFullYear();\n\n            return Array(120)\n                .fill(undefined)\n                .map((_, i) => {\n                    const date = new Date(currentDate);\n\n                    date.setFullYear(currentYear - i);\n\n                    const enabled = isEnabled('year', date, this.props);\n                    const selected = year === date.getFullYear();\n\n                    return { date, enabled, selected };\n                })\n                .filter(obj => obj.enabled)\n                .reverse();\n        }\n    }\n\n    constructor(props: MenuProps) {\n        super(props);\n\n        this.onSelectDay = this.onSelectDay.bind(this);\n        this.onSelectMonth = this.onSelectMonth.bind(this);\n        this.onSelectYear = this.onSelectYear.bind(this);\n    }\n\n    public render(): React.ReactNode {\n        const { mode, showConfirm } = this.props;\n\n        switch (mode) {\n            case 'year':\n            case 'months':\n                return (\n                    <MonthAndYearContainer>\n                        {this.renderMenuMonths()}\n                        {this.renderMenuYear()}\n                    </MonthAndYearContainer>\n                );\n            case 'month':\n                return (\n                    <MonthContainer>\n                        {this.renderMonth()}\n                        {showConfirm && this.renderConfirm()}\n                    </MonthContainer>\n                );\n        }\n    }\n\n    private renderMenuYear(): React.ReactNode {\n        return (\n            <YearContainer ref={this.onYearContainer} className=\"years\">\n                {this.fullYears\n                    .map(({ date, selected }) => {\n                        const fullYear = date.getFullYear();\n                        const dateStr = date.toISOString();\n\n                        return (\n                            <Button\n                                key={dateStr}\n                                tabIndex={-1}\n                                className={selected ? 'selected' : undefined}\n                                selected={selected}\n                                data-date={dateStr}\n                                onClick={this.onSelectYear}\n                            >\n                                {fullYear}\n                            </Button>\n                        );\n                    })\n                    .reverse()}\n            </YearContainer>\n        );\n    }\n\n    private renderMenuMonths(): React.ReactNode {\n        const { value } = this.props;\n        const valueDate = this.getDate(value);\n        const date = this.getDate(this.props.date);\n        const months = getMonthNames(true);\n        const month = value && valueDate.getMonth();\n        const year = value && valueDate.getFullYear();\n\n        return (\n            <MonthsContainer className=\"months\">\n                {months.map((str, i) => {\n                    const newDate = new Date(date);\n\n                    newDate.setMonth(i);\n\n                    const enabled = isEnabled('month', newDate, this.props);\n                    const selected =\n                        month === newDate.getMonth() &&\n                        year === newDate.getFullYear();\n\n                    return (\n                        <Button\n                            key={str}\n                            tabIndex={-1}\n                            className={selected ? 'selected' : undefined}\n                            selected={selected}\n                            disabled={!enabled}\n                            data-date={newDate.toISOString()}\n                            onClick={this.onSelectMonth}\n                        >\n                            {str}\n                        </Button>\n                    );\n                })}\n            </MonthsContainer>\n        );\n    }\n\n    private renderMonth(): React.ReactNode {\n        const { showCalendarWeek, selectWeek } = this.props;\n\n        return (\n            <Table\n                className=\"month\"\n                selectWeek={selectWeek}\n                cellSpacing={0}\n                cellPadding={0}\n            >\n                <thead>\n                    <tr>\n                        {showCalendarWeek && <th className=\"calendar-week\" />}\n                        <th>Mo</th>\n                        <th>Di</th>\n                        <th>Mi</th>\n                        <th>Do</th>\n                        <th>Fr</th>\n                        <th>Sa</th>\n                        <th>So</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.monthMatrix.map(dates => {\n                        const weekNum = getWeekOfYear(dates[0]);\n\n                        return (\n                            <tr key={weekNum}>\n                                {showCalendarWeek && (\n                                    <td className=\"calendar-week\">\n                                        <WeekDay\n                                            day={dates[0]}\n                                            onClick={this.onSelectDay}\n                                        >\n                                            {weekNum}\n                                        </WeekDay>\n                                    </td>\n                                )}\n                                {dates.map(date => (\n                                    <td\n                                        className=\"day\"\n                                        key={date.toISOString()}\n                                    >\n                                        <Day\n                                            day={date}\n                                            date={this.props.date}\n                                            value={this.props.value}\n                                            minDate={this.props.minDate}\n                                            maxDate={this.props.maxDate}\n                                            selectWeek={this.props.selectWeek}\n                                            showTime={this.props.showTime}\n                                            onSelectDay={this.onSelectDay}\n                                        />\n                                    </td>\n                                ))}\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </Table>\n        );\n    }\n\n    private renderConfirm(): React.ReactNode {\n        const { valueText, format } = this.props;\n        const validDate = validateDate(valueText, format);\n        const isValid = validDate\n            ? Array.isArray(validDate)\n                ? validDate.every(v => isEnabled('day', v, this.props))\n                : isEnabled('day', validDate, this.props)\n            : false;\n\n        return (\n            <Confirm>\n                <Button\n                    tabIndex={-1}\n                    disabled={!isValid}\n                    onClick={() => this.props.onSubmit()}\n                >\n                    Ok\n                </Button>\n            </Confirm>\n        );\n    }\n\n    private onSelectDay(date: Date): void {\n        const { onSelectDay, showConfirm, onSubmit } = this.props;\n\n        onSelectDay(date);\n\n        if (!showConfirm) {\n            onSubmit();\n        }\n    }\n\n    private onSelectMonth(e: React.MouseEvent<HTMLButtonElement>) {\n        const date = new Date(getAttribute(e.currentTarget, 'data-date'));\n\n        setTimeout(() => this.props.onSelectMonth(date), 0);\n    }\n\n    private onSelectYear(e: React.MouseEvent<HTMLButtonElement>) {\n        const date = new Date(getAttribute(e.currentTarget, 'data-date'));\n\n        setTimeout(() => this.props.onSelectYear(date), 0);\n    }\n\n    private onYearContainer(el: HTMLDivElement | null) {\n        if (el) {\n            const selected = el.querySelector('.selected');\n\n            if (selected) {\n                selected.scrollIntoView();\n                el.scrollBy({ top: -10 });\n            }\n        }\n    }\n}\n","// @ts-ignore\nimport momentDefaultImport from 'moment';\nimport * as momentImport from 'moment';\nimport { ReactTimebombDate } from './typings';\n\nconst moment: typeof momentImport = momentDefaultImport || momentImport;\nconst formatSplit = /[.|:|-|\\\\|_|\\s]/;\n\ntype FormatType = 'day' | 'month' | 'year' | 'hour' | 'minute' | 'second';\n\nexport function dateFormat(\n    date: ReactTimebombDate,\n    format: string\n): string | string[] {\n    if (Array.isArray(date)) {\n        return date.map(date => moment(date).format(format));\n    } else {\n        return moment(date).format(format);\n    }\n}\n\nexport function validateDate(\n    date: string | string[] | undefined,\n    format: string\n): ReactTimebombDate {\n    if (Array.isArray(date)) {\n        const dates = date\n            .map(date => {\n                const instance = moment(date, format, true);\n\n                return instance.isValid() ? instance.toDate() : undefined;\n            })\n            .filter(d => Boolean(d)) as Date[];\n\n        return dates.length === 0 ? undefined : dates;\n    } else {\n        const instance = moment(date, format, true);\n\n        return instance.isValid() ? instance.toDate() : undefined;\n    }\n}\n\nexport function getFormatType(format: string): FormatType | undefined {\n    if (/d/i.test(format)) {\n        return 'day';\n    }\n\n    if (/M/.test(format)) {\n        return 'month';\n    }\n\n    if (/y/i.test(format)) {\n        return 'year';\n    }\n\n    if (/h/i.test(format)) {\n        return 'hour';\n    }\n\n    if (/m/.test(format)) {\n        return 'minute';\n    }\n\n    if (/s/.test(format)) {\n        return 'second';\n    }\n\n    return undefined;\n}\n\n/** @return returns a string with transformed value, true for valid input or false for invalid input */\nexport function validateFormatGroup(\n    input: string | number,\n    format: string\n): boolean | string {\n    if (isFinite(input as any)) {\n        const int = typeof input === 'string' ? parseInt(input, 10) : input;\n        const char = String(input);\n        const strLen = char.length;\n        const type = getFormatType(format);\n\n        switch (type) {\n            case 'day':\n                if (strLen === 1) {\n                    if (int >= 0 && int <= 3) {\n                        return true;\n                    } else {\n                        return `0${input}`;\n                    }\n                }\n\n                if (strLen === 2 && int >= 1 && int <= 31) {\n                    return true;\n                }\n                break;\n            case 'month':\n                if (strLen === 1) {\n                    if (int === 0 || int === 1) {\n                        return true;\n                    } else {\n                        return `0${input}`;\n                    }\n                }\n\n                if (strLen === 2 && int >= 0 && int <= 12) {\n                    return true;\n                }\n                break;\n            case 'year':\n                if (strLen === 1 && (int === 1 || int === 2)) {\n                    return true;\n                }\n\n                if (\n                    strLen >= 2 &&\n                    (char.startsWith('19') || char.startsWith('20'))\n                ) {\n                    return true;\n                }\n                break;\n            case 'hour':\n                if (strLen === 1) {\n                    if (int >= 0 && int <= 2) {\n                        return true;\n                    } else {\n                        return `0${input}`;\n                    }\n                }\n\n                if (strLen >= 2 && int >= 0 && int <= 24) {\n                    return true;\n                }\n                break;\n            case 'minute':\n            case 'second':\n                if (strLen === 1) {\n                    if (int >= 0 && int <= 5) {\n                        return true;\n                    } else {\n                        return `0${input}`;\n                    }\n                }\n\n                if (strLen >= 2 && int >= 0 && int <= 59) {\n                    return true;\n                }\n                break;\n        }\n    }\n\n    return false;\n}\n\nexport function stringFromCharCode(keyCode: number): string {\n    const charCode = keyCode - 48 * Math.floor(keyCode / 48);\n\n    return String.fromCharCode(96 <= keyCode ? charCode : keyCode);\n}\n\nexport function formatNumber(number: Number): string {\n    if (number <= 1) {\n        return '01';\n    }\n\n    if (number <= 9) {\n        return `0${number}`;\n    }\n\n    return String(number);\n}\n\nexport function splitDate(date: Date, format: string): string[] {\n    return (dateFormat(date, format) as string).split(formatSplit);\n}\n\nexport function joinDates(\n    parts: (string | HTMLElement)[],\n    format: string\n): string {\n    const strParts = parts\n        .map(part => (part instanceof HTMLElement ? part.innerText : part))\n        .filter(val => val);\n    const splittedFormat = format.split(formatSplit);\n\n    if (strParts.length !== splittedFormat.length) {\n        return '';\n    }\n\n    const date = strParts.join(' ');\n    const spaceFormat = splittedFormat.join(' ');\n    const momentDate = moment(date, spaceFormat);\n    const parsingFlags = momentDate.parsingFlags();\n\n    if (parsingFlags.overflow === 2) {\n        return moment(\n            // @ts-ignore\n            new Date(...parsingFlags.parsedDateParts)\n        ).format(format);\n    }\n\n    return momentDate.format(format);\n}\n\nexport function clearSelection(): void {\n    const sel = getSelection();\n\n    if (sel.empty) {\n        // Chrome\n        sel.empty();\n    } else if (sel.removeAllRanges) {\n        // Firefox\n        sel.removeAllRanges();\n    }\n}\n\nexport function getWeekOfYear(date: Date): number {\n    return moment(date).isoWeek();\n}\n\nexport function startOfWeek(date: Date): Date {\n    return moment(date)\n        .startOf('isoWeek')\n        .toDate();\n}\n\nexport function endOfWeek(date: Date): Date {\n    return moment(date)\n        .endOf('isoWeek')\n        .toDate();\n}\n\nexport function startOfDay(date: Date): Date {\n    const newDate = new Date(date);\n\n    newDate.setHours(0, 0, 0, 0);\n\n    return newDate;\n}\n\nexport function endOfDay(date: Date): Date {\n    const newDate = new Date(date);\n\n    newDate.setHours(23, 59, 59, 999);\n\n    return newDate;\n}\n\nexport function addDays(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'days')\n        .toDate();\n}\n\nexport function addMonths(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'months')\n        .toDate();\n}\n\nexport function addYears(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'years')\n        .toDate();\n}\n\nexport function addHours(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'hours')\n        .toDate();\n}\n\nexport function addMinutes(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'minutes')\n        .toDate();\n}\n\nexport function addSeconds(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'seconds')\n        .toDate();\n}\n\nexport function subtractSeconds(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'seconds')\n        .toDate();\n}\n\nexport function subtractMinutes(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'minutes')\n        .toDate();\n}\n\nexport function subtractHours(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'hours')\n        .toDate();\n}\n\nexport function subtractDays(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'days')\n        .toDate();\n}\n\nexport function subtractMonths(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'months')\n        .toDate();\n}\n\nexport function subtractYears(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'years')\n        .toDate();\n}\n\nexport function manipulateDate(\n    date: Date,\n    formatType: FormatType,\n    direction: 'add' | 'subtract',\n    shift = false\n): Date {\n    switch (formatType) {\n        case 'day':\n            if (direction === 'add') return addDays(date, 1);\n            if (direction === 'subtract') return subtractDays(date, 1);\n            break;\n        case 'month':\n            if (direction === 'add') return addMonths(date, 1);\n            if (direction === 'subtract') return subtractMonths(date, 1);\n            break;\n        case 'year':\n            if (direction === 'add') return addYears(date, 1);\n            if (direction === 'subtract') return subtractYears(date, 1);\n            break;\n        case 'hour':\n            if (direction === 'add') return addHours(date, shift ? 10 : 1);\n            if (direction === 'subtract')\n                return subtractHours(date, shift ? 10 : 1);\n            break;\n        case 'minute':\n            if (direction === 'add') return addMinutes(date, shift ? 10 : 1);\n            if (direction === 'subtract')\n                return subtractMinutes(date, shift ? 10 : 1);\n            break;\n        case 'second':\n            if (direction === 'add') return addSeconds(date, shift ? 10 : 1);\n            if (direction === 'subtract')\n                return subtractSeconds(date, shift ? 10 : 1);\n            break;\n    }\n\n    return new Date();\n}\n\nexport function startOfMonth(date: Date): Date {\n    const newDate = new Date(date);\n\n    newDate.setDate(1);\n    newDate.setHours(0, 0, 0, 0);\n\n    return newDate;\n}\n\nexport function endOfMonth(date: Date): Date {\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n}\n\nexport function isUndefined(val): val is undefined {\n    return val === null || val === undefined;\n}\n\nexport function setDate(date: Date, hour: number, min?: number): Date {\n    const newDate = new Date(date);\n\n    newDate.setHours(hour, min);\n\n    return newDate;\n}\n\nexport function isToday(date: Date): boolean {\n    return moment(date).isSame(new Date(), 'day');\n}\n\nexport function isBefore(date: Date, inp: Date) {\n    return moment(date).isBefore(inp, 'day');\n}\n\nexport function isAfter(date: Date, inp: Date) {\n    return moment(date).isAfter(inp, 'day');\n}\n\nexport function dateEqual(\n    dateA?: ReactTimebombDate,\n    dateB?: ReactTimebombDate,\n    considerTime = false\n) {\n    if (!dateA || !dateB) {\n        return false;\n    }\n\n    if (considerTime) {\n        if (Array.isArray(dateA)) {\n            dateA = dateA.map(startOfDay);\n        } else {\n            dateA = startOfDay(dateA);\n        }\n\n        if (Array.isArray(dateB)) {\n            dateB = dateB.map(startOfDay);\n        } else {\n            dateB = startOfDay(dateB);\n        }\n    }\n\n    if (Array.isArray(dateA) && Array.isArray(dateB)) {\n        return dateA.every((date, i) => {\n            const dBi = dateB![i];\n\n            if (date && dBi) {\n                return date.getTime() === dBi.getTime();\n            }\n\n            return false;\n        });\n    } else if (Array.isArray(dateA) && dateB instanceof Date) {\n        return dateA.some(d => d.getTime() === (dateB as Date).getTime());\n    } else if (Array.isArray(dateB) && dateA instanceof Date) {\n        return dateB.some(d => d.getTime() === (dateA as Date).getTime());\n    } else if (!Array.isArray(dateA) && !Array.isArray(dateB)) {\n        return dateA.getTime() === dateB.getTime();\n    }\n\n    return false;\n}\n\nexport function getMonthNames(short?: boolean): string[] {\n    if (short) {\n        return moment.monthsShort();\n    }\n\n    return moment.months();\n}\n\nexport function isEnabled(\n    context: 'year' | 'month' | 'day',\n    date: Date,\n    { minDate, maxDate }: { minDate?: Date; maxDate?: Date }\n): boolean {\n    if (!minDate && !maxDate) {\n        return true;\n    }\n\n    if (minDate && !maxDate) {\n        return moment(date).isSameOrAfter(minDate, context);\n    }\n\n    if (!minDate && maxDate) {\n        return moment(date).isSameOrBefore(maxDate, context);\n    }\n\n    return moment(date).isBetween(minDate, maxDate, context, '[]');\n}\n\nexport function getAttribute(input: Element, attr: string): string {\n    return input.getAttribute(attr)!;\n}\n\nexport function sortDates(a: Date, b: Date) {\n    return a.getTime() - b.getTime();\n}\n\nexport const keys = {\n    ARROW_UP: 38,\n    ARROW_RIGHT: 39,\n    ARROW_DOWN: 40,\n    ARROW_LEFT: 37,\n    ENTER: 13,\n    TAB: 9,\n    ESC: 27,\n    BACKSPACE: 8,\n    DELETE: 46,\n    SPACE: 32,\n    SHIFT: 16,\n    A: 65\n};\n","import * as React from 'react';\nimport { getWeekOfYear, dateEqual, isEnabled, isToday } from './utils';\nimport styled from 'styled-components';\nimport { MenuProps } from './menu';\n\ninterface DayProps {\n    day: Date;\n    value: MenuProps['value'];\n    date: MenuProps['date'];\n    selectWeek: MenuProps['selectWeek'];\n    minDate: MenuProps['minDate'];\n    maxDate: MenuProps['maxDate'];\n    onSelectDay: MenuProps['onSelectDay'];\n    showTime: MenuProps['showTime'];\n}\n\ninterface DayState {\n    current: boolean;\n    enabled: boolean;\n    today: boolean;\n    selected: boolean;\n}\n\ninterface StyledDayProps {\n    selected?: boolean;\n    disabled?: boolean;\n    current: boolean;\n    today: boolean;\n}\n\nconst Flex = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst StyledDay = styled(Flex)`\n    padding: 8px 2px;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    color: ${(props: StyledDayProps) => (props.current ? 'inherit' : '#aaa')};\n    background-color: ${(props: StyledDayProps) =>\n        props.selected\n            ? '#ddd'\n            : props.today\n            ? 'rgba(172, 206, 247, 0.4)'\n            : 'transparent'};\n    font-weight: ${(props: StyledDayProps) =>\n        props.selected ? 'bold' : 'normal'};\n    pointer-events: ${(props: StyledDayProps) =>\n        props.disabled ? 'none' : 'auto'};\n    user-select: none;\n    opacity: ${(props: StyledDayProps) => (props.disabled ? 0.3 : 1)};\n\n    &:hover {\n        background-color: ${(props: StyledDayProps) =>\n            props.selected ? '#ddd' : '#eee'};\n    }\n`;\n\nexport class Day extends React.PureComponent<DayProps, DayState> {\n    constructor(props: DayProps) {\n        super(props);\n\n        this.state = {\n            current: false,\n            enabled: true,\n            today: false,\n            selected: false\n        };\n\n        this.onSelectDay = this.onSelectDay.bind(this);\n    }\n\n    private get selected() {\n        const { value, selectWeek, day } = this.props;\n\n        if (selectWeek && value) {\n            const dayWeekOfYear = getWeekOfYear(day);\n\n            if (Array.isArray(value)) {\n                return value.some(v => getWeekOfYear(v) === dayWeekOfYear);\n            }\n\n            return getWeekOfYear(value) === dayWeekOfYear;\n        }\n\n        return dateEqual(value, day, this.props.showTime);\n    }\n\n    private get current() {\n        const { day, date } = this.props;\n        const dayMonth = day.getMonth();\n\n        if (Array.isArray(date)) {\n            return date.some(d => d.getMonth() === dayMonth);\n        }\n\n        if (date) {\n            return dayMonth === date.getMonth();\n        }\n\n        return false;\n    }\n\n    private get enabled() {\n        return isEnabled('day', this.props.day, this.props);\n    }\n\n    private get today() {\n        return isToday(this.props.day);\n    }\n\n    public componentDidMount() {\n        this.updateState();\n    }\n\n    public componentDidUpdate(prevProps: DayProps) {\n        this.updateState(prevProps);\n    }\n\n    public render() {\n        const { day } = this.props;\n        const { selected, current, enabled, today } = this.state;\n\n        return (\n            <StyledDay\n                className={selected ? 'value selected' : 'value'}\n                selected={selected}\n                current={current}\n                disabled={!enabled}\n                today={today}\n                onClick={this.onSelectDay}\n            >\n                {day.getDate()}\n            </StyledDay>\n        );\n    }\n\n    private updateState(prevProps: Partial<DayProps> = {}) {\n        const { day, minDate, maxDate } = this.props;\n        const dayChanged = !dateEqual(prevProps.day, day);\n        const minMaxChanged =\n            !dateEqual(prevProps.minDate, minDate) ||\n            !dateEqual(prevProps.maxDate, maxDate);\n\n        this.setState({\n            current: this.current,\n            enabled:\n                dayChanged || minMaxChanged ? this.enabled : this.state.enabled,\n            today: dayChanged ? this.today : this.state.today,\n            selected: this.selected\n        });\n    }\n\n    private onSelectDay() {\n        this.props.onSelectDay(this.props.day);\n    }\n}\n\ninterface WeekDayProps {\n    day: Date;\n    onClick(day: Date): void;\n}\n\nexport class WeekDay extends React.PureComponent<WeekDayProps> {\n    constructor(props: WeekDayProps) {\n        super(props);\n\n        this.onClick = this.onClick.bind(this);\n    }\n\n    public render() {\n        return <div onClick={this.onClick}>{this.props.children}</div>;\n    }\n\n    private onClick() {\n        this.props.onClick(this.props.day);\n    }\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { ReactTimebombProps, ReactTimebombState } from './typings';\nimport { Button } from './button';\nimport {\n    subtractDays,\n    startOfMonth,\n    endOfMonth,\n    addDays,\n    getMonthNames\n} from './utils';\n\ninterface MenuTitleProps {\n    date: ReactTimebombState['date'];\n    minDate: ReactTimebombProps['minDate'];\n    maxDate: ReactTimebombProps['maxDate'];\n    mode: ReactTimebombState['mode'];\n    selectedRange: ReactTimebombState['selectedRange'];\n    onPrevMonth(): void;\n    onNextMonth(): void;\n    onReset(): void;\n    onMonths(): void;\n    onYear(): void;\n}\n\nconst Container = styled.div`\n    display: ${(props: { show: boolean }) => (props.show ? 'flex' : 'none')};\n    align-items: center;\n    width: 100%;\n    padding: 10px 10px 15px;\n    justify-content: space-between;\n    min-height: 21px;\n    box-sizing: border-box;\n`;\n\nexport class MenuTitle extends React.PureComponent<MenuTitleProps> {\n    private get prevDisabled(): boolean {\n        const { minDate, date, selectedRange } = this.props;\n\n        if (minDate && date) {\n            const firstDate = Array.isArray(date) ? date[selectedRange] : date;\n\n            return subtractDays(startOfMonth(firstDate), 1) < minDate;\n        }\n\n        return false;\n    }\n\n    private get nextDisabled(): boolean {\n        const { maxDate, date } = this.props;\n\n        if (maxDate && date) {\n            const lastDate = Array.isArray(date) ? date[date.length - 1] : date;\n\n            return addDays(endOfMonth(lastDate), 1) > maxDate;\n        }\n\n        return false;\n    }\n\n    public render(): React.ReactNode {\n        const {\n            date,\n            mode,\n            selectedRange,\n            onNextMonth,\n            onPrevMonth,\n            onMonths,\n            onReset,\n            onYear\n        } = this.props;\n        const months = getMonthNames();\n        const show = mode === 'month';\n        const firstDate = (Array.isArray(date) ? date[selectedRange] : date)!;\n\n        return (\n            <Container show={show}>\n                <div>\n                    <Button tabIndex={-1} onClick={onMonths}>\n                        <b>{months[firstDate.getMonth()]}</b>\n                    </Button>\n                    <Button tabIndex={-1} onClick={onYear}>\n                        {firstDate.getFullYear()}\n                    </Button>\n                </div>\n                <div>\n                    <Button\n                        tabIndex={-1}\n                        disabled={this.prevDisabled}\n                        onClick={onPrevMonth}\n                    >\n                        ◀\n                    </Button>\n                    <Button tabIndex={-1} onClick={onReset}>\n                        ○\n                    </Button>\n                    <Button\n                        tabIndex={-1}\n                        disabled={this.nextDisabled}\n                        onClick={onNextMonth}\n                    >\n                        ▶\n                    </Button>\n                </div>\n            </Container>\n        );\n    }\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport {\n    keys,\n    formatNumber,\n    splitDate,\n    joinDates,\n    stringFromCharCode,\n    validateFormatGroup,\n    getAttribute,\n    getFormatType,\n    manipulateDate,\n    isEnabled\n} from './utils';\nimport { ReactTimebombProps } from './typings';\nimport { Button } from './button';\n\nexport interface ValueProps {\n    open?: boolean;\n    value?: Date;\n    format: string;\n    placeholder: ReactTimebombProps['placeholder'];\n    minDate: ReactTimebombProps['minDate'];\n    maxDate: ReactTimebombProps['maxDate'];\n    allowValidation?: boolean;\n    onToggle(): void;\n    onChangeValueText(valueText?: string, commit?: boolean): void;\n    onSubmit(): void;\n    onClear(): void;\n}\n\nexport const Flex = styled.div`\n    display: flex;\n    align-items: center;\n    white-space: nowrap;\n`;\n\nexport const Container = styled(Flex)`\n    justify-content: space-between;\n    align-items: center;\n    padding: 5px 10px;\n    border: 1px solid #ccc;\n    cursor: pointer;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n`;\n\nconst Input = styled.span`\n    padding: 2px 0 2px 0;\n    min-width: 1px;\n    cursor: text;\n\n    &:focus {\n        outline: none;\n    }\n\n    &:last-of-type {\n        padding: 2px 10px 2px 0;\n    }\n\n    &:not(:last-of-type):after {\n        content: attr(data-separator);\n        width: 4px;\n        display: inline-block;\n    }\n\n    &:empty:before {\n        content: attr(data-placeholder);\n        color: #aaa;\n    }\n\n    &:empty:not(:last-of-type):after {\n        color: #aaa;\n    }\n`;\n\nexport const ArrowButton = styled(Button)`\n    font-size: 13px;\n    color: #ccc;\n    cursor: pointer;\n    border: none;\n    line-height: 1;\n\n    &:hover {\n        color: #333;\n    }\n\n    &:focus {\n        outline: none;\n    }\n`;\n\nexport const ClearButton = styled(ArrowButton)`\n    font-size: 18px;\n`;\n\nexport const Placeholder = styled.span`\n    color: #aaa;\n    user-select: none;\n`;\n\nexport const Icon = styled.span`\n    margin-right: 5px;\n    user-select: none;\n\n    &:after {\n        content: '📅';\n    }\n`;\n\nconst WHITELIST_KEYS = [keys.BACKSPACE, keys.DELETE, keys.TAB];\n\nconst FORBIDDEN_KEYS = [\n    keys.SHIFT,\n    keys.ARROW_LEFT,\n    keys.ARROW_RIGHT,\n    keys.ARROW_UP,\n    keys.ARROW_DOWN,\n    keys.TAB\n];\n\nexport class Value extends React.PureComponent<ValueProps> {\n    private searchInputs: HTMLSpanElement[] = [];\n\n    private get formatGroups(): string[] {\n        return this.props.format.split('').reduce(\n            (memo, char) => {\n                const prevChar = memo[memo.length - 1];\n\n                if (prevChar && char === prevChar.substr(0, 1)) {\n                    memo[memo.length - 1] += char;\n                } else {\n                    memo = [...memo, char];\n                }\n\n                return memo;\n            },\n            [] as string[]\n        );\n    }\n\n    private get focused(): HTMLElement | null {\n        return document.querySelector(':focus');\n    }\n\n    constructor(props: ValueProps) {\n        super(props);\n\n        this.onSearchRef = this.onSearchRef.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onKeyUp = this.onKeyUp.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onClear = this.onClear.bind(this);\n        this.onToggle = this.onToggle.bind(this);\n    }\n\n    public componentDidUpdate(prevProps: ValueProps): void {\n        const { open, value, format } = this.props;\n        const hasFocus = this.searchInputs.some(inp => inp === this.focused);\n\n        if (!hasFocus) {\n            if (open) {\n                if (prevProps.value !== value && value) {\n                    const parts = splitDate(value, format);\n                    const input = this.searchInputs[0];\n\n                    this.searchInputs.forEach(\n                        (input, i) => (input.innerText = parts[i])\n                    );\n\n                    if (input) {\n                        input.focus();\n                    }\n                }\n\n                if (!prevProps.open || value !== prevProps.value) {\n                    const input = this.searchInputs[0];\n\n                    if (input) {\n                        if (input.innerText === '') {\n                            input.focus();\n                        } else {\n                            this.selectText(input);\n                        }\n                    }\n                }\n            }\n        }\n\n        if (!open && value) {\n            const parts = splitDate(value, format);\n\n            this.searchInputs.forEach(\n                (input, i) => (input.innerText = parts[i])\n            );\n        }\n    }\n\n    public render(): React.ReactNode {\n        const { placeholder, value, open } = this.props;\n        const showPlaceholder = placeholder && !open;\n\n        return (\n            <Container\n                data-role=\"value\"\n                className=\"react-slct-value react-timebomb-value\"\n                onClick={this.onToggle}\n            >\n                <Flex>\n                    <Icon className=\"react-timebomb-icon\" />\n                    <Flex>\n                        {this.renderValue()}\n                        {showPlaceholder && (\n                            <Placeholder className=\"react-timebomb-placeholder\">\n                                {placeholder}\n                            </Placeholder>\n                        )}\n                    </Flex>\n                </Flex>\n                <Flex>\n                    {value && (\n                        <ClearButton\n                            className=\"react-timebomb-clearer\"\n                            tabIndex={-1}\n                            onClick={this.onClear}\n                        >\n                            ×\n                        </ClearButton>\n                    )}\n                    <ArrowButton tabIndex={-1} className=\"react-timebomb-arrow\">\n                        {open ? '▲' : '▼'}\n                    </ArrowButton>\n                </Flex>\n            </Container>\n        );\n    }\n\n    private renderValue(): React.ReactNode {\n        const { open, value } = this.props;\n\n        if (!open && !value) {\n            return null;\n        }\n\n        const { formatGroups } = this;\n\n        return (\n            <Flex>\n                {formatGroups.map((group, i) => {\n                    if (group === '.' || group === ':' || group === ' ') {\n                        return null;\n                    } else {\n                        const separator = formatGroups[i + 1];\n\n                        return (\n                            <Input\n                                contentEditable\n                                data-placeholder={group}\n                                data-separator={separator}\n                                key={group}\n                                data-group={group}\n                                ref={this.onSearchRef}\n                                data-react-timebomb-selectable\n                                onKeyDown={this.onKeyDown}\n                                onKeyUp={this.onKeyUp}\n                                onFocus={this.onFocus}\n                                onBlur={this.onBlur}\n                                onClick={this.onFocus}\n                                onChange={this.onChange}\n                            />\n                        );\n                    }\n                })}\n            </Flex>\n        );\n    }\n\n    private selectText(el: HTMLElement | undefined) {\n        if (el) {\n            const range = document.createRange();\n            const sel = getSelection();\n\n            range.selectNodeContents(el);\n\n            sel.removeAllRanges();\n            sel.addRange(range);\n        }\n    }\n\n    private onSearchRef(el: HTMLSpanElement | null): void {\n        if (el) {\n            this.searchInputs.push(el);\n        } else {\n            this.searchInputs = [];\n        }\n    }\n\n    private onKeyDown(e: React.KeyboardEvent<HTMLSpanElement>): void {\n        const {\n            onChangeValueText,\n            format,\n            value,\n            allowValidation\n        } = this.props;\n        const input = e.currentTarget;\n        const { innerText, nextSibling, previousSibling } = input;\n        const sel = getSelection();\n        const hasSelection = Boolean(sel.focusOffset - sel.baseOffset);\n        let numericValue = parseInt(innerText, 10);\n\n        switch (e.keyCode) {\n            case keys.ENTER:\n            case keys.ESC:\n            case keys.BACKSPACE:\n                e.preventDefault();\n                return;\n            case keys.ARROW_RIGHT:\n                e.preventDefault();\n\n                if (nextSibling instanceof HTMLSpanElement) {\n                    nextSibling.focus();\n                } else {\n                    this.selectText(input);\n                }\n                return;\n            case keys.ARROW_LEFT:\n                e.preventDefault();\n\n                if (previousSibling instanceof HTMLSpanElement) {\n                    previousSibling.focus();\n                } else {\n                    this.selectText(input);\n                }\n                return;\n            case keys.ARROW_UP:\n            case keys.ARROW_DOWN:\n                e.preventDefault();\n\n                const isArrowUp = e.keyCode === keys.ARROW_UP;\n\n                if (isNaN(numericValue)) {\n                    numericValue = 0;\n                }\n\n                if (isFinite(numericValue)) {\n                    const formatGroup = getAttribute(input, 'data-group');\n                    const formatType = getFormatType(formatGroup);\n\n                    if (!allowValidation) {\n                        const nextValue = numericValue + (isArrowUp ? 1 : -1);\n                        const valid = validateFormatGroup(\n                            nextValue,\n                            formatGroup\n                        );\n\n                        if (valid) {\n                            input.innerText =\n                                typeof valid === 'string'\n                                    ? valid\n                                    : formatNumber(nextValue);\n                        }\n                    } else {\n                        if (value && formatType) {\n                            const direction = isArrowUp ? 'add' : 'subtract';\n\n                            const newDate = manipulateDate(\n                                value,\n                                formatType,\n                                direction,\n                                e.shiftKey\n                            );\n                            const enabled = isEnabled(\n                                'day',\n                                newDate,\n                                this.props\n                            );\n\n                            if (enabled) {\n                                const dateParts = splitDate(newDate, format);\n\n                                this.searchInputs.map(\n                                    (inp, i) => (inp.innerText = dateParts[i])\n                                );\n                            }\n                        }\n                    }\n\n                    this.selectText(input);\n                    onChangeValueText(joinDates(this.searchInputs, format));\n                }\n                return;\n        }\n\n        const dataValue = getAttribute(input, 'data-value');\n        const dataGroup = getAttribute(input, 'data-group');\n        const char = stringFromCharCode(e.keyCode);\n        const groupValue = dataValue && !hasSelection ? dataValue + char : char;\n\n        if (WHITELIST_KEYS.includes(e.keyCode) || e.metaKey || e.ctrlKey) {\n            return;\n        }\n\n        const valid = validateFormatGroup(groupValue, dataGroup);\n\n        if (!valid) {\n            e.preventDefault();\n        } else if (typeof valid === 'string') {\n            e.preventDefault();\n\n            input.innerText = valid;\n        }\n\n        if (hasSelection) {\n            return;\n        }\n\n        // validate group\n        if (innerText.length >= dataGroup.length) {\n            e.preventDefault();\n        }\n    }\n\n    private onKeyUp(e: React.KeyboardEvent<HTMLSpanElement>): void {\n        const {\n            onChangeValueText,\n            format,\n            allowValidation,\n            onSubmit,\n            onToggle\n        } = this.props;\n        const input = e.currentTarget;\n        const { innerText, nextSibling, previousSibling } = input;\n\n        if (e.keyCode === keys.ENTER) {\n            e.preventDefault();\n\n            if (this.focused) {\n                this.focused.blur();\n            }\n            onSubmit();\n            return;\n        }\n\n        if (e.keyCode === keys.ESC) {\n            onToggle();\n            return;\n        }\n\n        // focus prev\n        if (e.keyCode === keys.BACKSPACE) {\n            if (innerText) {\n                input.innerText = '';\n            } else if (previousSibling instanceof HTMLSpanElement) {\n                this.selectText(previousSibling);\n            }\n\n            onChangeValueText(joinDates(this.searchInputs, format));\n        }\n\n        // focus next\n        else if (\n            innerText.length >= getAttribute(input, 'data-group').length &&\n            !FORBIDDEN_KEYS.includes(e.keyCode)\n        ) {\n            if (allowValidation || !nextSibling) {\n                this.selectText(input);\n            } else if (nextSibling instanceof HTMLSpanElement) {\n                this.selectText(nextSibling);\n            }\n\n            onChangeValueText(joinDates(this.searchInputs, format));\n        }\n\n        input.setAttribute('data-value', input.innerText);\n    }\n\n    private onFocus(e: React.SyntheticEvent<HTMLSpanElement>): void {\n        this.selectText(e.currentTarget);\n    }\n\n    private onBlur(e: React.SyntheticEvent<HTMLSpanElement>): void {\n        const input = e.target as HTMLSpanElement;\n        const value = input.innerText;\n        const dataGroup = getAttribute(input, 'data-group');\n        const formatType = getFormatType(dataGroup);\n\n        const fillZero = () => {\n            const innerText = `0${value}`;\n\n            input.innerText = innerText;\n            input.setAttribute('data-value', innerText);\n        };\n\n        switch (formatType) {\n            case 'day':\n                if (value === '1' || value === '2' || value === '3') {\n                    fillZero();\n                }\n                break;\n            case 'month':\n                if (value === '1') {\n                    fillZero();\n                }\n                break;\n        }\n\n        // check if timebomb is still focused\n        setTimeout(() => {\n            const { focused } = this;\n\n            if (\n                this.props.open &&\n                focused &&\n                !getAttribute(focused, 'data-react-timebomb-selectable')\n            ) {\n                this.props.onToggle();\n            }\n        }, 0);\n    }\n\n    private onChange(e: React.KeyboardEvent<HTMLSpanElement>): void {\n        const { format, onChangeValueText } = this.props;\n        const input = e.currentTarget;\n        const { innerText, nextSibling } = input;\n\n        onChangeValueText(joinDates(this.searchInputs, format));\n\n        if (innerText.length >= getAttribute(input, 'data-group').length) {\n            if (nextSibling instanceof HTMLSpanElement) {\n                nextSibling.focus();\n            }\n        }\n    }\n\n    private onClear(e: React.SyntheticEvent<HTMLButtonElement>): void {\n        e.stopPropagation();\n\n        this.props.onClear();\n    }\n\n    private onToggle(e: React.SyntheticEvent<HTMLSpanElement>): void {\n        const { open, onToggle } = this.props;\n\n        if (!this.searchInputs.some(inp => inp === e.target) || !open) {\n            onToggle();\n        }\n    }\n}\n","import * as React from 'react';\nimport {\n    Container,\n    Flex,\n    Icon,\n    ValueProps,\n    Placeholder,\n    ClearButton,\n    ArrowButton\n} from './value';\nimport { dateFormat, keys } from './utils';\n\ninterface MultiValueProps {\n    value: undefined | Date[];\n    placeholder: ValueProps['placeholder'];\n    open: ValueProps['open'];\n    onToggle(): void;\n    onClear(): void;\n}\n\nexport class ValueMulti extends React.PureComponent<MultiValueProps> {\n    constructor(props: MultiValueProps) {\n        super(props);\n\n        this.onClear = this.onClear.bind(this);\n        this.onKeyUp = this.onKeyUp.bind(this);\n    }\n\n    public componentDidMount() {\n        document.body.addEventListener('keyup', this.onKeyUp);\n    }\n\n    public componentWillUnmount() {\n        document.body.removeEventListener('keyup', this.onKeyUp);\n    }\n\n    public render() {\n        const { placeholder, value, open } = this.props;\n        const showPlaceholder = placeholder && !open;\n\n        return (\n            <Container\n                data-role=\"value\"\n                className=\"react-slct-value react-timebomb-value\"\n                onClick={this.props.onToggle}\n            >\n                <Flex>\n                    <Icon className=\"react-timebomb-icon\" />\n                    <Flex>\n                        {this.renderValue()}\n                        {showPlaceholder && (\n                            <Placeholder className=\"react-timebomb-placeholder\">\n                                {placeholder}\n                            </Placeholder>\n                        )}\n                    </Flex>\n                </Flex>\n                <Flex>\n                    {value && (\n                        <ClearButton\n                            className=\"react-timebomb-clearer\"\n                            tabIndex={-1}\n                            onClick={this.onClear}\n                        >\n                            ×\n                        </ClearButton>\n                    )}\n                    <ArrowButton tabIndex={-1} className=\"react-timebomb-arrow\">\n                        {open ? '▲' : '▼'}\n                    </ArrowButton>\n                </Flex>\n            </Container>\n        );\n    }\n\n    private renderValue() {\n        const { value } = this.props;\n\n        if (!value) {\n            return null;\n        }\n\n        return value.map(d => dateFormat(d, 'DD.MM.YYYY')).join(' – ');\n    }\n\n    private onClear(e: React.SyntheticEvent<HTMLButtonElement>): void {\n        e.stopPropagation();\n\n        this.props.onClear();\n    }\n\n    private onKeyUp(e: KeyboardEvent) {\n        const { open, onToggle } = this.props;\n\n        switch (e.keyCode) {\n            case keys.ESC:\n                if (open) {\n                    onToggle();\n                }\n                break;\n        }\n    }\n}\n"]}