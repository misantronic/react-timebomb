{"version":3,"sources":["src/index.tsx","src/menu/index.tsx","src/utils.ts","src/components/button.tsx","src/menu/table.tsx","src/menu/day.tsx","src/menu/mobile.tsx","src/menu/time.tsx","src/components/number-input.tsx","src/menu/title.tsx","src/value/value.tsx","src/typings.ts","src/value/value-multi.tsx"],"names":["React","$fsx","r","styled_components_1","react_slct_1","menu_1","title_1","value_1","utils_1","typings_1","exports","ReactTimebombProps","ReactTimebombState","ReactTimebombError","ReactTimebombDate","ReactTimebombArrowButtonProps","ReactTimebombClearComponentProps","value_multi_1","Container","default","div","MenuWrapper","props","menuHeight","mobile","css","BlindInput","input","ReactTimebomb","Component","[object Object]","super","this","menuRef","emitChange","timeout","date","commit","clearTimeout","setTimeout","value","showConfirm","onChange","dateEqual","isArray","setState","allowValidation","Boolean","minDate","maxDate","selectRange","isBefore","console","error","state","initialState","onChangeValueText","bind","onValueSubmit","onSelectDay","onModeDay","onModeYear","onModeMonth","onSelectMonth","onChangeMonth","onSelectYear","onReset","onNextMonth","onPrevMonth","onSelectTime","onSubmitOrCancelTime","onClose","onClear","onChangeFormatGroup","onMenuRef","onMobileMenuContainerClick","format","startOfDay","undefined","endOfDay","showTime","isTimeFormat","showDate","isDateFormat","MenuContainer","MobileMenuContainer","className","classNames","push","disabled","join","defaultDateValue","Date","isAfter","mode","getFormatType","valueText","dateFormat","selectedRange","prevProps","prevState","valueTextDidUpdate","validDate","validateDate","some","d","isEnabled","emitError","isUndefined","placeholder","showCalendarWeek","timeStep","onOpen","menuWidth","Math","max","MENU_WIDTH","MENU_HEIGHT","createElement","Select","open","onToggle","onRef","showMenu","getMobileMenuContainer","ref","renderValue","onClick","MenuTitle","onMonth","onYear","Menu","onSubmitTime","onSubmit","type","onFocus","iconComponent","arrowButtonComponent","arrowButtonId","clearComponent","multiValue","ValueMulti","Value","onAllSelect","clearSelection","onError","length","getBoundingClientRect","height","setMenuHeight","day","valueDate","startOfWeek","endOfWeek","addDays","setDate","getHours","getMinutes","dateArr","getSelectedRange","sort","sortDates","currentDate","setMonth","getMonth","time","newDate","map","e","target","HTMLDivElement","classList","contains","el","defaultProps","button_1","table_1","mobile_1","time_1","MonthAndYearContainer","MonthsContainer","MonthContainer","YearContainer","Confirm","MobileMenuTable","MenuTable","getDate","MenuMonths","monthNames","useState","getMonthNames","month","year","getFullYear","getAttribute","currentTarget","str","i","enabled","selected","Button","key","tabIndex","data-date","toISOString","MenuYear","yearContainer","setYearContainer","scrollToYear","querySelector","scrollIntoView","scrollBy","top","useEffect","getDateConfig","newYear","setFullYear","setSeconds","getSeconds","setMinutes","setHours","currentYear","Array","fill","_","filter","obj","reverse","minYear","array","now","getFullYears","fullYear","dateStr","MenuConfirm","isValid","every","v","MonthWrapper","GestureWrapper","allowNext","endOfMonth","allowPrev","subtractDays","startOfMonth","direction","addMonths","subtractMonths","Object","assign","MenuTime","topDivider","onCancel","moment_1","momentImport","moment","test","formatSplitExpr","dates","instance","toDate","formatIsActualNumber","validateFormatGroup","formatType","isFinite","int","parseInt","char","String","strLen","startsWith","validateFormatType","stringFromCharCode","parts","strParts","part","HTMLElement","innerText","val","dateA","dBi","dateB","getTime","replaceSpaceWithNbsp","replace","keys","ARROW_UP","ARROW_RIGHT","ARROW_DOWN","ARROW_LEFT","ENTER","TAB","ESC","BACKSPACE","DELETE","SPACE","SHIFT","DOT","COMMA","StyledButton","button","data-react-timebomb-selectable","data-role","SmallButton","ArrowButton","id","day_1","Table","table","hoverDays","setHoverDays","weekdayNames","getWeekdayNames","sun","mon","tue","wed","thu","fri","sat","c","monthMatrix","useMemo","dateMonth","dateYear","weeks","base","week","weekStart","getCacheKey","onDayMouseEnter","days","firstDay","onDayMouseLeave","cellSpacing","cellPadding","weekNum","getWeekOfYear","WeekNum","Day","hover","onMouseEnter","onMouseLeave","Flex","StyledDay","current","setEnabled","today","setToday","dayMonth","dayWeekOfYear","firstHover","lastHover","isToday","classes","getClassNames","children","react_with_gesture_1","MobileMenuTableWrapper","animate","PureComponent","down","xDir","x","cooldown","deltaX","delta","translateX","cancel","style","transform","__decorate","withGesture","mouse","number_input_1","Divider","span","NumberInput","step","Steps","Step","InputContainer","Input","useRef","focused","setFocused","setValue","getDateValue","setDateValue","newValue","onFocusIn","onFocusOut","document","formatNumberRaw","preventDefault","onBlur","onKeyUp","keyCode","show","lastDate","nextDisabled","ClearButton","ClearButtonX","Placeholder","Icon","icon","DefaultIcon","getIconClass","getIcon","DefaultClearComponent","META_KEYS","FORBIDDEN_KEYS","inputs","selectElement","allSelected","formatGroup","onSearchRef","onKeyDown","onDblClick","formatGroups","split","reduce","memo","prevChar","substr","hasFocus","inp","allowTextSelection","splitDate","forEach","focus","find","forceUpdate","ArrowButtonComp","ClearComponent","showPlaceholder","showClearer","timeOnly","IconComponent","contentEditable","group","g","separator","data-placeholder","data-separator","data-group","onDoubleClick","nextSibling","previousSibling","numericFormat","sel","getSelection","hasSelection","focusOffset","anchorOffset","numericValue","HTMLSpanElement","isArrowUp","isNaN","manipulateDate","dateParts","add","nextValue","valid","formatNumber","joinDates","groupValue","includes","metaKey","ctrlKey","firstInput","validatedChar","blur","parentNode","dataGroup","filledValue","fillZero","stopPropagation","ArrowButtonProps","Fragment","body","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Select } from 'react-slct';\nimport { MenuContainerProps } from 'react-slct/dist/typings';\nimport { Menu } from './menu';\nimport { MenuTitle } from './menu/title';\nimport { Value } from './value/value';\nimport {\n    isUndefined,\n    startOfDay,\n    isEnabled,\n    dateFormat,\n    validateDate,\n    setDate,\n    clearSelection,\n    endOfDay,\n    isBefore,\n    isAfter,\n    dateEqual,\n    startOfWeek,\n    endOfWeek,\n    sortDates,\n    isDateFormat,\n    isTimeFormat,\n    isArray,\n    getFormatType,\n    addDays\n} from './utils';\nimport {\n    ReactTimebombProps,\n    ReactTimebombState,\n    ReactTimebombError,\n    ReactTimebombDate,\n    ReactTimebombArrowButtonProps,\n    ReactTimebombClearComponentProps,\n    FormatType\n} from './typings';\nimport { ValueMulti } from './value/value-multi';\n\nexport {\n    ReactTimebombProps,\n    ReactTimebombState,\n    ReactTimebombError,\n    ReactTimebombDate,\n    ReactTimebombArrowButtonProps,\n    ReactTimebombClearComponentProps\n};\n\ninterface MenuWrapperProps {\n    menuHeight: number | 'none';\n    mobile?: boolean;\n}\n\nconst Container = styled.div`\n    width: 100%;\n    height: 100%;\n    position: relative;\n    background: #fff;\n`;\n\nconst MenuWrapper = styled.div`\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    border: 1px solid #ccc;\n    box-sizing: border-box;\n    padding: 0;\n    background: white;\n    z-index: 1;\n    height: 100%;\n    max-height: ${(props: MenuWrapperProps) => props.menuHeight}px;\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 13px;\n\n    * {\n        box-sizing: border-box;\n    }\n\n    ${(props: MenuWrapperProps) =>\n        props.mobile\n            ? css`\n                  position: fixed;\n                  left: 50% !important;\n                  top: 50% !important;\n                  max-width: 96%;\n                  width: 360px !important;\n                  height: 320px !important;\n                  margin-left: -180px;\n                  margin-top: -160px;\n                  max-height: 100%;\n                  font-size: 16px;\n                  box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.1);\n\n                  @media (max-width: 360px) {\n                      width: 100% !important;\n                      left: 0 !important;\n                      margin-left: 0;\n                      max-width: 100%;\n                  }\n              `\n            : ''}\n`;\n\nconst BlindInput = styled.input`\n    position: absolute;\n    left: 0;\n    top: 0;\n    opacity: 0;\n    pointer-events: none;\n`;\n\nexport class ReactTimebomb extends React.Component<\n    ReactTimebombProps,\n    ReactTimebombState\n> {\n    public static MENU_WIDTH = 320;\n    public static MENU_HEIGHT = 320;\n\n    private onToggle?: () => void;\n    private MobileMenuContainer?: React.ComponentType<MenuContainerProps>;\n\n    private menuRef: HTMLDivElement | null = null;\n\n    /** @internal */\n    public static getDerivedStateFromProps(\n        props: ReactTimebombProps\n    ): Partial<ReactTimebombState> | null {\n        const format = props.format!;\n        const { minDate, maxDate } = props;\n\n        return {\n            minDate: minDate ? startOfDay(minDate) : undefined,\n            maxDate: maxDate ? endOfDay(maxDate) : undefined,\n            showTime: isTimeFormat(format),\n            showDate: isDateFormat(format)\n        };\n    }\n\n    /** @internal */\n    public static defaultProps: Partial<ReactTimebombProps> = {\n        format: 'YYYY-MM-DD'\n    };\n\n    private getMobileMenuContainer(\n        MenuContainer: React.ComponentType<MenuContainerProps>\n    ) {\n        if (!this.MobileMenuContainer) {\n            this.MobileMenuContainer = styled(MenuContainer)`\n                position: fixed;\n                left: 0 !important;\n                top: 0 !important;\n                right: 0 !important;\n                bottom: 0 !important;\n                width: 100% !important;\n                height: 100% !important;\n                background: rgba(0, 0, 0, 0.12);\n                transform: none;\n            ` as any;\n        }\n\n        return this.MobileMenuContainer!;\n    }\n\n    private get className() {\n        const classNames = ['react-timebomb'];\n\n        if (this.props.className) {\n            classNames.push(this.props.className);\n        }\n\n        if (this.props.error) {\n            classNames.push('error');\n        }\n\n        if (this.props.disabled) {\n            classNames.push('disabled');\n        }\n\n        return classNames.join(' ');\n    }\n\n    private get defaultDateValue() {\n        const { value, minDate, maxDate } = this.props;\n\n        if (value) {\n            return value;\n        }\n\n        let date = new Date();\n\n        if (maxDate && isBefore(maxDate, date)) {\n            date = maxDate;\n        } else if (minDate && isAfter(minDate, date)) {\n            date = minDate;\n        }\n\n        return startOfDay(date);\n    }\n\n    private get initialState(): ReactTimebombState {\n        return {\n            allowValidation: false,\n            mode: getFormatType(this.props.format!),\n            valueText: this.props.value\n                ? dateFormat(this.props.value, this.props.format!)\n                : undefined,\n            date: this.defaultDateValue,\n            selectedRange: 0,\n            menuHeight: 0\n        };\n    }\n\n    constructor(props: ReactTimebombProps) {\n        super(props);\n\n        const { minDate, maxDate, selectRange, showConfirm } = props;\n\n        if (minDate && maxDate && isBefore(maxDate, minDate)) {\n            console.error(\n                '[react-timebomb]: minDate must appear before maxDate'\n            );\n        }\n\n        if (selectRange === true && !showConfirm) {\n            console.error(\n                '[react-timebomb]: when setting `selectRange = true` please also set `showConfirm`'\n            );\n        }\n\n        this.state = this.initialState;\n\n        this.onChangeValueText = this.onChangeValueText.bind(this);\n        this.onValueSubmit = this.onValueSubmit.bind(this);\n        this.onSelectDay = this.onSelectDay.bind(this);\n        this.onModeDay = this.onModeDay.bind(this);\n        this.onModeYear = this.onModeYear.bind(this);\n        this.onModeMonth = this.onModeMonth.bind(this);\n        this.onSelectMonth = this.onSelectMonth.bind(this);\n        this.onChangeMonth = this.onChangeMonth.bind(this);\n        this.onSelectYear = this.onSelectYear.bind(this);\n        this.onReset = this.onReset.bind(this);\n        this.onNextMonth = this.onNextMonth.bind(this);\n        this.onPrevMonth = this.onPrevMonth.bind(this);\n        this.onSelectTime = this.onSelectTime.bind(this);\n        this.onSubmitOrCancelTime = this.onSubmitOrCancelTime.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.onClear = this.onClear.bind(this);\n        this.onChangeFormatGroup = this.onChangeFormatGroup.bind(this);\n        this.onMenuRef = this.onMenuRef.bind(this);\n        this.onMobileMenuContainerClick = this.onMobileMenuContainerClick.bind(\n            this\n        );\n    }\n\n    public componentDidUpdate(\n        prevProps: ReactTimebombProps,\n        prevState: ReactTimebombState\n    ): void {\n        const { valueText } = this.state;\n        const { value, format } = this.props;\n\n        if (prevProps.format !== format || prevProps.value !== value) {\n            this.setState({\n                valueText: value ? dateFormat(value, format!) : undefined\n            });\n        }\n\n        if (prevState.valueText !== valueText) {\n            this.valueTextDidUpdate(false);\n        }\n    }\n\n    private valueTextDidUpdate(commit: boolean): void {\n        const { valueText, allowValidation } = this.state;\n        const { format } = this.props;\n        const validDate = validateDate(valueText, format!);\n\n        if (validDate) {\n            this.setState({ allowValidation: true }, () => {\n                const enabled = isArray(validDate)\n                    ? validDate.some(d => isEnabled('day', d, this.props))\n                    : isEnabled('day', validDate, this.props);\n\n                if (enabled) {\n                    this.setState({ date: validDate }, () =>\n                        this.emitChange(validDate, commit)\n                    );\n                } else {\n                    this.emitError('outOfRange', valueText!);\n                }\n            });\n        } else if (valueText) {\n            this.emitError('invalidDate', valueText);\n        } else if (!isUndefined(valueText) && allowValidation) {\n            this.emitChange(undefined, commit);\n        }\n    }\n\n    public render(): React.ReactNode {\n        const {\n            placeholder,\n            showConfirm,\n            showCalendarWeek,\n            selectRange,\n            format,\n            error,\n            disabled,\n            mobile,\n            timeStep,\n            onOpen\n        } = this.props;\n        const {\n            showDate,\n            showTime,\n            valueText,\n            mode,\n            selectedRange,\n            minDate,\n            maxDate\n        } = this.state;\n        const value = valueText\n            ? validateDate(valueText, format!)\n            : this.props.value;\n        const menuWidth = Math.max(\n            ReactTimebomb.MENU_WIDTH,\n            this.props.menuWidth || 0\n        );\n        const menuHeight = this.state.menuHeight || ReactTimebomb.MENU_HEIGHT;\n\n        return (\n            <Select<ReactTimebombDate>\n                value={value}\n                placeholder={placeholder}\n                error={error}\n                onOpen={onOpen}\n                onClose={this.onClose}\n            >\n                {({ placeholder, open, onToggle, onRef, MenuContainer }) => {\n                    const showMenu =\n                        open && (showDate || showTime) && !disabled;\n                    const className = [this.className];\n\n                    if (showMenu) {\n                        className.push('open');\n                    }\n\n                    this.onToggle = onToggle;\n\n                    if (mobile) {\n                        MenuContainer = this.getMobileMenuContainer(\n                            MenuContainer\n                        );\n                    }\n\n                    return (\n                        <Container ref={onRef} className={className.join(' ')}>\n                            {this.renderValue(value, placeholder, open)}\n                            {showMenu ? (\n                                <MenuContainer\n                                    menuWidth={menuWidth}\n                                    menuHeight={menuHeight}\n                                    onClick={\n                                        mobile\n                                            ? this.onMobileMenuContainerClick\n                                            : undefined\n                                    }\n                                >\n                                    <MenuWrapper\n                                        className=\"react-timebomb-menu\"\n                                        menuHeight={menuHeight}\n                                        mobile={mobile}\n                                        ref={this.onMenuRef}\n                                    >\n                                        <MenuTitle\n                                            mode={mode}\n                                            mobile={mobile}\n                                            date={this.state.date}\n                                            minDate={minDate}\n                                            maxDate={maxDate}\n                                            selectedRange={selectedRange}\n                                            showTime={showTime}\n                                            showDate={showDate}\n                                            onMonth={this.onModeMonth}\n                                            onYear={this.onModeYear}\n                                            onNextMonth={this.onNextMonth}\n                                            onPrevMonth={this.onPrevMonth}\n                                            onReset={this.onReset}\n                                        />\n                                        <Menu\n                                            showTime={showTime}\n                                            showDate={showDate}\n                                            showConfirm={showConfirm}\n                                            showCalendarWeek={showCalendarWeek}\n                                            selectRange={selectRange}\n                                            timeStep={timeStep}\n                                            date={this.state.date}\n                                            value={value}\n                                            valueText={valueText}\n                                            format={format!}\n                                            mode={mode}\n                                            mobile={mobile}\n                                            minDate={minDate}\n                                            maxDate={maxDate}\n                                            selectedRange={selectedRange}\n                                            onSelectDay={this.onSelectDay}\n                                            onSelectMonth={this.onSelectMonth}\n                                            onChangeMonth={this.onChangeMonth}\n                                            onSelectYear={this.onSelectYear}\n                                            onSelectTime={this.onSelectTime}\n                                            onSubmitTime={\n                                                this.onSubmitOrCancelTime\n                                            }\n                                            onSubmit={this.onValueSubmit}\n                                        />\n                                    </MenuWrapper>\n                                </MenuContainer>\n                            ) : (\n                                <BlindInput type=\"text\" onFocus={onToggle} />\n                            )}\n                        </Container>\n                    );\n                }}\n            </Select>\n        );\n    }\n\n    private renderValue(\n        value: ReactTimebombDate,\n        placeholder?: string,\n        open?: boolean\n    ) {\n        placeholder = open ? undefined : placeholder;\n\n        const {\n            minDate,\n            maxDate,\n            disabled,\n            format,\n            selectRange,\n            mobile,\n            timeStep,\n            iconComponent,\n            arrowButtonComponent,\n            arrowButtonId,\n            clearComponent\n        } = this.props;\n        const { showDate, showTime, allowValidation, mode } = this.state;\n\n        if (selectRange || isArray(value)) {\n            const multiValue = value\n                ? isArray(value)\n                    ? value\n                    : [value]\n                : undefined;\n\n            return (\n                <ValueMulti\n                    open={open}\n                    disabled={disabled}\n                    placeholder={placeholder}\n                    value={multiValue}\n                    iconComponent={iconComponent}\n                    arrowButtonId={arrowButtonId}\n                    arrowButtonComponent={arrowButtonComponent}\n                    clearComponent={clearComponent}\n                    onClear={this.onClear}\n                    onToggle={this.onToggle!}\n                />\n            );\n        }\n\n        return (\n            <Value\n                mode={mode}\n                disabled={disabled}\n                mobile={mobile}\n                placeholder={placeholder}\n                format={format!}\n                value={value}\n                minDate={minDate}\n                maxDate={maxDate}\n                allowValidation={allowValidation}\n                open={open}\n                showDate={showDate}\n                showTime={showTime}\n                timeStep={timeStep}\n                iconComponent={iconComponent}\n                arrowButtonId={arrowButtonId}\n                arrowButtonComponent={arrowButtonComponent}\n                clearComponent={clearComponent}\n                onClear={this.onClear}\n                onChangeValueText={this.onChangeValueText}\n                onChangeFormatGroup={this.onChangeFormatGroup}\n                onToggle={this.onToggle!}\n                onSubmit={this.onValueSubmit}\n                onAllSelect={this.onModeDay}\n            />\n        );\n    }\n\n    private onClose() {\n        clearSelection();\n\n        setTimeout(() => {\n            clearSelection();\n\n            this.setState(this.initialState, () => {\n                if (this.props.onClose) {\n                    this.props.onClose();\n                }\n            });\n        }, 16);\n    }\n\n    private emitError(\n        error: ReactTimebombError,\n        value: ReactTimebombState['valueText']\n    ): void {\n        if (this.state.allowValidation) {\n            this.setState({ allowValidation: false }, () => {\n                if (this.props.onError) {\n                    this.props.onError(error, value);\n                }\n            });\n        }\n    }\n\n    private emitChange = (() => {\n        let timeout = 0;\n\n        return (date: ReactTimebombDate, commit: boolean) => {\n            clearTimeout(timeout);\n\n            timeout = setTimeout(() => {\n                const { value, showConfirm, onChange } = this.props;\n\n                if (!showConfirm) {\n                    commit = true;\n                }\n\n                if (dateEqual(value, date)) {\n                    return;\n                }\n\n                if (commit) {\n                    if (isArray(date)) {\n                        onChange(...date);\n                    } else {\n                        onChange(date);\n                    }\n                }\n\n                this.setState({ allowValidation: Boolean(date) });\n            }, 0);\n        };\n    })();\n\n    private getSelectedRange(date: ReactTimebombDate) {\n        if (isArray(date)) {\n            if (date.length === 2) {\n                if (date[0] > date[1]) {\n                    return 0;\n                } else {\n                    return 1;\n                }\n            } else if (date.length === 1) {\n                return 0;\n            }\n        } else {\n            return 0;\n        }\n\n        return this.state.selectedRange;\n    }\n\n    private setMenuHeight() {\n        if (this.menuRef) {\n            this.setState({\n                menuHeight: this.menuRef.getBoundingClientRect().height\n            });\n        } else {\n            this.setState({ menuHeight: 0 });\n        }\n    }\n\n    private onClear() {\n        this.setState({ valueText: undefined }, () => {\n            this.emitChange(undefined, true);\n        });\n    }\n\n    private onChangeValueText(valueText: string | undefined): void {\n        this.setState({ valueText });\n    }\n\n    private onChangeFormatGroup(format?: string) {\n        this.setState(\n            {\n                menuHeight: 'none',\n                mode: format ? getFormatType(format) : undefined\n            },\n            () => this.setMenuHeight()\n        );\n    }\n\n    private onValueSubmit(): void {\n        if (this.onToggle) {\n            this.onToggle();\n        }\n        clearSelection();\n\n        this.valueTextDidUpdate(true);\n    }\n\n    private onSelectDay(day: Date): void {\n        const { value, format, selectRange } = this.props;\n\n        const valueDate =\n            value instanceof Date\n                ? value\n                : isArray(value)\n                ? value[0]\n                : undefined;\n\n        if (selectRange === 'week') {\n            const date = [startOfWeek(day), endOfWeek(day)];\n            const valueText = dateFormat(date, format!);\n\n            this.setState({ date, valueText });\n            return;\n        } else if (typeof selectRange === 'number') {\n            const date = [day, addDays(day, selectRange - 1)];\n            const valueText = dateFormat(date, format!);\n\n            this.setState({ date, valueText });\n            return;\n        }\n\n        const date = setDate(\n            day,\n            valueDate ? valueDate.getHours() : 0,\n            valueDate ? valueDate.getMinutes() : 0\n        );\n\n        if (selectRange) {\n            const dateArr =\n                isArray(this.state.valueText) &&\n                this.state.valueText.length === 1\n                    ? [\n                          validateDate(\n                              this.state.valueText[0],\n                              format!\n                          ) as Date,\n                          date\n                      ]\n                    : [date];\n\n            const selectedRange = this.getSelectedRange(dateArr);\n            const valueText = dateFormat(dateArr.sort(sortDates), format!);\n\n            this.setState({ date: dateArr, valueText, selectedRange });\n        } else {\n            const valueText = dateFormat(date, format!);\n\n            this.setState({ date, valueText });\n        }\n    }\n\n    private onModeDay() {\n        this.setState({ mode: 'day' });\n    }\n\n    private onModeYear() {\n        this.setState({ mode: 'year' });\n    }\n\n    private onModeMonth() {\n        this.setState({ mode: 'month' });\n    }\n\n    private onSelectMonth(date: Date) {\n        this.onSelectDay(date);\n        this.setState({ mode: 'day' });\n    }\n\n    private onChangeMonth(date: Date) {\n        this.setState({ date, mode: 'day' });\n    }\n\n    private onSelectYear(date: Date) {\n        this.onSelectDay(date);\n        this.setState({ mode: 'day' });\n    }\n\n    private onReset(): void {\n        this.setState({ date: this.defaultDateValue });\n    }\n\n    private onNextMonth(): void {\n        const currentDate = isArray(this.state.date)\n            ? this.state.date[this.state.selectedRange]\n            : this.state.date;\n\n        if (currentDate) {\n            const date = new Date(currentDate);\n\n            date.setMonth(date.getMonth() + 1);\n\n            this.setState({ date });\n        }\n    }\n\n    private onPrevMonth(): void {\n        const currentDate = isArray(this.state.date)\n            ? this.state.date[this.state.selectedRange]\n            : this.state.date;\n\n        if (currentDate) {\n            const date = new Date(currentDate);\n\n            date.setMonth(date.getMonth() - 1);\n\n            this.setState({ date });\n        }\n    }\n\n    private onSelectTime(time: Date, mode: FormatType, commit = false): void {\n        const format = this.props.format!;\n        const value = this.props.value || new Date();\n\n        const newDate = isArray(value)\n            ? value.map(d => setDate(d, time.getHours(), time.getMinutes()))\n            : setDate(value, time.getHours(), time.getMinutes());\n\n        const valueText = dateFormat(newDate, format);\n\n        this.setState({ mode, valueText }, () =>\n            this.emitChange(newDate, commit)\n        );\n    }\n\n    private onSubmitOrCancelTime(time: Date | undefined, mode: FormatType) {\n        if (time) {\n            this.onSelectTime(time, mode, true);\n        }\n\n        if (this.onToggle) {\n            this.onToggle();\n        }\n    }\n\n    private onMobileMenuContainerClick(e: React.MouseEvent<HTMLDivElement>) {\n        if (\n            e.target instanceof HTMLDivElement &&\n            e.target.classList.contains('react-slct-menu')\n        ) {\n            if (this.onToggle) {\n                this.onToggle();\n            }\n        }\n    }\n\n    private onMenuRef(el: HTMLDivElement | null) {\n        this.menuRef = el;\n\n        this.setMenuHeight();\n    }\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { ReactTimebombState, ReactTimebombProps } from '../';\nimport {\n    isEnabled,\n    validateDate,\n    getMonthNames,\n    getAttribute,\n    isArray,\n    addMonths,\n    subtractMonths,\n    startOfMonth,\n    subtractDays,\n    addDays,\n    endOfMonth\n} from '../utils';\nimport { Button } from '../components/button';\nimport { ReactTimebombDate, FormatType } from '../typings';\nimport { MenuTable } from './table';\nimport { GestureWrapper, GestureDirection } from './mobile';\nimport { MenuTime } from './time';\n\nexport interface MenuProps {\n    showTime: ReactTimebombState['showTime'];\n    showDate: ReactTimebombState['showDate'];\n    showConfirm: ReactTimebombProps['showConfirm'];\n    showCalendarWeek: ReactTimebombProps['showCalendarWeek'];\n    selectRange: ReactTimebombProps['selectRange'];\n    value: ReactTimebombProps['value'];\n    valueText: ReactTimebombState['valueText'];\n    minDate: ReactTimebombProps['minDate'];\n    maxDate: ReactTimebombProps['maxDate'];\n    date: ReactTimebombState['date'];\n    mode: ReactTimebombState['mode'];\n    timeStep: ReactTimebombProps['timeStep'];\n    selectedRange: ReactTimebombState['selectedRange'];\n    mobile: ReactTimebombProps['mobile'];\n    format: string;\n    onSelectDay(date: Date): void;\n    onSelectYear(date: Date): void;\n    /** month was selected, value will change to `date` */\n    onSelectMonth(date: Date): void;\n    /** month was selected but value will not change to `date` */\n    onChangeMonth(date: Date): void;\n    onSelectTime(date: Date, mode: FormatType): void;\n    onSubmitTime(date: Date | undefined, mode: FormatType): void;\n    onSubmit(): void;\n}\n\nconst MonthAndYearContainer = styled.div`\n    display: flex;\n    height: ${(props: { mobile?: boolean }) =>\n        props.mobile ? '100%' : '220px'};\n`;\n\nconst MonthsContainer = styled.div`\n    display: flex;\n    flex: 1;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-self: flex-start;\n    align-items: flex-start;\n    padding: 10px;\n    box-sizing: border-box;\n    height: 100%;\n\n    button {\n        width: ${(props: { mobile?: boolean }) =>\n            props.mobile ? 'calc(33% - 6px)' : '33%'};\n        font-size: 16px;\n        font-weight: normal;\n        font-style: normal;\n        font-stretch: normal;\n        min-height: 25%;\n        border: none;\n        margin: 0;\n    }\n`;\n\nconst MonthContainer = styled.div`\n    flex: 1;\n    padding: 0;\n    height: ${(props: { mobile?: boolean }) => (props.mobile ? '100' : 'auto')};\n    overflow: hidden;\n`;\n\nconst YearContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n    border-left: solid 1px #e6e6e6;\n    padding: 10px;\n    flex: 0 0 90px;\n\n    button {\n        width: 100%;\n        font-size: 16px;\n        font-weight: normal;\n        font-style: normal;\n        font-stretch: normal;\n        border: none;\n        padding: 6px 0;\n        margin: 0 0 4px;\n        min-height: 46px;\n    }\n`;\n\nconst Confirm = styled.div`\n    width: 100%;\n    text-align: center;\n    padding: 10px 0;\n\n    button {\n        padding: 3px 28px;\n    }\n`;\n\nconst MobileMenuTable = styled(MenuTable)`\n    width: 33.3%;\n`;\n\nfunction getDate(\n    date: ReactTimebombDate,\n    selectedRange: ReactTimebombState['selectedRange']\n) {\n    return (isArray(date) ? date[selectedRange] : date)!;\n}\n\nfunction MenuMonths(props: MenuProps) {\n    const { value, mobile, selectedRange } = props;\n    const [monthNames] = React.useState(getMonthNames(true));\n    const valueDate = getDate(value, selectedRange);\n    const date = getDate(props.date, selectedRange);\n    const month = value && valueDate.getMonth();\n    const year = value && valueDate.getFullYear();\n\n    function onSelectMonth(e: React.MouseEvent<HTMLButtonElement>) {\n        const date = new Date(getAttribute(e.currentTarget, 'data-date'));\n\n        setTimeout(() => props.onSelectMonth(date), 0);\n    }\n\n    return (\n        <MonthsContainer mobile={mobile} className=\"months\">\n            {monthNames.map((str, i) => {\n                const newDate = new Date(date);\n\n                newDate.setMonth(i);\n\n                const enabled = isEnabled('month', newDate, props);\n                const selected =\n                    month === newDate.getMonth() &&\n                    year === newDate.getFullYear();\n\n                return (\n                    <Button\n                        key={str}\n                        tabIndex={-1}\n                        className={selected ? 'selected' : undefined}\n                        selected={selected}\n                        disabled={!enabled}\n                        mobile={props.mobile}\n                        data-date={newDate.toISOString()}\n                        onClick={onSelectMonth}\n                    >\n                        {str}\n                    </Button>\n                );\n            })}\n        </MonthsContainer>\n    );\n}\n\nfunction MenuYear(props: MenuProps) {\n    const { value, minDate, maxDate } = props;\n    const [\n        yearContainer,\n        setYearContainer\n    ] = React.useState<HTMLDivElement | null>(null);\n\n    React.useEffect(scrollToYear, [props.date]);\n\n    function scrollToYear() {\n        if (yearContainer) {\n            const selected = yearContainer.querySelector('.selected');\n\n            if (selected) {\n                selected.scrollIntoView();\n\n                if (yearContainer.scrollBy) {\n                    yearContainer.scrollBy({ top: -10 });\n                }\n            }\n        }\n    }\n\n    function getFullYears() {\n        const valueDate = getDate(value, props.selectedRange);\n        const year = getDate(props.date, props.selectedRange).getFullYear();\n\n        const getDateConfig = (date: Date, newYear: number) => {\n            date = new Date(date);\n            date.setFullYear(newYear);\n\n            const enabled = isEnabled('year', date, props);\n            const selected = year === newYear;\n\n            if (value) {\n                date.setSeconds(valueDate.getSeconds());\n                date.setMinutes(valueDate.getMinutes());\n                date.setHours(valueDate.getHours());\n                date.setDate(valueDate.getDate());\n                date.setMonth(valueDate.getMonth());\n            }\n\n            return { date, enabled, selected };\n        };\n\n        if (minDate && !maxDate) {\n            const currentYear = minDate.getFullYear();\n\n            return Array(120)\n                .fill(undefined)\n                .map((_, i) => getDateConfig(minDate, currentYear + i))\n                .filter(obj => obj.enabled);\n        } else if (!minDate && maxDate) {\n            const currentYear = maxDate.getFullYear();\n\n            return Array(120)\n                .fill(undefined)\n                .map((_, i) => getDateConfig(maxDate, currentYear - i))\n                .filter(obj => obj.enabled)\n                .reverse();\n        } else if (minDate && maxDate) {\n            const minYear = minDate.getFullYear();\n            const maxYear = maxDate.getFullYear();\n            const array: {\n                date: Date;\n                enabled: boolean;\n                selected: boolean;\n            }[] = [];\n\n            for (let i = maxYear; i >= minYear; i--) {\n                array.push(getDateConfig(maxDate, i));\n            }\n\n            return array.reverse();\n        } else {\n            const now = new Date();\n            const currentDate = valueDate > now ? valueDate : now;\n            const currentYear = currentDate.getFullYear();\n\n            return Array(120)\n                .fill(undefined)\n                .map((_, i) => {\n                    const date = new Date(currentDate);\n\n                    date.setFullYear(currentYear - i);\n\n                    const enabled = isEnabled('year', date, props);\n                    const selected = year === date.getFullYear();\n\n                    return { date, enabled, selected };\n                })\n                .filter(obj => obj.enabled)\n                .reverse();\n        }\n    }\n\n    function onSelectYear(e: React.MouseEvent<HTMLButtonElement>) {\n        const date = new Date(getAttribute(e.currentTarget, 'data-date'));\n\n        setTimeout(() => props.onSelectYear(date), 0);\n    }\n\n    function onYearContainer(el: HTMLDivElement | null) {\n        setYearContainer(el);\n        scrollToYear();\n    }\n\n    return (\n        <YearContainer ref={onYearContainer} className=\"years\">\n            {getFullYears()\n                .map(({ date, selected }) => {\n                    const fullYear = date.getFullYear();\n                    const dateStr = date.toISOString();\n\n                    return (\n                        <Button\n                            key={dateStr}\n                            tabIndex={-1}\n                            className={selected ? 'selected' : undefined}\n                            selected={selected}\n                            mobile={props.mobile}\n                            data-date={dateStr}\n                            onClick={onSelectYear}\n                        >\n                            {fullYear}\n                        </Button>\n                    );\n                })\n                .reverse()}\n        </YearContainer>\n    );\n}\n\nfunction MenuConfirm(props: MenuProps) {\n    const { valueText, format } = props;\n    const validDate = validateDate(valueText, format);\n    const isValid = validDate\n        ? isArray(validDate)\n            ? validDate.every(v => isEnabled('day', v, props))\n            : isEnabled('day', validDate, props)\n        : false;\n\n    return (\n        <Confirm>\n            <Button\n                tabIndex={-1}\n                disabled={!isValid}\n                mobile={props.mobile}\n                onClick={() => props.onSubmit()}\n            >\n                Ok\n            </Button>\n        </Confirm>\n    );\n}\n\nfunction MonthWrapper(props: MenuProps) {\n    const { minDate, maxDate, mobile } = props;\n\n    function allowPrev() {\n        let date = props.date;\n\n        if (!minDate) {\n            return true;\n        }\n\n        if (isArray(date)) {\n            date = date[0];\n        }\n\n        if (date) {\n            if (subtractDays(startOfMonth(date), 1) < minDate) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function allowNext() {\n        let date = props.date;\n\n        if (!maxDate) {\n            return true;\n        }\n\n        if (isArray(date)) {\n            date = date[0];\n        }\n\n        if (date) {\n            if (addDays(endOfMonth(date), 1) > maxDate) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function onChangeMonth(direction: GestureDirection) {\n        const { onChangeMonth } = props;\n        const date = getDate(props.date, props.selectedRange);\n\n        switch (direction) {\n            case 'next':\n                onChangeMonth(addMonths(date, 1));\n                break;\n            case 'prev':\n                onChangeMonth(subtractMonths(date, 1));\n                break;\n        }\n    }\n\n    if (mobile) {\n        return (\n            <GestureWrapper\n                allowNext={allowNext()}\n                allowPrev={allowPrev()}\n                onChangeMonth={onChangeMonth}\n            >\n                <MobileMenuTable\n                    date={subtractMonths(\n                        getDate(props.date, props.selectedRange),\n                        1\n                    )}\n                    minDate={props.minDate}\n                    maxDate={props.maxDate}\n                    mobile={props.mobile}\n                    selectRange={props.selectRange}\n                    selectedRange={props.selectedRange}\n                    showCalendarWeek={props.showCalendarWeek}\n                    showConfirm={props.showConfirm}\n                    showTime={props.showTime}\n                    value={subtractMonths(\n                        getDate(props.value, props.selectedRange),\n                        1\n                    )}\n                    onSubmit={props.onSubmit}\n                    onSelectDay={props.onSelectDay}\n                />\n                <MobileMenuTable\n                    date={props.date}\n                    minDate={props.minDate}\n                    maxDate={props.maxDate}\n                    mobile={props.mobile}\n                    selectRange={props.selectRange}\n                    selectedRange={props.selectedRange}\n                    showCalendarWeek={props.showCalendarWeek}\n                    showConfirm={props.showConfirm}\n                    showTime={props.showTime}\n                    value={props.value}\n                    onSubmit={props.onSubmit}\n                    onSelectDay={props.onSelectDay}\n                />\n                <MobileMenuTable\n                    date={addMonths(\n                        getDate(props.date, props.selectedRange),\n                        1\n                    )}\n                    minDate={props.minDate}\n                    maxDate={props.maxDate}\n                    mobile={props.mobile}\n                    selectRange={props.selectRange}\n                    selectedRange={props.selectedRange}\n                    showCalendarWeek={props.showCalendarWeek}\n                    showConfirm={props.showConfirm}\n                    showTime={props.showTime}\n                    value={addMonths(\n                        getDate(props.value, props.selectedRange),\n                        1\n                    )}\n                    onSubmit={props.onSubmit}\n                    onSelectDay={props.onSelectDay}\n                />\n            </GestureWrapper>\n        );\n    }\n\n    return (\n        <MenuTable\n            date={props.date}\n            minDate={props.minDate}\n            maxDate={props.maxDate}\n            mobile={props.mobile}\n            selectRange={props.selectRange}\n            selectedRange={props.selectedRange}\n            showCalendarWeek={props.showCalendarWeek}\n            showConfirm={props.showConfirm}\n            showTime={props.showTime}\n            value={props.value}\n            onSubmit={props.onSubmit}\n            onSelectDay={props.onSelectDay}\n        />\n    );\n}\n\nexport function Menu(props: MenuProps) {\n    const { mode, mobile, showDate, showConfirm, showTime } = props;\n\n    if (showDate || showTime) {\n        switch (mode) {\n            case 'year':\n            case 'month':\n                return (\n                    <MonthAndYearContainer mobile={mobile}>\n                        <MenuMonths {...props} />\n                        <MenuYear {...props} />\n                    </MonthAndYearContainer>\n                );\n            case 'day':\n            case 'hour':\n            case 'minute':\n            case 'second':\n                return (\n                    <MonthContainer mobile={mobile}>\n                        {showDate && <MonthWrapper {...props} />}\n                        {showTime && (\n                            <MenuTime\n                                date={props.date}\n                                timeStep={props.timeStep}\n                                topDivider={props.showDate}\n                                onChange={props.onSelectTime}\n                                onSubmit={props.onSubmitTime}\n                                onCancel={props.onSubmitTime}\n                            />\n                        )}\n                        {showConfirm && <MenuConfirm {...props} />}\n                    </MonthContainer>\n                );\n        }\n    }\n\n    return null;\n}\n","// @ts-ignore\nimport momentDefaultImport from 'moment';\nimport * as momentImport from 'moment';\nimport { ReactTimebombDate, FormatType } from './typings';\n\nconst moment: typeof momentImport = momentDefaultImport || momentImport;\n\nexport const formatSplitExpr = /[.|:|\\-|\\\\|_|\\s]/;\n\nexport function dateFormat(date: Date, format: string): string;\nexport function dateFormat(date: Date[], format: string): string[];\nexport function dateFormat(\n    date: Date | Date[],\n    format: string\n): string | string[];\nexport function dateFormat(\n    date: Date | Date[],\n    format: string\n): string | string[] {\n    if (isArray(date)) {\n        return date.map(date => moment(date).format(format));\n    } else {\n        return moment(date).format(format);\n    }\n}\n\nexport function validateDate(\n    date: string | string[] | undefined,\n    format: string\n): ReactTimebombDate {\n    if (isArray(date)) {\n        const dates = date\n            .map(date => {\n                const instance = moment(date, format, true);\n\n                return instance.isValid() ? instance.toDate() : undefined;\n            })\n            .filter(d => Boolean(d)) as Date[];\n\n        return dates.length === 0 ? undefined : dates;\n    } else {\n        const instance = moment(date, format, true);\n\n        return instance.isValid() ? instance.toDate() : undefined;\n    }\n}\n\nexport function getFormatType(format: string): FormatType | undefined {\n    if (/^D/.test(format)) {\n        return 'day';\n    }\n\n    if (/^M/.test(format)) {\n        return 'month';\n    }\n\n    if (/^Y/.test(format)) {\n        return 'year';\n    }\n\n    if (/^H/.test(format)) {\n        return 'hour';\n    }\n\n    if (/^m/.test(format)) {\n        return 'minute';\n    }\n\n    if (/^s/.test(format)) {\n        return 'second';\n    }\n\n    return undefined;\n}\n\nexport function formatIsActualNumber(format: string) {\n    // day / year\n    if (/D|Y|H|m|s/.test(format)) {\n        return true;\n    }\n\n    // month\n    if (format === 'M' || format === 'MM') {\n        return true;\n    }\n\n    return false;\n}\n\n/** @return returns a string with transformed value, true for valid input or false for invalid input */\nexport function validateFormatGroup(\n    input: string | number,\n    format: string\n): boolean | string {\n    const formatType = getFormatType(format);\n\n    return validateFormatType(input, formatType);\n}\n\n/** @return returns a string with transformed value, true for valid input or false for invalid input */\nexport function validateFormatType(\n    input: string | number,\n    formatType?: FormatType\n) {\n    if (isFinite(input as any)) {\n        const int = typeof input === 'string' ? parseInt(input, 10) : input;\n        const char = String(input);\n        const strLen = char.length;\n\n        switch (formatType) {\n            case 'day':\n                if (strLen === 1) {\n                    if (int >= 0 && int <= 3) {\n                        return true;\n                    } else {\n                        return `0${input}`;\n                    }\n                }\n\n                if (strLen === 2 && int >= 1 && int <= 31) {\n                    return true;\n                }\n                break;\n            case 'month':\n                if (strLen === 1) {\n                    if (int === 0 || int === 1) {\n                        return true;\n                    } else {\n                        return `0${input}`;\n                    }\n                }\n\n                if (strLen === 2 && int >= 0 && int <= 12) {\n                    return true;\n                }\n                break;\n            case 'year':\n                if (strLen === 1 && (int === 1 || int === 2)) {\n                    return true;\n                }\n\n                if (\n                    strLen >= 2 &&\n                    (char.startsWith('19') || char.startsWith('20'))\n                ) {\n                    return true;\n                }\n                break;\n            case 'hour':\n                if (strLen === 1) {\n                    if (int >= 0 && int <= 2) {\n                        return true;\n                    } else {\n                        return `0${input}`;\n                    }\n                }\n\n                if (strLen >= 2 && int >= 0 && int <= 24) {\n                    return true;\n                }\n                break;\n            case 'minute':\n            case 'second':\n                if (strLen === 1) {\n                    if (int >= 0 && int <= 5) {\n                        return true;\n                    } else {\n                        return `0${input}`;\n                    }\n                }\n\n                if (strLen >= 2 && int >= 0 && int <= 59) {\n                    return true;\n                }\n                break;\n        }\n    }\n\n    return false;\n}\n\nconst ALLOWED_CHARS = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n\nexport function stringFromCharCode(keyCode: number): string {\n    const charCode = keyCode - 48 * Math.floor(keyCode / 48);\n    const char = String.fromCharCode(96 <= keyCode ? charCode : keyCode);\n\n    if (ALLOWED_CHARS.includes(char)) {\n        return char;\n    }\n\n    return '';\n}\n\nexport function formatNumber(number: number): string {\n    if (number <= 1) {\n        return '01';\n    }\n\n    if (number <= 9) {\n        return `0${number}`;\n    }\n\n    return String(number);\n}\n\nexport function formatNumberRaw(number: number): string {\n    if (number <= 9) {\n        return `0${number || 0}`;\n    }\n\n    return String(number);\n}\n\nexport function splitDate(date: Date, format: string): string[] {\n    const formattedDate = dateFormat(date, format);\n\n    return formattedDate\n        .split(formatSplitExpr)\n        .filter(group => group && formatSplitExpr.test(group) === false);\n}\n\nexport function joinDates(\n    parts: (string | HTMLElement)[],\n    format: string\n): string {\n    const strParts = parts\n        .map(part => (part instanceof HTMLElement ? part.innerText : part))\n        .filter(val => val);\n    const splittedFormat = format.split(formatSplitExpr);\n\n    if (strParts.length !== splittedFormat.length) {\n        return '';\n    }\n\n    const date = strParts.join(' ');\n    const spaceFormat = splittedFormat.join(' ');\n    const momentDate = moment(date, spaceFormat);\n    const parsingFlags = momentDate.parsingFlags();\n\n    if (parsingFlags.overflow === 2) {\n        return moment(\n            // @ts-ignore\n            new Date(...parsingFlags.parsedDateParts)\n        ).format(format);\n    }\n\n    return momentDate.format(format);\n}\n\nexport function clearSelection(): void {\n    const sel = getSelection();\n\n    if (sel) {\n        if (sel.empty) {\n            // Chrome\n            sel.empty();\n        } else if (sel.removeAllRanges) {\n            // Firefox\n            sel.removeAllRanges();\n        }\n    }\n}\n\nexport function selectElement(\n    el: HTMLElement | undefined,\n    caret?: number[]\n): void {\n    if (el) {\n        const range = document.createRange();\n        const sel = getSelection();\n\n        if (caret === undefined) {\n            range.selectNodeContents(el);\n        } else {\n            const [start, end] = caret;\n\n            range.setStart(el, start);\n            range.setEnd(el, end);\n        }\n\n        if (sel) {\n            sel.removeAllRanges();\n            sel.addRange(range);\n        }\n    }\n}\n\nexport function getWeekOfYear(date: Date): number {\n    return moment(date).isoWeek();\n}\n\nexport function startOfWeek(date: Date): Date {\n    return moment(date)\n        .startOf('isoWeek')\n        .toDate();\n}\n\nexport function endOfWeek(date: Date): Date {\n    return moment(date)\n        .endOf('isoWeek')\n        .toDate();\n}\n\nexport function startOfDay(date: Date): Date {\n    const newDate = new Date(date);\n\n    newDate.setHours(0, 0, 0, 0);\n\n    return newDate;\n}\n\nexport function endOfDay(date: Date): Date {\n    const newDate = new Date(date);\n\n    newDate.setHours(23, 59, 59, 999);\n\n    return newDate;\n}\n\nexport function addDays(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'days')\n        .toDate();\n}\n\nexport function addMonths(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'months')\n        .toDate();\n}\n\nexport function addYears(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'years')\n        .toDate();\n}\n\nexport function addHours(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'hours')\n        .toDate();\n}\n\nexport function addMinutes(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'minutes')\n        .toDate();\n}\n\nexport function addSeconds(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'seconds')\n        .toDate();\n}\n\nexport function subtractSeconds(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'seconds')\n        .toDate();\n}\n\nexport function subtractMinutes(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'minutes')\n        .toDate();\n}\n\nexport function subtractHours(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'hours')\n        .toDate();\n}\n\nexport function subtractDays(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'days')\n        .toDate();\n}\n\nexport function subtractMonths(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'months')\n        .toDate();\n}\n\nexport function subtractYears(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'years')\n        .toDate();\n}\n\nexport function manipulateDate(\n    date: Date,\n    formatType: FormatType,\n    direction: 'add' | 'subtract',\n    timeStep?: number\n): Date {\n    switch (formatType) {\n        case 'day':\n            if (direction === 'add') return addDays(date, 1);\n            if (direction === 'subtract') return subtractDays(date, 1);\n            break;\n        case 'month':\n            if (direction === 'add') return addMonths(date, 1);\n            if (direction === 'subtract') return subtractMonths(date, 1);\n            break;\n        case 'year':\n            if (direction === 'add') return addYears(date, 1);\n            if (direction === 'subtract') return subtractYears(date, 1);\n            break;\n        case 'hour':\n            if (direction === 'add') return addHours(date, 1);\n            if (direction === 'subtract') return subtractHours(date, 1);\n            break;\n        case 'minute':\n            if (direction === 'add') return addMinutes(date, timeStep || 1);\n            if (direction === 'subtract')\n                return subtractMinutes(date, timeStep || 1);\n            break;\n        case 'second':\n            if (direction === 'add') return addSeconds(date, timeStep || 1);\n            if (direction === 'subtract')\n                return subtractSeconds(date, timeStep || 1);\n            break;\n    }\n\n    return new Date();\n}\n\nexport function startOfMonth(date: Date): Date {\n    const newDate = new Date(date);\n\n    newDate.setDate(1);\n    newDate.setHours(0, 0, 0, 0);\n\n    return newDate;\n}\n\nexport function endOfMonth(date: Date): Date {\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n}\n\nexport function isUndefined(val): val is undefined {\n    return val === null || val === undefined;\n}\n\nexport function setDate(date: Date, hour: number, min?: number): Date {\n    const newDate = new Date(date);\n\n    newDate.setHours(hour, min);\n\n    return newDate;\n}\n\nexport function isToday(date: Date): boolean {\n    return moment(date).isSame(new Date(), 'day');\n}\n\nexport function isBefore(date: Date, inp: Date) {\n    return moment(date).isBefore(inp, 'day');\n}\n\nexport function isAfter(date: Date, inp: Date) {\n    return moment(date).isAfter(inp, 'day');\n}\n\nexport function isBetween(\n    date: Date,\n    cmpDateA?: Date,\n    cmpDateB?: Date,\n    context: momentImport.unitOfTime.StartOf = 'day'\n) {\n    return moment(date).isBetween(cmpDateA, cmpDateB, context, '[]');\n}\n\nexport function dateEqual(\n    dateA?: ReactTimebombDate,\n    dateB?: ReactTimebombDate,\n    considerTime = false\n) {\n    if (!dateA || !dateB) {\n        return false;\n    }\n\n    if (considerTime) {\n        if (isArray(dateA)) {\n            dateA = dateA.map(startOfDay);\n        } else {\n            dateA = startOfDay(dateA);\n        }\n\n        if (isArray(dateB)) {\n            dateB = dateB.map(startOfDay);\n        } else {\n            dateB = startOfDay(dateB);\n        }\n    }\n\n    if (isArray(dateA) && isArray(dateB)) {\n        return dateA.every((date, i) => {\n            const dBi = dateB![i];\n\n            if (date && dBi) {\n                return date.getTime() === dBi.getTime();\n            }\n\n            return false;\n        });\n    } else if (isArray(dateA) && dateB instanceof Date) {\n        return dateA.some(d => d.getTime() === (dateB as Date).getTime());\n    } else if (isArray(dateB) && dateA instanceof Date) {\n        return dateB.some(d => d.getTime() === (dateA as Date).getTime());\n    } else if (!isArray(dateA) && !isArray(dateB)) {\n        return dateA.getTime() === dateB.getTime();\n    }\n\n    return false;\n}\n\nexport function getMonthNames(short?: boolean): string[] {\n    if (short) {\n        return moment.monthsShort();\n    }\n\n    return moment.months();\n}\n\nexport function getWeekdayNames() {\n    return moment.weekdaysShort();\n}\n\nexport function isEnabled(\n    context: momentImport.unitOfTime.StartOf,\n    date: Date,\n    { minDate, maxDate }: { minDate?: Date; maxDate?: Date }\n): boolean {\n    if (!minDate && !maxDate) {\n        return true;\n    }\n\n    if (minDate && !maxDate) {\n        return moment(date).isSameOrAfter(minDate, context);\n    }\n\n    if (!minDate && maxDate) {\n        return moment(date).isSameOrBefore(maxDate, context);\n    }\n\n    return isBetween(date, minDate, maxDate, context);\n}\n\nexport function getAttribute(input: Element, attr: string): string {\n    return input.getAttribute(attr)!;\n}\n\nexport function isDateFormat(format: string) {\n    return Boolean(/D|M|Y/.test(format));\n}\n\nexport function isTimeFormat(format: string) {\n    return Boolean(/H|h|m|k|a|S|s/.test(format));\n}\n\nexport function sortDates(a: Date, b: Date) {\n    return a.getTime() - b.getTime();\n}\n\nexport function isArray(val: any): val is any[] {\n    return Array.isArray(val);\n}\n\nexport function fillZero(value: string | number, formatType: FormatType) {\n    value = String(value);\n\n    switch (formatType) {\n        case 'day':\n            if (value === '1' || value === '2' || value === '3') {\n                return `0${value}`;\n            }\n            break;\n        case 'month':\n            if (value === '1') {\n                return `0${value}`;\n            }\n            break;\n    }\n\n    return undefined;\n}\n\nexport function replaceSpaceWithNbsp(str?: string) {\n    if (!str) {\n        return str;\n    }\n\n    return str.replace(' ', ' ');\n}\n\nexport const keys = {\n    ARROW_UP: 38,\n    ARROW_RIGHT: 39,\n    ARROW_DOWN: 40,\n    ARROW_LEFT: 37,\n    ENTER: 13,\n    TAB: 9,\n    ESC: 27,\n    BACKSPACE: 8,\n    DELETE: 46,\n    SPACE: 32,\n    SHIFT: 16,\n    DOT: 190,\n    COMMA: 188\n};\n","import * as React from 'react';\nimport styled, { css } from 'styled-components';\n\nexport interface ButtonProps {\n    selected?: boolean;\n    mobile?: boolean;\n}\n\nconst StyledButton = styled.button`\n    margin-right: 5px;\n    border: 1px solid #ccc;\n    border-radius: 3px;\n    padding: 3px 6px;\n    height: 21px;\n    box-sizing: border-box;\n    background: ${(props: ButtonProps) => (props.selected ? '#ccc' : '#fff')};\n\n    ${(props: ButtonProps) =>\n        props.mobile\n            ? css`\n                  font-size: 16px;\n                  margin-right: 6px;\n                  padding: 6px 12px;\n                  height: auto;\n                  min-height: 21px;\n              `\n            : ''}\n\n    &:focus {\n        outline: none;\n    }\n\n    &:disabled {\n        cursor: not-allowed;\n    }\n\n    &:not(:disabled) {\n        cursor: pointer;\n    }\n\n    &:not(:disabled):hover {\n        background-color: ${(props: ButtonProps) =>\n            props.selected ? '#ccc' : '#efefef'};\n    }\n\n    &:last-child {\n        margin-right: 0;\n    }\n`;\n\nexport const Button = (props: ButtonProps & React.ButtonHTMLAttributes<{}>) => (\n    <StyledButton\n        data-react-timebomb-selectable\n        data-role=\"button\"\n        type=\"button\"\n        {...props}\n    />\n);\n\nexport const SmallButton = styled(Button)`\n    font-size: 13px;\n    color: #ccc;\n    cursor: pointer;\n    border: none;\n    line-height: 1;\n\n    &:hover:not(:disabled) {\n        color: #333;\n    }\n\n    &:focus {\n        outline: none;\n    }\n`;\n\nexport interface ArrowButtonProps {\n    open?: boolean;\n    disabled?: boolean;\n    id?: string;\n}\n\nexport const ArrowButton = (props: ArrowButtonProps) => (\n    <SmallButton\n        className=\"react-timebomb-arrow\"\n        id={props.id}\n        disabled={props.disabled}\n        tabIndex={-1}\n    >\n        {props.open ? '▲' : '▼'}\n    </SmallButton>\n);\n","import * as React from 'react';\nimport {\n    ReactTimebombProps,\n    ReactTimebombState,\n    ReactTimebombDate\n} from '../typings';\nimport {\n    startOfMonth,\n    startOfWeek,\n    endOfWeek,\n    addDays,\n    getWeekdayNames,\n    getWeekOfYear,\n    isArray,\n    dateEqual\n} from '../utils';\nimport styled from 'styled-components';\nimport { WeekNum, Day } from './day';\n\ninterface MenuTableProps {\n    className?: string;\n    showTime: ReactTimebombState['showTime'];\n    showConfirm: ReactTimebombProps['showConfirm'];\n    showCalendarWeek: ReactTimebombProps['showCalendarWeek'];\n    selectRange: ReactTimebombProps['selectRange'];\n    value: ReactTimebombProps['value'];\n    minDate: ReactTimebombProps['minDate'];\n    maxDate: ReactTimebombProps['maxDate'];\n    date: ReactTimebombState['date'];\n    selectedRange: ReactTimebombState['selectedRange'];\n    mobile: ReactTimebombProps['mobile'];\n    onSelectDay(date: Date): void;\n    onSubmit(): void;\n}\n\nconst Table = styled.table`\n    width: 100%;\n    height: 100%;\n    font-size: inherit;\n    user-select: none;\n    padding: 5px 10px;\n    box-sizing: border-box;\n\n    td.calendar-week {\n        color: #aaa;\n    }\n\n    th.calendar-week {\n        text-align: left;\n        color: #aaa;\n    }\n\n    tr {\n        th {\n            padding: 3px 2px;\n            width: 14.285714286%;\n        }\n\n        td {\n            width: 14.285714286%;\n        }\n    }\n`;\n\nexport function MenuTable(props: MenuTableProps) {\n    const {\n        showCalendarWeek,\n        selectRange,\n        selectedRange,\n        showConfirm,\n        onSubmit\n    } = props;\n    const [hoverDays, setHoverDays] = React.useState<Date[]>([]);\n    const [weekdayNames] = React.useState(getWeekdayNames());\n    const [sun, mon, tue, wed, thu, fri, sat] = weekdayNames;\n    const className = ['month', props.className]\n        .filter(c => Boolean(c))\n        .join(' ');\n\n    const monthMatrix = React.useMemo(() => {\n        const date = getDate(props.date);\n        const dateMonth = date.getMonth();\n        const dateYear = date.getFullYear();\n        const weeks: (Date)[][] = [];\n\n        let base = startOfMonth(date);\n        let week = 0;\n\n        while (\n            startOfWeek(base).getMonth() === dateMonth ||\n            endOfWeek(base).getMonth() === dateMonth\n        ) {\n            const weekStart = startOfWeek(\n                new Date(dateYear, dateMonth, week++ * 7 + 1)\n            );\n\n            weeks.push([\n                weekStart,\n                addDays(weekStart, 1),\n                addDays(weekStart, 2),\n                addDays(weekStart, 3),\n                addDays(weekStart, 4),\n                addDays(weekStart, 5),\n                addDays(weekStart, 6)\n            ]);\n\n            base = addDays(base, 7);\n        }\n\n        return weeks;\n    }, [getCacheKey()]);\n\n    function getCacheKey() {\n        const date = getDate(props.date);\n        const dateMonth = date.getMonth();\n        const dateYear = date.getFullYear();\n\n        // cache\n        return `${dateMonth}-${dateYear}`;\n    }\n\n    function getDate(date: ReactTimebombDate) {\n        return (isArray(date) ? date[selectedRange] : date)!;\n    }\n\n    function onSelectDay(date: Date): void {\n        props.onSelectDay(date);\n\n        if (!showConfirm) {\n            onSubmit();\n        }\n    }\n\n    function onDayMouseEnter(day: Date) {\n        if (typeof selectRange === 'number') {\n            const days = Array(selectRange)\n                .fill(null)\n                .map((_, i) => addDays(day, i));\n\n            setHoverDays(days);\n        } else if (selectRange === 'week') {\n            const firstDay = startOfWeek(day);\n            const days = Array(7)\n                .fill(null)\n                .map((_, i) => addDays(firstDay, i));\n\n            setHoverDays(days);\n        } else {\n            setHoverDays([day]);\n        }\n    }\n\n    function onDayMouseLeave() {\n        if (selectRange) {\n            setHoverDays([]);\n        }\n    }\n\n    return (\n        <Table className={className} cellSpacing={0} cellPadding={0}>\n            <thead>\n                <tr>\n                    {showCalendarWeek && <th className=\"calendar-week\" />}\n                    <th>{mon}</th>\n                    <th>{tue}</th>\n                    <th>{wed}</th>\n                    <th>{thu}</th>\n                    <th>{fri}</th>\n                    <th>{sat}</th>\n                    <th>{sun}</th>\n                </tr>\n            </thead>\n            <tbody>\n                {monthMatrix.map(dates => {\n                    const weekNum = getWeekOfYear(dates[0]);\n\n                    return (\n                        <tr key={weekNum}>\n                            {showCalendarWeek && (\n                                <td className=\"calendar-week\">\n                                    <WeekNum\n                                        day={dates[0]}\n                                        onClick={onSelectDay}\n                                    >\n                                        {weekNum}\n                                    </WeekNum>\n                                </td>\n                            )}\n                            {dates.map(date => {\n                                return (\n                                    <td\n                                        className=\"day\"\n                                        key={date.toISOString()}\n                                    >\n                                        <Day\n                                            day={date}\n                                            hoverDays={hoverDays}\n                                            hover={hoverDays.some(day =>\n                                                dateEqual(day, date)\n                                            )}\n                                            date={props.date}\n                                            value={props.value}\n                                            minDate={props.minDate}\n                                            maxDate={props.maxDate}\n                                            selectRange={props.selectRange}\n                                            showTime={props.showTime}\n                                            onSelectDay={onSelectDay}\n                                            onMouseEnter={onDayMouseEnter}\n                                            onMouseLeave={onDayMouseLeave}\n                                        />\n                                    </td>\n                                );\n                            })}\n                        </tr>\n                    );\n                })}\n            </tbody>\n        </Table>\n    );\n}\n","import * as React from 'react';\nimport {\n    getWeekOfYear,\n    dateEqual,\n    isEnabled,\n    isToday,\n    isArray\n} from '../utils';\nimport styled from 'styled-components';\nimport { MenuProps } from '.';\n\ninterface DayProps {\n    day: Date;\n    hoverDays: Date[];\n    hover: boolean;\n    value: MenuProps['value'];\n    date: MenuProps['date'];\n    selectRange: MenuProps['selectRange'];\n    minDate: MenuProps['minDate'];\n    maxDate: MenuProps['maxDate'];\n    showTime: MenuProps['showTime'];\n    onSelectDay: MenuProps['onSelectDay'];\n    onMouseEnter(day: Date): void;\n    onMouseLeave(day: Date): void;\n}\n\ninterface StyledDayProps {\n    selected?: boolean;\n    disabled?: boolean;\n    current: boolean;\n}\n\nconst Flex = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst StyledDay = styled(Flex)`\n    padding: 8px 2px;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    color: ${(props: StyledDayProps) => (props.current ? 'inherit' : '#aaa')};\n    background-color: transparent;\n    font-weight: ${(props: StyledDayProps) =>\n        props.selected ? 'bold' : 'normal'};\n    pointer-events: ${(props: StyledDayProps) =>\n        props.disabled ? 'none' : 'auto'};\n    user-select: none;\n    opacity: ${(props: StyledDayProps) => (props.disabled ? 0.3 : 1)};\n\n    &.today {\n        background-color: rgba(172, 206, 247, 0.4);\n    }\n\n    &.hover {\n        background-color: #eee;\n    }\n\n    &.selected {\n        background-color: #ddd;\n    }\n`;\n\nexport function Day(props: DayProps) {\n    const {\n        day,\n        date,\n        value,\n        selectRange,\n        hover,\n        hoverDays,\n        minDate,\n        maxDate,\n        showTime\n    } = props;\n    const [enabled, setEnabled] = React.useState(true);\n    const [today, setToday] = React.useState(false);\n    const current = React.useMemo(getCurrent, [date, day, showTime]);\n    const selected = React.useMemo(getSelected, [\n        day,\n        value,\n        selectRange,\n        hoverDays\n    ]);\n\n    React.useEffect(() => {\n        setToday(isToday(day));\n    }, [day.getTime()]);\n\n    React.useEffect(() => {\n        setEnabled(isEnabled('day', day, props));\n    }, [\n        minDate ? minDate.getTime() : minDate,\n        maxDate ? maxDate.getTime() : maxDate\n    ]);\n\n    function getSelected() {\n        if (value) {\n            if (selectRange === 'week') {\n                const dayWeekOfYear = getWeekOfYear(day);\n\n                if (isArray(value)) {\n                    return value.some(v => getWeekOfYear(v) === dayWeekOfYear);\n                }\n\n                return getWeekOfYear(value) === dayWeekOfYear;\n            }\n\n            if (selectRange && isArray(value)) {\n                const [minDate, maxDate] = value;\n\n                if (value.length === 1 && hoverDays.length) {\n                    const firstHover = hoverDays[0];\n                    const lastHover = hoverDays[hoverDays.length - 1];\n\n                    return isEnabled('day', day, {\n                        minDate: minDate < firstHover ? minDate : firstHover,\n                        maxDate: minDate > lastHover ? minDate : lastHover\n                    });\n                }\n\n                if (value.length === 2) {\n                    return isEnabled('day', day, {\n                        minDate,\n                        maxDate\n                    });\n                }\n            }\n        }\n\n        return dateEqual(value, day, showTime);\n    }\n\n    function getCurrent() {\n        const dayMonth = day.getMonth();\n\n        if (isArray(date)) {\n            return date.some(d => d.getMonth() === dayMonth);\n        }\n\n        if (date) {\n            return dayMonth === date.getMonth();\n        }\n\n        return false;\n    }\n\n    function onSelectDay() {\n        props.onSelectDay(day);\n    }\n\n    function onMouseEnter() {\n        props.onMouseEnter(day);\n    }\n\n    function onMouseLeave() {\n        props.onMouseLeave(day);\n    }\n\n    function getClassNames() {\n        const classes = ['value'];\n\n        if (selected) {\n            classes.push('selected');\n        }\n\n        if (today) {\n            classes.push('today');\n        }\n\n        if (hover) {\n            classes.push('hover');\n        }\n\n        return classes.join(' ');\n    }\n\n    return (\n        <StyledDay\n            className={getClassNames()}\n            selected={selected}\n            current={current}\n            disabled={!enabled}\n            onClick={onSelectDay}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n        >\n            {day.getDate()}\n        </StyledDay>\n    );\n}\n\ninterface WeekNumProps {\n    day: Date;\n    children: React.ReactNode;\n    onClick(day: Date): void;\n}\n\nexport function WeekNum(props: WeekNumProps) {\n    function onClick() {\n        props.onClick(props.day);\n    }\n\n    return <div onClick={onClick}>{props.children}</div>;\n}\n","import * as React from 'react';\nimport { withGesture, GestureState } from 'react-with-gesture';\nimport styled from 'styled-components';\n\nconst MobileMenuTableWrapper = styled.div`\n    display: flex;\n    width: 300%;\n    position: relative;\n    left: -100%;\n    transition: ${(props: { animate: boolean }) =>\n        props.animate ? 'transform 0.15s ease-out' : 'none'};\n`;\n\nexport type GestureDirection = 'next' | 'prev';\n\ninterface GestureWrapperProps extends GestureState {\n    children: React.ReactNode;\n    allowPrev: boolean;\n    allowNext: boolean;\n    onChangeMonth(direction: GestureDirection): void;\n}\n\n@(withGesture({ mouse: false }) as any)\nexport class GestureWrapper extends React.PureComponent<\n    {\n        allowPrev: boolean;\n        allowNext: boolean;\n        onChangeMonth(direction: GestureDirection): void;\n    },\n    { x?: string; cooldown?: boolean }\n> {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    public componentDidUpdate(prevProps: GestureWrapperProps) {\n        const props = this.props as GestureWrapperProps;\n        const { allowNext, allowPrev, down } = props;\n\n        if (prevProps.down && !down) {\n            const [xDir] = props.direction;\n            let x = '';\n            let direction: GestureDirection | undefined;\n\n            if (xDir > 0) {\n                x = '33.3%';\n                direction = 'prev';\n            } else if (xDir < 0) {\n                x = '-33.3%';\n                direction = 'next';\n            }\n\n            if (x && direction) {\n                if (\n                    (direction === 'next' && !allowNext) ||\n                    (direction === 'prev' && !allowPrev)\n                ) {\n                    return;\n                }\n\n                this.setState({ x, cooldown: true }, () => {\n                    setTimeout(() => {\n                        this.setState({ x: undefined }, () => {\n                            this.props.onChangeMonth(direction!);\n                            this.setState({ cooldown: false });\n                        });\n                    }, 167);\n                });\n            }\n        }\n    }\n\n    public render() {\n        const props = this.props as GestureWrapperProps;\n        const { x, cooldown } = this.state;\n        let [deltaX] = props.delta;\n\n        if (!this.props.allowNext && deltaX < 0) {\n            deltaX = 0;\n        }\n\n        if (!this.props.allowPrev && deltaX > 0) {\n            deltaX = 0;\n        }\n\n        let translateX = x || `${props.down ? deltaX : 0}px`;\n\n        if (cooldown && props.cancel) {\n            props.cancel();\n        }\n\n        return (\n            <MobileMenuTableWrapper\n                animate={Boolean(x)}\n                style={{ transform: `translateX(${translateX})` }}\n            >\n                {props.children}\n            </MobileMenuTableWrapper>\n        );\n    }\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { ReactTimebombState, FormatType } from '../typings';\nimport { isArray } from '../utils';\nimport { ReactTimebombProps } from 'src';\nimport { NumberInput } from '../components/number-input';\n\nconst Container = styled.div`\n    padding: 0;\n    display: flex;\n    align-items: center;\n    margin: 0 auto;\n    width: 100%;\n    border-top: ${(props: { topDivider?: boolean }) =>\n        props.topDivider ? '1px solid #ccc' : 'none'};\n\n    &:not(:last-child) {\n        border-bottom: 1px solid #ccc;\n    }\n`;\n\nconst Divider = styled.span`\n    margin: 0 5px;\n    font-weight: bold;\n`;\n\ninterface MenuTimeProps {\n    date: ReactTimebombState['date'];\n    timeStep: ReactTimebombProps['timeStep'];\n    topDivider?: boolean;\n    onChange(date: Date, mode: FormatType): void;\n    onSubmit(date: Date, mode: FormatType): void;\n    onCancel(date: undefined, mode: FormatType): void;\n}\n\nexport function MenuTime(props: MenuTimeProps) {\n    const { date, timeStep, topDivider, onChange, onSubmit, onCancel } = props;\n\n    if (isArray(date) || !date) {\n        return null;\n    }\n\n    return (\n        <Container topDivider={topDivider} className=\"react-timebomb-time\">\n            <NumberInput\n                date={date}\n                step={1}\n                mode=\"hour\"\n                onChange={onChange}\n                onSubmit={onSubmit}\n                onCancel={onCancel}\n            />\n            <Divider className=\"divider\">:</Divider>\n            <NumberInput\n                date={date}\n                step={timeStep}\n                mode=\"minute\"\n                onChange={onChange}\n                onSubmit={onSubmit}\n                onCancel={onCancel}\n            />\n        </Container>\n    );\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { FormatType } from '../typings';\nimport { formatNumberRaw, keys } from '../utils';\n\nconst Steps = styled.div`\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 24px;\n    height: 100%;\n    border-width: 0 1px;\n    border-style: solid;\n    border-color: #ccc;\n    visibility: hidden;\n`;\n\nconst Step = styled.button`\n    margin: 0;\n    padding: 0;\n    line-height: 1;\n    border: none;\n    flex: 1;\n    font-size: 8px;\n    color: #ccc;\n    cursor: pointer;\n    -webkit-appearance: none;\n\n    &:focus {\n        outline: none;\n    }\n\n    &:hover {\n        background: #eee;\n        color: #000;\n    }\n`;\n\nconst InputContainer = styled.div`\n    position: relative;\n    flex: 1;\n    display: flex;\n\n    &:hover {\n        ${Steps} {\n            visibility: visible;\n        }\n    }\n\n    &:last-child {\n        ${Steps} {\n            border-right: none;\n        }\n    }\n`;\n\nconst Input = styled.input`\n    flex: 1;\n    padding: 0 25px 0 6px;\n    margin: 0;\n    width: 50%;\n    min-height: 32px;\n    text-align: center;\n    border: none;\n\n    // @see https://stackoverflow.com/a/4298216/1138860\n    &::-webkit-outer-spin-button,\n    &::-webkit-inner-spin-button {\n        /* display: none; <- Crashes Chrome on hover */\n        -webkit-appearance: none;\n        margin: 0; /* <-- Apparently some margin are still there even though it's hidden */\n    }\n\n    &:focus {\n        outline: none;\n    }\n\n    &:focus {\n        background: #eee;\n\n        + ${Steps} {\n            visibility: visible;\n        }\n    }\n`;\n\ninterface NumberInputProps {\n    date: Date;\n    mode: FormatType;\n    step?: number;\n    onChange(date: Date, mode: FormatType): void;\n    onSubmit(date: Date, mode: FormatType): void;\n    onCancel(date: undefined, mode: FormatType): void;\n}\n\nexport function NumberInput(props: NumberInputProps) {\n    const { date, step, mode, onCancel, onSubmit } = props;\n    const ref = React.useRef<HTMLInputElement | null>(null);\n    const [focused, setFocused] = React.useState(false);\n    const [value, setValue] = React.useState<number | string | undefined>(\n        getDateValue(date)\n    );\n\n    React.useEffect(() => {\n        setValue(getDateValue(props.date));\n    }, [date.getTime()]);\n\n    React.useEffect(() => {\n        if (value && focused) {\n            const newDate = setDateValue(value);\n\n            props.onChange(newDate, mode);\n        }\n    }, [value]);\n\n    function setDateValue(value: string | number) {\n        const newDate = new Date(date);\n        const newValue = parseInt((value as any) || '0', 10);\n\n        switch (mode) {\n            case 'hour':\n                newDate.setHours(newValue);\n                break;\n            case 'minute':\n                newDate.setMinutes(newValue);\n                break;\n        }\n\n        return newDate;\n    }\n\n    function getDateValue(date: Date) {\n        switch (mode) {\n            case 'hour':\n                return date.getHours();\n            case 'minute':\n                return date.getMinutes();\n        }\n\n        return 0;\n    }\n\n    function getRenderedValue() {\n        if (focused) {\n            return value;\n        } else {\n            return isFinite(value as any) ? formatNumberRaw(value as any) : '';\n        }\n    }\n\n    function onFocusIn() {\n        setFocused(true);\n    }\n\n    function onFocusOut() {\n        if (document.querySelector(':focus') !== ref.current) {\n            setFocused(false);\n        }\n    }\n\n    function onChange(e: React.SyntheticEvent<HTMLInputElement>) {\n        const { value } = e.currentTarget;\n\n        if (value.length > 2) {\n            e.preventDefault();\n            return;\n        }\n\n        if (value === '') {\n            setValue(value);\n        } else if (date) {\n            const newDate = setDateValue(value);\n\n            setValue(getDateValue(newDate));\n        }\n    }\n\n    function onStepUp() {\n        if (date && value !== undefined && typeof value === 'number') {\n            const newDate = setDateValue(value + step!);\n\n            setValue(getDateValue(newDate));\n        }\n    }\n\n    function onStepDown() {\n        if (date && value !== undefined && typeof value === 'number') {\n            const newDate = setDateValue(value - step!);\n\n            setValue(getDateValue(newDate));\n        }\n    }\n\n    function onKeyUp(e: React.KeyboardEvent<HTMLInputElement>) {\n        switch (e.keyCode) {\n            case keys.ENTER:\n                onSubmit(date, mode);\n                break;\n            case keys.ESC:\n                onCancel(undefined, mode);\n                break;\n        }\n    }\n\n    return (\n        <InputContainer\n            className={`react-timebomb-number-input ${mode}`}\n            onMouseEnter={onFocusIn}\n            onMouseLeave={onFocusOut}\n        >\n            <Input\n                data-react-timebomb-selectable\n                type=\"number\"\n                ref={ref}\n                step={step}\n                value={getRenderedValue()}\n                onChange={onChange}\n                onFocus={onFocusIn}\n                onBlur={onFocusOut}\n                onKeyUp={onKeyUp}\n            />\n            <Steps>\n                <Step\n                    data-react-timebomb-selectable\n                    tabIndex={-1}\n                    onClick={onStepUp}\n                >\n                    ▲\n                </Step>\n                <Step\n                    data-react-timebomb-selectable\n                    tabIndex={-1}\n                    onClick={onStepDown}\n                >\n                    ▼\n                </Step>\n            </Steps>\n        </InputContainer>\n    );\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { ReactTimebombProps, ReactTimebombState } from '../typings';\nimport { Button } from '../components/button';\nimport {\n    subtractDays,\n    startOfMonth,\n    endOfMonth,\n    addDays,\n    getMonthNames,\n    isArray\n} from '../utils';\n\ninterface MenuTitleProps {\n    date: ReactTimebombState['date'];\n    minDate: ReactTimebombProps['minDate'];\n    maxDate: ReactTimebombProps['maxDate'];\n    mobile: ReactTimebombProps['mobile'];\n    mode: ReactTimebombState['mode'];\n    selectedRange: ReactTimebombState['selectedRange'];\n    showTime: ReactTimebombState['showTime'];\n    showDate: ReactTimebombState['showDate'];\n    onPrevMonth(): void;\n    onNextMonth(): void;\n    onReset(): void;\n    onMonth(): void;\n    onYear(): void;\n}\n\nconst Container = styled.div`\n    display: ${(props: { show: boolean }) => (props.show ? 'flex' : 'none')};\n    align-items: center;\n    width: 100%;\n    padding: 10px;\n    justify-content: space-between;\n    box-sizing: border-box;\n    white-space: nowrap;\n`;\n\nexport function MenuTitle(props: MenuTitleProps) {\n    const {\n        mode,\n        minDate,\n        maxDate,\n        mobile,\n        showDate,\n        selectedRange,\n        onNextMonth,\n        onPrevMonth,\n        onMonth,\n        onReset,\n        onYear\n    } = props;\n    const [monthNames] = React.useState(getMonthNames());\n    const show =\n        (mode === 'day' ||\n            mode === 'hour' ||\n            mode === 'minute' ||\n            mode === 'second') &&\n        Boolean(showDate);\n    const date = getDate();\n\n    function prevDisabled(): boolean {\n        if (minDate && props.date) {\n            return subtractDays(startOfMonth(date), 1) < minDate;\n        }\n\n        return false;\n    }\n\n    function nextDisabled(): boolean {\n        if (maxDate && props.date) {\n            const lastDate = isArray(props.date)\n                ? props.date[props.date.length - 1]\n                : props.date;\n\n            return addDays(endOfMonth(lastDate), 1) > maxDate;\n        }\n\n        return false;\n    }\n\n    function getDate() {\n        return (isArray(props.date) ? props.date[selectedRange] : props.date)!;\n    }\n\n    return (\n        <Container className=\"react-timebomb-menu-title\" show={show}>\n            <div>\n                <Button\n                    className=\"react-timebomb-button-month\"\n                    tabIndex={-1}\n                    mobile={mobile}\n                    onClick={onMonth}\n                >\n                    <b>{monthNames[date.getMonth()]}</b>\n                </Button>\n                <Button\n                    className=\"react-timebomb-button-year\"\n                    tabIndex={-1}\n                    mobile={mobile}\n                    onClick={onYear}\n                >\n                    {date.getFullYear()}\n                </Button>\n            </div>\n            <div>\n                <Button\n                    className=\"react-timebomb-button-month-prev\"\n                    tabIndex={-1}\n                    disabled={prevDisabled()}\n                    mobile={mobile}\n                    onClick={onPrevMonth}\n                >\n                    ◀\n                </Button>\n                <Button\n                    className=\"react-timebomb-button-month-reset\"\n                    tabIndex={-1}\n                    mobile={mobile}\n                    onClick={onReset}\n                >\n                    ○\n                </Button>\n                <Button\n                    className=\"react-timebomb-button-month-next\"\n                    tabIndex={-1}\n                    disabled={nextDisabled()}\n                    mobile={mobile}\n                    onClick={onNextMonth}\n                >\n                    ▶\n                </Button>\n            </div>\n        </Container>\n    );\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport {\n    keys,\n    formatNumber,\n    splitDate,\n    joinDates,\n    stringFromCharCode,\n    validateFormatGroup,\n    getAttribute,\n    getFormatType,\n    manipulateDate,\n    isEnabled,\n    selectElement,\n    fillZero,\n    clearSelection,\n    formatSplitExpr,\n    formatIsActualNumber,\n    replaceSpaceWithNbsp\n} from '../utils';\nimport {\n    ReactTimebombProps,\n    ReactTimebombState,\n    IconProps,\n    ClearComponentProps\n} from '../typings';\nimport { ArrowButton, SmallButton } from '../components/button';\n\nexport interface ValueProps {\n    open?: boolean;\n    value?: Date;\n    format: string;\n    placeholder: ReactTimebombProps['placeholder'];\n    minDate: ReactTimebombProps['minDate'];\n    maxDate: ReactTimebombProps['maxDate'];\n    showDate: ReactTimebombState['showDate'];\n    showTime: ReactTimebombState['showTime'];\n    mode: ReactTimebombState['mode'];\n    allowValidation: ReactTimebombState['allowValidation'];\n    arrowButtonComponent: ReactTimebombProps['arrowButtonComponent'];\n    clearComponent: ReactTimebombProps['clearComponent'];\n    arrowButtonId: ReactTimebombProps['arrowButtonId'];\n    iconComponent: ReactTimebombProps['iconComponent'];\n    disabled: ReactTimebombProps['disabled'];\n    mobile: ReactTimebombProps['mobile'];\n    timeStep: ReactTimebombProps['timeStep'];\n    onToggle(): void;\n    onChangeValueText(valueText?: string, commit?: boolean): void;\n    onChangeFormatGroup(formatGroup: string): void;\n    onAllSelect(): void;\n    onSubmit(): void;\n    onClear(): void;\n}\n\ninterface ValueState {\n    allSelected?: boolean;\n}\n\ninterface InputProps {\n    disabled?: boolean;\n}\n\nexport const Flex = styled.div`\n    display: flex;\n    align-items: center;\n    white-space: nowrap;\n    position: relative;\n    line-height: 1;\n`;\n\nexport const Container = styled(Flex)`\n    justify-content: space-between;\n    align-items: center;\n    padding: 5px 10px;\n    border: 1px solid #ccc;\n    cursor: ${(props: { disabled?: boolean }) =>\n        props.disabled ? 'not-allowed' : 'pointer'};\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n`;\n\nconst Input = styled.span`\n    padding: 2px 0 2px 0;\n    min-width: 1px;\n    cursor: ${(props: InputProps) => (props.disabled ? 'not-allowed' : 'text')};\n    pointer-events: ${(props: InputProps) =>\n        props.disabled ? 'none' : 'auto'};\n\n    &:focus {\n        outline: none;\n    }\n\n    &:last-of-type {\n        padding: 2px 10px 2px 0;\n    }\n\n    &:not(:last-of-type):after {\n        content: attr(data-separator);\n        min-width: 4px;\n        display: inline-block;\n    }\n\n    &:empty:before {\n        content: attr(data-placeholder);\n        color: #aaa;\n    }\n\n    &:empty:not(:last-of-type):after {\n        color: #aaa;\n    }\n\n    &:not([contenteditable='true']) {\n        user-select: none;\n    }\n`;\n\nexport const ClearButton = styled(SmallButton)`\n    font-size: 18px;\n`;\n\nconst ClearButtonX = styled.span`\n    position: relative;\n    left: -1px;\n    top: -2px;\n`;\n\nexport const Placeholder = styled.span`\n    color: #aaa;\n    user-select: none;\n`;\n\nexport const Icon = styled.span`\n    margin-right: 5px;\n    user-select: none;\n\n    &:after {\n        content: '${(props: { icon: string }) => props.icon}';\n    }\n`;\n\nconst DefaultIcon = (props: IconProps) => {\n    function getIconClass(): 'time' | 'calendar' {\n        const { showTime, showDate } = props;\n\n        if (!showDate && showTime) {\n            return 'time';\n        }\n\n        return 'calendar';\n    }\n\n    function getIcon() {\n        switch (getIconClass()) {\n            case 'calendar':\n                return '📅';\n            case 'time':\n                return '⏱';\n        }\n    }\n\n    return (\n        <Icon\n            icon={getIcon()}\n            className={`react-timebomb-icon ${getIconClass()}`}\n        />\n    );\n};\n\nexport const DefaultClearComponent = (props: ClearComponentProps) => (\n    <ClearButton\n        className=\"react-timebomb-clearer\"\n        tabIndex={-1}\n        disabled={props.disabled}\n        onClick={props.onClick}\n    >\n        <ClearButtonX>×</ClearButtonX>\n    </ClearButton>\n);\n\nconst META_KEYS = [keys.BACKSPACE, keys.DELETE, keys.TAB];\n\nconst FORBIDDEN_KEYS = [\n    keys.SHIFT,\n    keys.ARROW_LEFT,\n    keys.ARROW_RIGHT,\n    keys.ARROW_UP,\n    keys.ARROW_DOWN,\n    keys.TAB\n];\n\nexport class Value extends React.PureComponent<ValueProps, ValueState> {\n    private inputs: HTMLSpanElement[] = [];\n\n    private get formatGroups(): string[] {\n        return this.props.format.split('').reduce(\n            (memo, char) => {\n                const prevChar = memo[memo.length - 1];\n\n                if (\n                    (prevChar && char === prevChar.substr(0, 1)) ||\n                    (formatSplitExpr.test(prevChar) &&\n                        formatSplitExpr.test(char))\n                ) {\n                    memo[memo.length - 1] += char;\n                } else {\n                    memo = [...memo, char];\n                }\n\n                return memo;\n            },\n            [] as string[]\n        );\n    }\n\n    private get focused(): HTMLElement | null {\n        return document.querySelector(':focus');\n    }\n\n    constructor(props: ValueProps) {\n        super(props);\n\n        this.state = {};\n\n        this.onSearchRef = this.onSearchRef.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onKeyUp = this.onKeyUp.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.onDblClick = this.onDblClick.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onClear = this.onClear.bind(this);\n        this.onToggle = this.onToggle.bind(this);\n    }\n\n    public componentDidUpdate(prevProps: ValueProps): void {\n        setTimeout(() => {\n            const { open, value, format, mode, allowValidation } = this.props;\n            const hasFocus = this.inputs.some(inp => inp === this.focused);\n            const allowTextSelection =\n                mode === 'day' || mode === 'month' || mode === 'year';\n\n            if (!hasFocus) {\n                if (open) {\n                    if (prevProps.value !== value && value) {\n                        const parts = splitDate(value, format);\n                        const input = this.inputs[0];\n\n                        this.inputs.forEach(\n                            (input, i) => (input.innerText = parts[i])\n                        );\n\n                        if (input && allowTextSelection) {\n                            input.focus();\n                        }\n                    }\n\n                    if (allowTextSelection) {\n                        if (!prevProps.open || value !== prevProps.value) {\n                            const [input] = this.inputs;\n\n                            if (input) {\n                                selectElement(input);\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (\n                open &&\n                prevProps.mode !== mode &&\n                !this.state.allSelected &&\n                allowTextSelection\n            ) {\n                const input = this.inputs.find(el => {\n                    const format = getAttribute(el, 'data-group');\n                    const type = getFormatType(format);\n\n                    return type === mode;\n                });\n\n                selectElement(input);\n            }\n\n            if (!open && value) {\n                const parts = splitDate(value, format);\n\n                this.inputs.forEach((input, i) => (input.innerText = parts[i]));\n            }\n\n            if (open && prevProps.value && !value && !allowValidation) {\n                this.inputs.forEach(input => (input.innerText = ''));\n            }\n\n            if (!open) {\n                this.setState({ allSelected: false });\n            }\n        }, 16);\n    }\n\n    public componentDidMount() {\n        if (this.props.value) {\n            this.forceUpdate();\n        }\n    }\n\n    public render(): React.ReactNode {\n        const {\n            placeholder,\n            value,\n            showDate,\n            showTime,\n            disabled,\n            arrowButtonId,\n            iconComponent,\n            open\n        } = this.props;\n        const ArrowButtonComp = this.props.arrowButtonComponent || ArrowButton;\n        const ClearComponent =\n            this.props.clearComponent || DefaultClearComponent;\n        const showPlaceholder = placeholder && !open;\n        const showClearer = value && !disabled;\n        const timeOnly = showTime && !showDate;\n        const IconComponent =\n            iconComponent !== undefined ? iconComponent : DefaultIcon;\n\n        return (\n            <Container\n                data-role=\"value\"\n                className=\"react-slct-value react-timebomb-value\"\n                disabled={disabled}\n                onClick={this.onToggle}\n            >\n                <Flex>\n                    {IconComponent && (\n                        <IconComponent\n                            showDate={showDate}\n                            showTime={showTime}\n                        />\n                    )}\n                    <Flex>\n                        {this.renderValue()}\n                        {showPlaceholder && (\n                            <Placeholder className=\"react-timebomb-placeholder\">\n                                {placeholder}\n                            </Placeholder>\n                        )}\n                    </Flex>\n                </Flex>\n                <Flex>\n                    {showClearer && (\n                        <ClearComponent\n                            disabled={disabled}\n                            onClick={this.onClear}\n                        />\n                    )}\n                    {!timeOnly && (\n                        <ArrowButtonComp\n                            id={arrowButtonId}\n                            disabled={disabled}\n                            open={open}\n                        />\n                    )}\n                </Flex>\n            </Container>\n        );\n    }\n\n    private renderValue(): React.ReactNode {\n        const { open, disabled, mobile, value } = this.props;\n        const contentEditable = !disabled && !mobile;\n\n        if (!open && !value) {\n            return null;\n        }\n\n        const formatGroups = this.formatGroups;\n\n        return (\n            <Flex>\n                {formatGroups.map((group, i) => {\n                    if (group.split('').some(g => formatSplitExpr.test(g))) {\n                        return null;\n                    } else {\n                        const separator = formatGroups[i + 1];\n\n                        return (\n                            <Input\n                                data-react-timebomb-selectable\n                                contentEditable={contentEditable}\n                                disabled={disabled}\n                                data-placeholder={group}\n                                data-separator={replaceSpaceWithNbsp(separator)}\n                                key={group}\n                                data-group={group}\n                                ref={this.onSearchRef}\n                                onKeyDown={this.onKeyDown}\n                                onKeyUp={this.onKeyUp}\n                                onFocus={this.onFocus}\n                                onBlur={this.onBlur}\n                                onClick={this.onClick}\n                                onDoubleClick={this.onDblClick}\n                                onChange={this.onChange}\n                            />\n                        );\n                    }\n                })}\n            </Flex>\n        );\n    }\n\n    private onSearchRef(el: HTMLSpanElement | null): void {\n        if (el) {\n            this.inputs.push(el);\n        } else {\n            this.inputs = [];\n        }\n    }\n\n    private onKeyDown(e: React.KeyboardEvent<HTMLSpanElement>): void {\n        const {\n            onChangeValueText,\n            format,\n            value,\n            allowValidation,\n            timeStep\n        } = this.props;\n        const input = e.currentTarget;\n        const { innerText, nextSibling, previousSibling } = input;\n        const formatGroup = getAttribute(input, 'data-group');\n        const numericFormat = formatIsActualNumber(formatGroup);\n        const sel = getSelection();\n        const hasSelection = sel\n            ? Boolean(sel.focusOffset - sel.anchorOffset)\n            : false;\n        let numericValue = parseInt(innerText, 10);\n\n        switch (e.keyCode) {\n            case keys.ENTER:\n            case keys.ESC:\n            case keys.BACKSPACE:\n            case keys.DOT:\n            case keys.COMMA:\n                e.preventDefault();\n                return;\n            case keys.ARROW_RIGHT:\n                e.preventDefault();\n\n                if (nextSibling instanceof HTMLSpanElement) {\n                    nextSibling.focus();\n                } else {\n                    selectElement(input);\n                }\n                return;\n            case keys.ARROW_LEFT:\n                e.preventDefault();\n\n                if (previousSibling instanceof HTMLSpanElement) {\n                    previousSibling.focus();\n                } else {\n                    selectElement(input);\n                }\n                return;\n            case keys.ARROW_UP:\n            case keys.ARROW_DOWN:\n                e.preventDefault();\n\n                if (!numericFormat) {\n                    return;\n                }\n\n                const isArrowUp = e.keyCode === keys.ARROW_UP;\n\n                if (isNaN(numericValue)) {\n                    numericValue = 0;\n                }\n\n                if (isFinite(numericValue)) {\n                    const formatType = getFormatType(formatGroup);\n\n                    if (!allowValidation) {\n                        const add = formatType === 'minute' ? timeStep || 1 : 1;\n                        const nextValue =\n                            numericValue + (isArrowUp ? add : -add);\n                        const valid = validateFormatGroup(\n                            nextValue,\n                            formatGroup\n                        );\n\n                        if (valid) {\n                            input.innerText =\n                                typeof valid === 'string'\n                                    ? valid\n                                    : formatNumber(nextValue);\n                        }\n                    } else {\n                        if (value && formatType) {\n                            const direction = isArrowUp ? 'add' : 'subtract';\n\n                            const newDate = manipulateDate(\n                                value,\n                                formatType,\n                                direction,\n                                timeStep\n                            );\n                            const enabled = isEnabled(\n                                'day',\n                                newDate,\n                                this.props\n                            );\n\n                            if (enabled) {\n                                const dateParts = splitDate(newDate, format);\n\n                                this.inputs.map(\n                                    (inp, i) => (inp.innerText = dateParts[i])\n                                );\n                            }\n                        }\n                    }\n\n                    selectElement(input);\n                    onChangeValueText(joinDates(this.inputs, format));\n                }\n                return;\n        }\n\n        const char = stringFromCharCode(e.keyCode);\n        const groupValue = innerText && !hasSelection ? innerText + char : char;\n\n        if (META_KEYS.includes(e.keyCode) || e.metaKey || e.ctrlKey) {\n            return;\n        }\n\n        if (!numericFormat) {\n            e.preventDefault();\n            return;\n        }\n\n        const valid = validateFormatGroup(groupValue, formatGroup);\n\n        if (!valid) {\n            e.preventDefault();\n        } else if (typeof valid === 'string') {\n            e.preventDefault();\n\n            input.innerText = valid;\n        }\n\n        if (\n            this.state.allSelected &&\n            e.keyCode !== keys.BACKSPACE &&\n            e.keyCode !== keys.DELETE\n        ) {\n            const [firstInput] = this.inputs;\n            let validatedChar = validateFormatGroup(char, formatGroup);\n\n            if (validatedChar && validatedChar === true) {\n                validatedChar = char;\n            }\n\n            if (validatedChar) {\n                e.preventDefault();\n\n                this.inputs.forEach((el, i) => i !== 0 && (el.innerText = ''));\n\n                if (validatedChar.length === 2) {\n                    selectElement(firstInput);\n                } else {\n                    clearSelection();\n\n                    firstInput.innerText = validatedChar;\n                    firstInput.focus();\n\n                    selectElement(firstInput, [1, 1]);\n                }\n            }\n        }\n\n        // validate group\n        if (!hasSelection && innerText.length >= formatGroup.length) {\n            e.preventDefault();\n        }\n    }\n\n    private onKeyUp(e: React.KeyboardEvent<HTMLSpanElement>): void {\n        const { onChangeValueText, format, onSubmit, onToggle } = this.props;\n        const input = e.currentTarget;\n        const { innerText, nextSibling, previousSibling } = input;\n\n        if (e.keyCode === keys.ENTER) {\n            e.preventDefault();\n\n            if (this.focused) {\n                this.focused.blur();\n            }\n            onSubmit();\n            return;\n        }\n\n        if (e.keyCode === keys.ESC) {\n            onToggle();\n            return;\n        }\n\n        if (this.state.allSelected) {\n            if (e.keyCode === keys.BACKSPACE || e.keyCode === keys.DELETE) {\n                // delete all\n                this.inputs.forEach(el => (el.innerText = ''));\n\n                selectElement(this.inputs[0]);\n            }\n\n            this.setState({ allSelected: false });\n        }\n\n        // remove text / focus prev\n        else if (e.keyCode === keys.BACKSPACE) {\n            if (innerText) {\n                input.innerText = '';\n            } else if (previousSibling instanceof HTMLSpanElement) {\n                selectElement(previousSibling);\n            }\n        }\n\n        // focus next\n        else if (\n            (innerText.length >= getAttribute(input, 'data-group').length &&\n                !FORBIDDEN_KEYS.includes(e.keyCode)) ||\n            e.keyCode === keys.DOT ||\n            e.keyCode === keys.COMMA\n        ) {\n            if (!nextSibling) {\n                selectElement(input);\n            } else if (nextSibling instanceof HTMLSpanElement) {\n                selectElement(nextSibling);\n            }\n\n            onChangeValueText(joinDates(this.inputs, format));\n        }\n    }\n\n    private onClick(e: React.SyntheticEvent<HTMLSpanElement>): void {\n        selectElement(e.currentTarget);\n    }\n\n    private onDblClick(e: React.SyntheticEvent<HTMLSpanElement>) {\n        const input = e.currentTarget;\n\n        if (input.parentNode && this.inputs.some(el => Boolean(el.innerText))) {\n            selectElement(this.inputs[0]);\n            selectElement(input.parentNode as HTMLElement);\n            this.setState({ allSelected: true }, this.props.onAllSelect);\n        }\n    }\n\n    private onFocus = (() => {\n        let timeout = 0;\n\n        return (e: React.SyntheticEvent<HTMLSpanElement>) => {\n            clearTimeout(timeout);\n\n            const input = e.currentTarget;\n\n            selectElement(input);\n\n            timeout = setTimeout(() => {\n                if (!this.state.allSelected) {\n                    const formatGroup = getAttribute(input, 'data-group');\n\n                    this.props.onChangeFormatGroup(formatGroup);\n                }\n            }, 16);\n        };\n    })();\n\n    private onBlur(e: React.SyntheticEvent<HTMLSpanElement>): void {\n        if (!this.state.allSelected) {\n            const input = e.target as HTMLSpanElement;\n            const value = input.innerText;\n            const dataGroup = getAttribute(input, 'data-group');\n            const formatType = getFormatType(dataGroup);\n\n            if (formatType) {\n                const filledValue = fillZero(value, formatType);\n\n                if (filledValue) {\n                    input.innerText = filledValue;\n                }\n            }\n        }\n\n        // check if timebomb is still focused\n        setTimeout(() => {\n            const { focused } = this;\n\n            if (\n                this.props.open &&\n                focused &&\n                !getAttribute(focused, 'data-react-timebomb-selectable')\n            ) {\n                this.props.onToggle();\n            }\n        }, 0);\n    }\n\n    private onChange(e: React.KeyboardEvent<HTMLSpanElement>): void {\n        const { format, onChangeValueText } = this.props;\n        const input = e.currentTarget;\n        const { innerText, nextSibling } = input;\n\n        onChangeValueText(joinDates(this.inputs, format));\n\n        if (innerText.length >= getAttribute(input, 'data-group').length) {\n            if (nextSibling instanceof HTMLSpanElement) {\n                nextSibling.focus();\n            }\n        }\n    }\n\n    private onClear(e: React.MouseEvent<HTMLButtonElement>): void {\n        e.stopPropagation();\n\n        this.props.onClear();\n    }\n\n    private onToggle(e: React.SyntheticEvent<HTMLSpanElement>): void {\n        const { open, disabled, onToggle } = this.props;\n\n        if (disabled) {\n            return;\n        }\n\n        if (!this.inputs.some(inp => inp === e.target) || !open) {\n            onToggle();\n        }\n    }\n}\n","import { ArrowButtonProps } from './components/button';\n\nexport type ReactTimebombDate = Date | undefined | Date[];\n\ntype ReactComponent<P = {}> =\n    | React.ComponentClass<P>\n    | React.StatelessComponent<P>;\n\nexport interface ReactTimebombProps {\n    className?: string;\n    value?: ReactTimebombDate;\n    format?: string;\n    placeholder?: string;\n    menuWidth?: number;\n    minDate?: Date;\n    maxDate?: Date;\n    selectRange?: 'week' | number | boolean;\n    showCalendarWeek?: boolean;\n    showConfirm?: boolean;\n    disabled?: boolean;\n    error?: any;\n    mobile?: boolean;\n    arrowButtonId?: string;\n    arrowButtonComponent?: ReactComponent<ArrowButtonProps>;\n    clearComponent?: ReactComponent<ClearComponentProps>;\n    iconComponent?: ReactComponent<IconProps> | null;\n    timeStep?: number;\n    onChange(...dates: (undefined | Date)[]): void;\n    onError?(\n        error: ReactTimebombError,\n        ...value: ReactTimebombState['valueText'][]\n    ): void;\n    onOpen?(): void;\n    onClose?(): void;\n}\n\nexport interface ReactTimebombState {\n    minDate?: Date;\n    maxDate?: Date;\n    valueText?: string | string[];\n    allowValidation?: boolean;\n    date: ReactTimebombDate;\n    mode?: FormatType;\n    showDate?: boolean;\n    showTime?: boolean;\n    selectedRange: number;\n    menuHeight: number | 'none';\n}\n\nexport type ReactTimebombError = 'outOfRange' | 'invalidDate';\nexport type FormatType =\n    | 'day'\n    | 'month'\n    | 'year'\n    | 'hour'\n    | 'minute'\n    | 'second';\n\nexport interface IconProps {\n    showDate?: boolean;\n    showTime?: boolean;\n}\n\nexport interface ClearComponentProps {\n    disabled?: boolean;\n    onClick(e: React.MouseEvent<HTMLButtonElement>): void;\n}\n\nexport { ClearComponentProps as ReactTimebombClearComponentProps };\nexport { ArrowButtonProps as ReactTimebombArrowButtonProps };\n","import * as React from 'react';\nimport {\n    Container,\n    Flex,\n    Icon,\n    ValueProps,\n    Placeholder,\n    DefaultClearComponent\n} from './value';\nimport { dateFormat, keys } from '../utils';\nimport { ArrowButton } from '../components/button';\n\ninterface MultiValueProps {\n    value: undefined | Date[];\n    placeholder: ValueProps['placeholder'];\n    open: ValueProps['open'];\n    arrowButtonComponent: ValueProps['arrowButtonComponent'];\n    arrowButtonId: ValueProps['arrowButtonId'];\n    clearComponent: ValueProps['clearComponent'];\n    iconComponent: ValueProps['iconComponent'];\n    disabled: ValueProps['disabled'];\n    onToggle(): void;\n    onClear(): void;\n}\n\nconst DefaultIcon = () => <Icon className=\"react-timebomb-icon\" icon=\"📅\" />;\n\nfunction Value(props: MultiValueProps) {\n    const { value } = props;\n\n    if (!value) {\n        return null;\n    }\n\n    return <>{value.map(d => dateFormat(d, 'DD.MM.YYYY')).join(' – ')}</>;\n}\n\nexport function ValueMulti(props: MultiValueProps) {\n    const {\n        placeholder,\n        value,\n        open,\n        disabled,\n        arrowButtonId,\n        iconComponent,\n        onToggle\n    } = props;\n    const ArrowButtonComp = props.arrowButtonComponent || ArrowButton;\n    const ClearComponent = props.clearComponent || DefaultClearComponent;\n    const showPlaceholder = placeholder && !open;\n    const IconComponent =\n        iconComponent !== undefined ? iconComponent : DefaultIcon;\n\n    React.useEffect(() => {\n        document.body.addEventListener('keyup', onKeyUp);\n\n        return () => {\n            document.body.removeEventListener('keyup', onKeyUp);\n        };\n    }, []);\n\n    function onClear(e: React.MouseEvent<HTMLButtonElement>): void {\n        e.stopPropagation();\n\n        props.onClear();\n    }\n\n    function onKeyUp(e: KeyboardEvent) {\n        switch (e.keyCode) {\n            case keys.ESC:\n                if (open) {\n                    onToggle();\n                }\n                break;\n        }\n    }\n\n    return (\n        <Container\n            data-role=\"value\"\n            className=\"react-slct-value react-timebomb-value\"\n            disabled={disabled}\n            onClick={disabled ? undefined : onToggle}\n        >\n            <Flex>\n                {IconComponent && <IconComponent />}\n                <Flex>\n                    <Value {...props} />\n                    {showPlaceholder && (\n                        <Placeholder className=\"react-timebomb-placeholder\">\n                            {placeholder}\n                        </Placeholder>\n                    )}\n                </Flex>\n            </Flex>\n            <Flex>\n                {value && (\n                    <ClearComponent disabled={disabled} onClick={onClear} />\n                )}\n                <ArrowButtonComp\n                    id={arrowButtonId}\n                    disabled={disabled}\n                    open={open}\n                />\n            </Flex>\n        </Container>\n    );\n}\n"]}