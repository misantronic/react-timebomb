{"version":3,"sources":["src/index.tsx","src/menu/index.tsx","src/utils.ts","src/components/button.tsx","src/menu/table.tsx","src/menu/day.tsx","src/menu/time.tsx","src/components/number-input.tsx","src/menu/title.tsx","src/value/value.tsx","src/value/value-multi.tsx"],"names":["React","$fsx","r","styled_components_1","react_slct_1","menu_1","title_1","value_1","utils_1","typings_1","exports","ReactTimebombProps","ReactTimebombState","ReactTimebombError","ReactTimebombDate","ReactTimebombArrowButtonProps","value_multi_1","Container","default","div","MenuWrapper","props","menuHeight","mobile","css","BlindInput","input","ReactTimebomb","Component","[object Object]","super","this","emitChange","timeout","date","commit","clearTimeout","setTimeout","value","showConfirm","onChange","dateEqual","isArray","setState","allowValidation","Boolean","minDate","maxDate","selectRange","isBefore","Error","state","initialState","onChangeValueText","bind","onValueSubmit","onSelectDay","onModeDay","onModeYear","onModeMonth","onSelectMonth","onChangeMonth","onSelectYear","onReset","onNextMonth","onPrevMonth","onSelectTime","onSubmitOrCancelTime","onClose","onClear","onChangeFormatGroup","onMenuRef","onMobileMenuContainerClick","format","startOfDay","undefined","endOfDay","showTime","isTimeFormat","showDate","isDateFormat","MenuContainer","MobileMenuContainer","className","classNames","push","error","disabled","join","defaultDateValue","Date","isAfter","mode","getFormatType","valueText","dateFormat","selectedRange","prevProps","prevState","valueTextDidUpdate","validDate","validateDate","every","d","isEnabled","emitError","isUndefined","placeholder","showCalendarWeek","selectWeek","timeStep","onOpen","menuWidth","Math","max","MENU_WIDTH","MENU_HEIGHT","createElement","Select","open","onToggle","onRef","showMenu","getMobileMenuContainer","ref","renderValue","onClick","MenuTitle","onMonth","onYear","Menu","onSubmitTime","onSubmit","type","onFocus","iconComponent","arrowButtonComponent","arrowButtonId","multiValue","ValueMulti","Value","onAllSelect","clearSelection","onError","length","day","valueDate","startOfWeek","endOfWeek","setDate","getHours","getMinutes","dateArr","getSelectedRange","sort","sortDates","currentDate","setMonth","getMonth","time","newDate","map","e","target","HTMLDivElement","classList","contains","el","getBoundingClientRect","height","defaultProps","button_1","table_1","mobile_1","time_1","MonthAndYearContainer","MonthsContainer","MonthContainer","YearContainer","Confirm","MobileMenuTable","MenuTable","getDate","MenuMonths","monthNames","useState","getMonthNames","month","year","getFullYear","getAttribute","currentTarget","str","i","enabled","selected","Button","key","tabIndex","data-date","toISOString","MenuYear","yearContainer","setYearContainer","scrollToYear","querySelector","scrollIntoView","scrollBy","top","useEffect","getDateConfig","newYear","setFullYear","setSeconds","getSeconds","setMinutes","setHours","currentYear","Array","fill","_","filter","obj","reverse","minYear","array","now","getFullYears","fullYear","dateStr","MenuConfirm","isValid","v","MonthWrapper","GestureWrapper","allowNext","addDays","endOfMonth","allowPrev","subtractDays","startOfMonth","direction","addMonths","subtractMonths","Object","assign","MenuTime","topDivider","onCancel","moment_1","momentImport","moment","test","formatSplitExpr","dates","instance","toDate","formatIsActualNumber","validateFormatGroup","formatType","isFinite","int","parseInt","char","String","strLen","startsWith","validateFormatType","stringFromCharCode","parts","strParts","part","HTMLElement","innerText","val","dateA","dBi","dateB","getTime","replaceSpaceWithNbsp","replace","keys","ARROW_UP","ARROW_RIGHT","ARROW_DOWN","ARROW_LEFT","ENTER","TAB","ESC","BACKSPACE","DELETE","SPACE","SHIFT","DOT","COMMA","StyledButton","button","data-react-timebomb-selectable","data-role","SmallButton","ArrowButton","id","day_1","Table","table","hoverDay","setHoverDay","weekdayNames","getWeekdayNames","sun","mon","tue","wed","thu","fri","sat","c","monthMatrix","useMemo","dateMonth","dateYear","weeks","base","week","weekStart","getCacheKey","onDayMouseEnter","onDayMouseLeave","cellSpacing","cellPadding","weekNum","getWeekOfYear","WeekNum","Day","onMouseEnter","onMouseLeave","Flex","StyledDay","current","today","setEnabled","setToday","dayMonth","some","dayWeekOfYear","isToday","children","number_input_1","Divider","span","NumberInput","step","Steps","Step","InputContainer","Input","useRef","focused","setFocused","setValue","getDateValue","setDateValue","newValue","onFocusIn","onFocusOut","document","formatNumberRaw","preventDefault","onBlur","onKeyUp","keyCode","show","lastDate","nextDisabled","ClearButton","ClearButtonX","Placeholder","Icon","icon","DefaultIcon","getIconClass","getIcon","META_KEYS","FORBIDDEN_KEYS","PureComponent","inputs","selectElement","allSelected","formatGroup","onSearchRef","onKeyDown","onDblClick","formatGroups","split","reduce","memo","prevChar","substr","hasFocus","inp","allowTextSelection","splitDate","forEach","focus","find","forceUpdate","ArrowButtonComp","showPlaceholder","showClearer","timeOnly","IconComponent","contentEditable","group","g","separator","data-placeholder","data-separator","data-group","onDoubleClick","nextSibling","previousSibling","numericFormat","sel","getSelection","hasSelection","focusOffset","baseOffset","numericValue","HTMLSpanElement","isArrowUp","isNaN","manipulateDate","dateParts","add","nextValue","valid","formatNumber","joinDates","groupValue","includes","metaKey","ctrlKey","firstInput","validatedChar","blur","parentNode","dataGroup","filledValue","fillZero","stopPropagation","Fragment","body","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Select } from 'react-slct';\nimport { MenuContainerProps } from 'react-slct/dist/typings';\nimport { Menu } from './menu';\nimport { MenuTitle } from './menu/title';\nimport { Value } from './value/value';\nimport {\n    isUndefined,\n    startOfDay,\n    isEnabled,\n    dateFormat,\n    validateDate,\n    setDate,\n    clearSelection,\n    endOfDay,\n    isBefore,\n    isAfter,\n    dateEqual,\n    startOfWeek,\n    endOfWeek,\n    sortDates,\n    isDateFormat,\n    isTimeFormat,\n    isArray,\n    getFormatType\n} from './utils';\nimport {\n    ReactTimebombProps,\n    ReactTimebombState,\n    ReactTimebombError,\n    ReactTimebombDate,\n    ReactTimebombArrowButtonProps,\n    FormatType\n} from './typings';\nimport { ValueMulti } from './value/value-multi';\n\nexport {\n    ReactTimebombProps,\n    ReactTimebombState,\n    ReactTimebombError,\n    ReactTimebombDate,\n    ReactTimebombArrowButtonProps\n};\n\ninterface MenuWrapperProps {\n    menuHeight: number;\n    mobile?: boolean;\n}\n\nconst Container = styled.div`\n    width: 100%;\n    height: 100%;\n    position: relative;\n    background: #fff;\n`;\n\nconst MenuWrapper = styled.div`\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    border: 1px solid #ccc;\n    box-sizing: border-box;\n    padding: 0;\n    background: white;\n    z-index: 1;\n    height: 100%;\n    max-height: ${(props: MenuWrapperProps) => props.menuHeight}px;\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 13px;\n\n    * {\n        box-sizing: border-box;\n    }\n\n    ${(props: MenuWrapperProps) =>\n        props.mobile\n            ? css`\n                  position: fixed;\n                  left: 50% !important;\n                  top: 50% !important;\n                  max-width: 96%;\n                  width: 360px !important;\n                  height: 320px !important;\n                  margin-left: -180px;\n                  margin-top: -160px;\n                  max-height: 100%;\n                  font-size: 16px;\n                  box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.1);\n\n                  @media (max-width: 360px) {\n                      width: 100% !important;\n                      left: 0 !important;\n                      margin-left: 0;\n                      max-width: 100%;\n                  }\n              `\n            : ''}\n`;\n\nconst BlindInput = styled.input`\n    position: absolute;\n    left: 0;\n    top: 0;\n    opacity: 0;\n    pointer-events: none;\n`;\n\nexport class ReactTimebomb extends React.Component<\n    ReactTimebombProps,\n    ReactTimebombState\n> {\n    public static MENU_WIDTH = 320;\n    public static MENU_HEIGHT = 320;\n\n    private onToggle?: () => void;\n    private MobileMenuContainer?: React.ComponentClass<MenuContainerProps, any>;\n\n    /** @internal */\n    public static getDerivedStateFromProps(\n        props: ReactTimebombProps\n    ): Partial<ReactTimebombState> | null {\n        const format = props.format!;\n        const { minDate, maxDate } = props;\n\n        return {\n            minDate: minDate ? startOfDay(minDate) : undefined,\n            maxDate: maxDate ? endOfDay(maxDate) : undefined,\n            showTime: isTimeFormat(format),\n            showDate: isDateFormat(format)\n        };\n    }\n\n    /** @internal */\n    public static defaultProps: Partial<ReactTimebombProps> = {\n        format: 'YYYY-MM-DD'\n    };\n\n    private getMobileMenuContainer(\n        MenuContainer: React.ComponentClass<MenuContainerProps, any>\n    ) {\n        if (!this.MobileMenuContainer) {\n            this.MobileMenuContainer = styled(MenuContainer)`\n                position: fixed;\n                left: 0 !important;\n                top: 0 !important;\n                right: 0 !important;\n                bottom: 0 !important;\n                width: 100% !important;\n                height: 100% !important;\n                background: rgba(0, 0, 0, 0.12);\n                transform: none;\n            ` as any;\n        }\n\n        return this.MobileMenuContainer!;\n    }\n\n    private get className() {\n        const classNames = ['react-timebomb'];\n\n        if (this.props.className) {\n            classNames.push(this.props.className);\n        }\n\n        if (this.props.error) {\n            classNames.push('error');\n        }\n\n        if (this.props.disabled) {\n            classNames.push('disabled');\n        }\n\n        return classNames.join(' ');\n    }\n\n    private get defaultDateValue() {\n        const { value, minDate, maxDate } = this.props;\n\n        if (value) {\n            return value;\n        }\n\n        let date = new Date();\n\n        if (maxDate && isBefore(maxDate, date)) {\n            date = maxDate;\n        } else if (minDate && isAfter(minDate, date)) {\n            date = minDate;\n        }\n\n        return startOfDay(date);\n    }\n\n    private get initialState(): ReactTimebombState {\n        return {\n            allowValidation: false,\n            mode: getFormatType(this.props.format!),\n            valueText: this.props.value\n                ? dateFormat(this.props.value, this.props.format!)\n                : undefined,\n            date: this.defaultDateValue,\n            selectedRange: 0,\n            menuHeight: 0\n        };\n    }\n\n    constructor(props: ReactTimebombProps) {\n        super(props);\n\n        const { minDate, maxDate, selectRange, showConfirm } = props;\n\n        if (minDate && maxDate && isBefore(maxDate, minDate)) {\n            throw new Error('minDate must appear before maxDate');\n        }\n\n        if (selectRange && !showConfirm) {\n            throw new Error(\n                'when using `selectRange` please also set `showConfirm`'\n            );\n        }\n\n        this.state = this.initialState;\n\n        this.onChangeValueText = this.onChangeValueText.bind(this);\n        this.onValueSubmit = this.onValueSubmit.bind(this);\n        this.onSelectDay = this.onSelectDay.bind(this);\n        this.onModeDay = this.onModeDay.bind(this);\n        this.onModeYear = this.onModeYear.bind(this);\n        this.onModeMonth = this.onModeMonth.bind(this);\n        this.onSelectMonth = this.onSelectMonth.bind(this);\n        this.onChangeMonth = this.onChangeMonth.bind(this);\n        this.onSelectYear = this.onSelectYear.bind(this);\n        this.onReset = this.onReset.bind(this);\n        this.onNextMonth = this.onNextMonth.bind(this);\n        this.onPrevMonth = this.onPrevMonth.bind(this);\n        this.onSelectTime = this.onSelectTime.bind(this);\n        this.onSubmitOrCancelTime = this.onSubmitOrCancelTime.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.onClear = this.onClear.bind(this);\n        this.onChangeFormatGroup = this.onChangeFormatGroup.bind(this);\n        this.onMenuRef = this.onMenuRef.bind(this);\n        this.onMobileMenuContainerClick = this.onMobileMenuContainerClick.bind(\n            this\n        );\n    }\n\n    public componentDidUpdate(\n        prevProps: ReactTimebombProps,\n        prevState: ReactTimebombState\n    ): void {\n        const { valueText } = this.state;\n        const { value, format } = this.props;\n\n        if (prevProps.format !== format || prevProps.value !== value) {\n            this.setState({\n                valueText: value ? dateFormat(value, format!) : undefined\n            });\n        }\n\n        if (prevState.valueText !== valueText) {\n            this.valueTextDidUpdate(false);\n        }\n    }\n\n    private valueTextDidUpdate(commit: boolean): void {\n        const { valueText, allowValidation } = this.state;\n        const { format } = this.props;\n        const validDate = validateDate(valueText, format!);\n\n        if (validDate) {\n            this.setState({ allowValidation: true }, () => {\n                const enabled = isArray(validDate)\n                    ? validDate.every(d => isEnabled('day', d, this.props))\n                    : isEnabled('day', validDate, this.props);\n\n                if (enabled) {\n                    this.setState({ date: validDate }, () =>\n                        this.emitChange(validDate, commit)\n                    );\n                } else {\n                    this.emitError('outOfRange', valueText!);\n                }\n            });\n        } else if (valueText) {\n            this.emitError('invalidDate', valueText);\n        } else if (!isUndefined(valueText) && allowValidation) {\n            this.emitChange(undefined, commit);\n        }\n    }\n\n    public render(): React.ReactNode {\n        const {\n            placeholder,\n            showConfirm,\n            showCalendarWeek,\n            selectWeek,\n            selectRange,\n            format,\n            error,\n            disabled,\n            mobile,\n            timeStep,\n            onOpen\n        } = this.props;\n        const {\n            showDate,\n            showTime,\n            valueText,\n            mode,\n            selectedRange,\n            minDate,\n            maxDate\n        } = this.state;\n        const value = valueText\n            ? validateDate(valueText, format!)\n            : this.props.value;\n        const menuWidth = Math.max(\n            ReactTimebomb.MENU_WIDTH,\n            this.props.menuWidth || 0\n        );\n        const menuHeight = this.state.menuHeight || ReactTimebomb.MENU_HEIGHT;\n\n        return (\n            <Select<ReactTimebombDate>\n                value={value}\n                placeholder={placeholder}\n                error={error}\n                onOpen={onOpen}\n                onClose={this.onClose}\n            >\n                {({ placeholder, open, onToggle, onRef, MenuContainer }) => {\n                    const showMenu =\n                        open && (showDate || showTime) && !disabled;\n\n                    this.onToggle = onToggle;\n\n                    if (mobile) {\n                        MenuContainer = this.getMobileMenuContainer(\n                            MenuContainer\n                        );\n                    }\n\n                    return (\n                        <Container ref={onRef} className={this.className}>\n                            {this.renderValue(value, placeholder, open)}\n                            {showMenu ? (\n                                <MenuContainer\n                                    menuWidth={menuWidth}\n                                    menuHeight={menuHeight}\n                                    onClick={\n                                        mobile\n                                            ? this.onMobileMenuContainerClick\n                                            : undefined\n                                    }\n                                >\n                                    <MenuWrapper\n                                        className=\"react-timebomb-menu\"\n                                        menuHeight={menuHeight}\n                                        mobile={mobile}\n                                        ref={this.onMenuRef}\n                                    >\n                                        <MenuTitle\n                                            mode={mode}\n                                            mobile={mobile}\n                                            date={this.state.date}\n                                            minDate={minDate}\n                                            maxDate={maxDate}\n                                            selectedRange={selectedRange}\n                                            showTime={showTime}\n                                            showDate={showDate}\n                                            onMonth={this.onModeMonth}\n                                            onYear={this.onModeYear}\n                                            onNextMonth={this.onNextMonth}\n                                            onPrevMonth={this.onPrevMonth}\n                                            onReset={this.onReset}\n                                        />\n                                        <Menu\n                                            showTime={showTime}\n                                            showDate={showDate}\n                                            showConfirm={showConfirm}\n                                            showCalendarWeek={showCalendarWeek}\n                                            selectWeek={selectWeek}\n                                            selectRange={selectRange}\n                                            timeStep={timeStep}\n                                            date={this.state.date}\n                                            value={value}\n                                            valueText={valueText}\n                                            format={format!}\n                                            mode={mode}\n                                            mobile={mobile}\n                                            minDate={minDate}\n                                            maxDate={maxDate}\n                                            selectedRange={selectedRange}\n                                            onSelectDay={this.onSelectDay}\n                                            onSelectMonth={this.onSelectMonth}\n                                            onChangeMonth={this.onChangeMonth}\n                                            onSelectYear={this.onSelectYear}\n                                            onSelectTime={this.onSelectTime}\n                                            onSubmitTime={\n                                                this.onSubmitOrCancelTime\n                                            }\n                                            onSubmit={this.onValueSubmit}\n                                        />\n                                    </MenuWrapper>\n                                </MenuContainer>\n                            ) : (\n                                <BlindInput type=\"text\" onFocus={onToggle} />\n                            )}\n                        </Container>\n                    );\n                }}\n            </Select>\n        );\n    }\n\n    private renderValue(\n        value: ReactTimebombDate,\n        placeholder?: string,\n        open?: boolean\n    ) {\n        placeholder = open ? undefined : placeholder;\n\n        const {\n            minDate,\n            maxDate,\n            disabled,\n            format,\n            selectRange,\n            mobile,\n            timeStep,\n            iconComponent,\n            arrowButtonComponent,\n            arrowButtonId\n        } = this.props;\n        const { showDate, showTime, allowValidation, mode } = this.state;\n\n        if (selectRange || isArray(value)) {\n            const multiValue = value\n                ? isArray(value)\n                    ? value\n                    : [value]\n                : undefined;\n\n            return (\n                <ValueMulti\n                    open={open}\n                    disabled={disabled}\n                    placeholder={placeholder}\n                    value={multiValue}\n                    iconComponent={iconComponent}\n                    arrowButtonId={arrowButtonId}\n                    arrowButtonComponent={arrowButtonComponent}\n                    onClear={this.onClear}\n                    onToggle={this.onToggle!}\n                />\n            );\n        }\n\n        return (\n            <Value\n                mode={mode}\n                disabled={disabled}\n                mobile={mobile}\n                placeholder={placeholder}\n                format={format!}\n                value={value}\n                minDate={minDate}\n                maxDate={maxDate}\n                allowValidation={allowValidation}\n                open={open}\n                showDate={showDate}\n                showTime={showTime}\n                timeStep={timeStep}\n                iconComponent={iconComponent}\n                arrowButtonId={arrowButtonId}\n                arrowButtonComponent={arrowButtonComponent}\n                onClear={this.onClear}\n                onChangeValueText={this.onChangeValueText}\n                onChangeFormatGroup={this.onChangeFormatGroup}\n                onToggle={this.onToggle!}\n                onSubmit={this.onValueSubmit}\n                onAllSelect={this.onModeDay}\n            />\n        );\n    }\n\n    private onClose() {\n        clearSelection();\n\n        setTimeout(() => {\n            clearSelection();\n\n            this.setState(this.initialState, () => {\n                if (this.props.onClose) {\n                    this.props.onClose();\n                }\n            });\n        }, 16);\n    }\n\n    private emitError(\n        error: ReactTimebombError,\n        value: ReactTimebombState['valueText']\n    ): void {\n        if (this.state.allowValidation) {\n            this.setState({ allowValidation: false }, () => {\n                if (this.props.onError) {\n                    this.props.onError(error, value);\n                }\n            });\n        }\n    }\n\n    private emitChange = (() => {\n        let timeout = 0;\n\n        return (date: ReactTimebombDate, commit: boolean) => {\n            clearTimeout(timeout);\n\n            timeout = setTimeout(() => {\n                const { value, showConfirm, onChange } = this.props;\n\n                if (!showConfirm) {\n                    commit = true;\n                }\n\n                if (dateEqual(value, date)) {\n                    return;\n                }\n\n                if (commit) {\n                    if (isArray(date)) {\n                        onChange(...date);\n                    } else {\n                        onChange(date);\n                    }\n                }\n\n                this.setState({ allowValidation: Boolean(date) });\n            }, 0);\n        };\n    })();\n\n    private getSelectedRange(date: ReactTimebombDate) {\n        if (isArray(date)) {\n            if (date.length === 2) {\n                if (date[0] > date[1]) {\n                    return 0;\n                } else {\n                    return 1;\n                }\n            } else if (date.length === 1) {\n                return 0;\n            }\n        } else {\n            return 0;\n        }\n\n        return this.state.selectedRange;\n    }\n\n    private onClear() {\n        this.setState({ valueText: undefined }, () => {\n            this.emitChange(undefined, true);\n        });\n    }\n\n    private onChangeValueText(valueText: string | undefined): void {\n        this.setState({ valueText });\n    }\n\n    private onChangeFormatGroup(format?: string) {\n        this.setState({ mode: format ? getFormatType(format) : undefined });\n    }\n\n    private onValueSubmit(): void {\n        if (this.onToggle) {\n            this.onToggle();\n        }\n        clearSelection();\n\n        this.valueTextDidUpdate(true);\n    }\n\n    private onSelectDay(day: Date): void {\n        const { value, format, selectWeek, selectRange } = this.props;\n\n        const valueDate =\n            value instanceof Date\n                ? value\n                : isArray(value)\n                ? value[0]\n                : undefined;\n\n        if (selectWeek) {\n            const date = [startOfWeek(day), endOfWeek(day)];\n            const valueText = dateFormat(date, format!);\n\n            this.setState({ date, valueText });\n            return;\n        }\n\n        const date = setDate(\n            day,\n            valueDate ? valueDate.getHours() : 0,\n            valueDate ? valueDate.getMinutes() : 0\n        );\n\n        if (selectRange) {\n            const dateArr =\n                isArray(this.state.valueText) &&\n                this.state.valueText.length === 1\n                    ? [\n                          validateDate(\n                              this.state.valueText[0],\n                              format!\n                          ) as Date,\n                          date\n                      ]\n                    : [date];\n\n            const selectedRange = this.getSelectedRange(dateArr);\n            const valueText = dateFormat(dateArr.sort(sortDates), format!);\n\n            this.setState({ date: dateArr, valueText, selectedRange });\n        } else {\n            const valueText = dateFormat(date, format!);\n\n            this.setState({ date, valueText });\n        }\n    }\n\n    private onModeDay() {\n        this.setState({ mode: 'day' });\n    }\n\n    private onModeYear() {\n        this.setState({ mode: 'year' });\n    }\n\n    private onModeMonth() {\n        this.setState({ mode: 'month' });\n    }\n\n    private onSelectMonth(date: Date) {\n        this.onSelectDay(date);\n        this.setState({ mode: 'day' });\n    }\n\n    private onChangeMonth(date: Date) {\n        this.setState({ date, mode: 'day' });\n    }\n\n    private onSelectYear(date: Date) {\n        this.onSelectDay(date);\n        this.setState({ mode: 'day' });\n    }\n\n    private onReset(): void {\n        this.setState({ date: this.defaultDateValue });\n    }\n\n    private onNextMonth(): void {\n        const currentDate = isArray(this.state.date)\n            ? this.state.date[this.state.selectedRange]\n            : this.state.date;\n\n        if (currentDate) {\n            const date = new Date(currentDate);\n\n            date.setMonth(date.getMonth() + 1);\n\n            this.setState({ date });\n        }\n    }\n\n    private onPrevMonth(): void {\n        const currentDate = isArray(this.state.date)\n            ? this.state.date[this.state.selectedRange]\n            : this.state.date;\n\n        if (currentDate) {\n            const date = new Date(currentDate);\n\n            date.setMonth(date.getMonth() - 1);\n\n            this.setState({ date });\n        }\n    }\n\n    private onSelectTime(time: Date, mode: FormatType, commit = false): void {\n        const format = this.props.format!;\n        const value = this.props.value || new Date();\n\n        const newDate = isArray(value)\n            ? value.map(d => setDate(d, time.getHours(), time.getMinutes()))\n            : setDate(value, time.getHours(), time.getMinutes());\n\n        const valueText = dateFormat(newDate, format);\n\n        this.setState({ mode, valueText }, () =>\n            this.emitChange(newDate, commit)\n        );\n    }\n\n    private onSubmitOrCancelTime(time: Date | undefined, mode: FormatType) {\n        if (time) {\n            this.onSelectTime(time, mode, true);\n        }\n\n        if (this.onToggle) {\n            this.onToggle();\n        }\n    }\n\n    private onMobileMenuContainerClick(e: React.MouseEvent<HTMLDivElement>) {\n        if (\n            e.target instanceof HTMLDivElement &&\n            e.target.classList.contains('react-slct-menu')\n        ) {\n            if (this.onToggle) {\n                this.onToggle();\n            }\n        }\n    }\n\n    private onMenuRef(el: HTMLDivElement | null) {\n        if (el) {\n            this.setState({ menuHeight: el.getBoundingClientRect().height });\n        } else {\n            this.setState({ menuHeight: 0 });\n        }\n    }\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { ReactTimebombState, ReactTimebombProps } from '../';\nimport {\n    isEnabled,\n    validateDate,\n    getMonthNames,\n    getAttribute,\n    isArray,\n    addMonths,\n    subtractMonths,\n    startOfMonth,\n    subtractDays,\n    addDays,\n    endOfMonth\n} from '../utils';\nimport { Button } from '../components/button';\nimport { ReactTimebombDate, FormatType } from '../typings';\nimport { MenuTable } from './table';\nimport { GestureWrapper, GestureDirection } from './mobile';\nimport { MenuTime } from './time';\n\nexport interface MenuProps {\n    showTime: ReactTimebombState['showTime'];\n    showDate: ReactTimebombState['showDate'];\n    showConfirm: ReactTimebombProps['showConfirm'];\n    showCalendarWeek: ReactTimebombProps['showCalendarWeek'];\n    selectWeek: ReactTimebombProps['selectWeek'];\n    selectRange: ReactTimebombProps['selectRange'];\n    value: ReactTimebombProps['value'];\n    valueText: ReactTimebombState['valueText'];\n    minDate: ReactTimebombProps['minDate'];\n    maxDate: ReactTimebombProps['maxDate'];\n    date: ReactTimebombState['date'];\n    mode: ReactTimebombState['mode'];\n    timeStep: ReactTimebombProps['timeStep'];\n    selectedRange: ReactTimebombState['selectedRange'];\n    mobile: ReactTimebombProps['mobile'];\n    format: string;\n    onSelectDay(date: Date): void;\n    onSelectYear(date: Date): void;\n    /** month was selected, value will change to `date` */\n    onSelectMonth(date: Date): void;\n    /** month was selected but value will not change to `date` */\n    onChangeMonth(date: Date): void;\n    onSelectTime(date: Date, mode: FormatType): void;\n    onSubmitTime(date: Date | undefined, mode: FormatType): void;\n    onSubmit(): void;\n}\n\nconst MonthAndYearContainer = styled.div`\n    display: flex;\n    height: ${(props: { mobile?: boolean }) =>\n        props.mobile ? '100%' : '220px'};\n`;\n\nconst MonthsContainer = styled.div`\n    display: flex;\n    flex: 1;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-self: flex-start;\n    align-items: flex-start;\n    padding: 10px;\n    box-sizing: border-box;\n    height: 100%;\n\n    button {\n        width: ${(props: { mobile?: boolean }) =>\n            props.mobile ? 'calc(33% - 6px)' : '33%'};\n        font-size: 16px;\n        font-weight: normal;\n        font-style: normal;\n        font-stretch: normal;\n        min-height: 25%;\n        border: none;\n        margin: 0;\n    }\n`;\n\nconst MonthContainer = styled.div`\n    flex: 1;\n    padding: 0;\n    height: ${(props: { mobile?: boolean }) => (props.mobile ? '100' : 'auto')};\n    overflow: hidden;\n`;\n\nconst YearContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n    border-left: solid 1px #e6e6e6;\n    padding: 10px;\n    flex: 0 0 90px;\n\n    button {\n        width: 100%;\n        font-size: 16px;\n        font-weight: normal;\n        font-style: normal;\n        font-stretch: normal;\n        border: none;\n        padding: 6px 0;\n        margin: 0 0 4px;\n        min-height: 46px;\n    }\n`;\n\nconst Confirm = styled.div`\n    width: 100%;\n    text-align: center;\n    padding: 10px 0;\n\n    button {\n        padding: 3px 28px;\n    }\n`;\n\nconst MobileMenuTable = styled(MenuTable)`\n    width: 33.3%;\n`;\n\nfunction getDate(\n    date: ReactTimebombDate,\n    selectedRange: ReactTimebombState['selectedRange']\n) {\n    return (isArray(date) ? date[selectedRange] : date)!;\n}\n\nfunction MenuMonths(props: MenuProps) {\n    const { value, mobile, selectedRange } = props;\n    const [monthNames] = React.useState(getMonthNames(true));\n    const valueDate = getDate(value, selectedRange);\n    const date = getDate(props.date, selectedRange);\n    const month = value && valueDate.getMonth();\n    const year = value && valueDate.getFullYear();\n\n    function onSelectMonth(e: React.MouseEvent<HTMLButtonElement>) {\n        const date = new Date(getAttribute(e.currentTarget, 'data-date'));\n\n        setTimeout(() => props.onSelectMonth(date), 0);\n    }\n\n    return (\n        <MonthsContainer mobile={mobile} className=\"months\">\n            {monthNames.map((str, i) => {\n                const newDate = new Date(date);\n\n                newDate.setMonth(i);\n\n                const enabled = isEnabled('month', newDate, props);\n                const selected =\n                    month === newDate.getMonth() &&\n                    year === newDate.getFullYear();\n\n                return (\n                    <Button\n                        key={str}\n                        tabIndex={-1}\n                        className={selected ? 'selected' : undefined}\n                        selected={selected}\n                        disabled={!enabled}\n                        mobile={props.mobile}\n                        data-date={newDate.toISOString()}\n                        onClick={onSelectMonth}\n                    >\n                        {str}\n                    </Button>\n                );\n            })}\n        </MonthsContainer>\n    );\n}\n\nfunction MenuYear(props: MenuProps) {\n    const { value, minDate, maxDate } = props;\n    const [\n        yearContainer,\n        setYearContainer\n    ] = React.useState<HTMLDivElement | null>(null);\n\n    React.useEffect(scrollToYear, [props.date]);\n\n    function scrollToYear() {\n        if (yearContainer) {\n            const selected = yearContainer.querySelector('.selected');\n\n            if (selected) {\n                selected.scrollIntoView();\n\n                if (yearContainer.scrollBy) {\n                    yearContainer.scrollBy({ top: -10 });\n                }\n            }\n        }\n    }\n\n    function getFullYears() {\n        const valueDate = getDate(value, props.selectedRange);\n        const year = getDate(props.date, props.selectedRange).getFullYear();\n\n        const getDateConfig = (date: Date, newYear: number) => {\n            date = new Date(date);\n            date.setFullYear(newYear);\n\n            const enabled = isEnabled('year', date, props);\n            const selected = year === newYear;\n\n            if (value) {\n                date.setSeconds(valueDate.getSeconds());\n                date.setMinutes(valueDate.getMinutes());\n                date.setHours(valueDate.getHours());\n                date.setDate(valueDate.getDate());\n                date.setMonth(valueDate.getMonth());\n            }\n\n            return { date, enabled, selected };\n        };\n\n        if (minDate && !maxDate) {\n            const currentYear = minDate.getFullYear();\n\n            return Array(120)\n                .fill(undefined)\n                .map((_, i) => getDateConfig(minDate, currentYear + i))\n                .filter(obj => obj.enabled);\n        } else if (!minDate && maxDate) {\n            const currentYear = maxDate.getFullYear();\n\n            return Array(120)\n                .fill(undefined)\n                .map((_, i) => getDateConfig(maxDate, currentYear - i))\n                .filter(obj => obj.enabled)\n                .reverse();\n        } else if (minDate && maxDate) {\n            const minYear = minDate.getFullYear();\n            const maxYear = maxDate.getFullYear();\n            const array: {\n                date: Date;\n                enabled: boolean;\n                selected: boolean;\n            }[] = [];\n\n            for (let i = maxYear; i >= minYear; i--) {\n                array.push(getDateConfig(maxDate, i));\n            }\n\n            return array.reverse();\n        } else {\n            const now = new Date();\n            const currentDate = valueDate > now ? valueDate : now;\n            const currentYear = currentDate.getFullYear();\n\n            return Array(120)\n                .fill(undefined)\n                .map((_, i) => {\n                    const date = new Date(currentDate);\n\n                    date.setFullYear(currentYear - i);\n\n                    const enabled = isEnabled('year', date, props);\n                    const selected = year === date.getFullYear();\n\n                    return { date, enabled, selected };\n                })\n                .filter(obj => obj.enabled)\n                .reverse();\n        }\n    }\n\n    function onSelectYear(e: React.MouseEvent<HTMLButtonElement>) {\n        const date = new Date(getAttribute(e.currentTarget, 'data-date'));\n\n        setTimeout(() => props.onSelectYear(date), 0);\n    }\n\n    function onYearContainer(el: HTMLDivElement | null) {\n        setYearContainer(el);\n        scrollToYear();\n    }\n\n    return (\n        <YearContainer ref={onYearContainer} className=\"years\">\n            {getFullYears()\n                .map(({ date, selected }) => {\n                    const fullYear = date.getFullYear();\n                    const dateStr = date.toISOString();\n\n                    return (\n                        <Button\n                            key={dateStr}\n                            tabIndex={-1}\n                            className={selected ? 'selected' : undefined}\n                            selected={selected}\n                            mobile={props.mobile}\n                            data-date={dateStr}\n                            onClick={onSelectYear}\n                        >\n                            {fullYear}\n                        </Button>\n                    );\n                })\n                .reverse()}\n        </YearContainer>\n    );\n}\n\nfunction MenuConfirm(props: MenuProps) {\n    const { valueText, format } = props;\n    const validDate = validateDate(valueText, format);\n    const isValid = validDate\n        ? isArray(validDate)\n            ? validDate.every(v => isEnabled('day', v, props))\n            : isEnabled('day', validDate, props)\n        : false;\n\n    return (\n        <Confirm>\n            <Button\n                tabIndex={-1}\n                disabled={!isValid}\n                mobile={props.mobile}\n                onClick={() => props.onSubmit()}\n            >\n                Ok\n            </Button>\n        </Confirm>\n    );\n}\n\nfunction MonthWrapper(props: MenuProps) {\n    const { minDate, maxDate, mobile } = props;\n\n    function allowPrev() {\n        let date = props.date;\n\n        if (!minDate) {\n            return true;\n        }\n\n        if (isArray(date)) {\n            date = date[0];\n        }\n\n        if (date) {\n            if (subtractDays(startOfMonth(date), 1) < minDate) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function allowNext() {\n        let date = props.date;\n\n        if (!maxDate) {\n            return true;\n        }\n\n        if (isArray(date)) {\n            date = date[0];\n        }\n\n        if (date) {\n            if (addDays(endOfMonth(date), 1) > maxDate) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function onChangeMonth(direction: GestureDirection) {\n        const { onChangeMonth } = props;\n        const date = getDate(props.date, props.selectedRange);\n\n        switch (direction) {\n            case 'next':\n                onChangeMonth(addMonths(date, 1));\n                break;\n            case 'prev':\n                onChangeMonth(subtractMonths(date, 1));\n                break;\n        }\n    }\n\n    if (mobile) {\n        return (\n            <GestureWrapper\n                allowNext={allowNext()}\n                allowPrev={allowPrev()}\n                onChangeMonth={onChangeMonth}\n            >\n                <MobileMenuTable\n                    date={subtractMonths(\n                        getDate(props.date, props.selectedRange),\n                        1\n                    )}\n                    minDate={props.minDate}\n                    maxDate={props.maxDate}\n                    mobile={props.mobile}\n                    selectRange={props.selectRange}\n                    selectedRange={props.selectedRange}\n                    selectWeek={props.selectWeek}\n                    showCalendarWeek={props.showCalendarWeek}\n                    showConfirm={props.showConfirm}\n                    showTime={props.showTime}\n                    value={subtractMonths(\n                        getDate(props.value, props.selectedRange),\n                        1\n                    )}\n                    onSubmit={props.onSubmit}\n                    onSelectDay={props.onSelectDay}\n                />\n                <MobileMenuTable\n                    date={props.date}\n                    minDate={props.minDate}\n                    maxDate={props.maxDate}\n                    mobile={props.mobile}\n                    selectRange={props.selectRange}\n                    selectedRange={props.selectedRange}\n                    selectWeek={props.selectWeek}\n                    showCalendarWeek={props.showCalendarWeek}\n                    showConfirm={props.showConfirm}\n                    showTime={props.showTime}\n                    value={props.value}\n                    onSubmit={props.onSubmit}\n                    onSelectDay={props.onSelectDay}\n                />\n                <MobileMenuTable\n                    date={addMonths(\n                        getDate(props.date, props.selectedRange),\n                        1\n                    )}\n                    minDate={props.minDate}\n                    maxDate={props.maxDate}\n                    mobile={props.mobile}\n                    selectRange={props.selectRange}\n                    selectedRange={props.selectedRange}\n                    selectWeek={props.selectWeek}\n                    showCalendarWeek={props.showCalendarWeek}\n                    showConfirm={props.showConfirm}\n                    showTime={props.showTime}\n                    value={addMonths(\n                        getDate(props.value, props.selectedRange),\n                        1\n                    )}\n                    onSubmit={props.onSubmit}\n                    onSelectDay={props.onSelectDay}\n                />\n            </GestureWrapper>\n        );\n    }\n\n    return (\n        <MenuTable\n            date={props.date}\n            minDate={props.minDate}\n            maxDate={props.maxDate}\n            mobile={props.mobile}\n            selectRange={props.selectRange}\n            selectedRange={props.selectedRange}\n            selectWeek={props.selectWeek}\n            showCalendarWeek={props.showCalendarWeek}\n            showConfirm={props.showConfirm}\n            showTime={props.showTime}\n            value={props.value}\n            onSubmit={props.onSubmit}\n            onSelectDay={props.onSelectDay}\n        />\n    );\n}\n\nexport function Menu(props: MenuProps) {\n    const { mode, mobile, showDate, showConfirm, showTime } = props;\n\n    if (showDate || showTime) {\n        switch (mode) {\n            case 'year':\n            case 'month':\n                return (\n                    <MonthAndYearContainer mobile={mobile}>\n                        <MenuMonths {...props} />\n                        <MenuYear {...props} />\n                    </MonthAndYearContainer>\n                );\n            case 'day':\n            case 'hour':\n            case 'minute':\n            case 'second':\n                return (\n                    <MonthContainer mobile={mobile}>\n                        {showDate && <MonthWrapper {...props} />}\n                        {showTime && (\n                            <MenuTime\n                                date={props.date}\n                                timeStep={props.timeStep}\n                                topDivider={props.showDate}\n                                onChange={props.onSelectTime}\n                                onSubmit={props.onSubmitTime}\n                                onCancel={props.onSubmitTime}\n                            />\n                        )}\n                        {showConfirm && <MenuConfirm {...props} />}\n                    </MonthContainer>\n                );\n        }\n    }\n\n    return null;\n}\n","// @ts-ignore\nimport momentDefaultImport from 'moment';\nimport * as momentImport from 'moment';\nimport { ReactTimebombDate, FormatType } from './typings';\n\nconst moment: typeof momentImport = momentDefaultImport || momentImport;\n\nexport const formatSplitExpr = /[.|:|\\-|\\\\|_|\\s]/;\n\nexport function dateFormat(date: Date, format: string): string;\nexport function dateFormat(date: Date[], format: string): string[];\nexport function dateFormat(\n    date: Date | Date[],\n    format: string\n): string | string[];\nexport function dateFormat(\n    date: Date | Date[],\n    format: string\n): string | string[] {\n    if (isArray(date)) {\n        return date.map(date => moment(date).format(format));\n    } else {\n        return moment(date).format(format);\n    }\n}\n\nexport function validateDate(\n    date: string | string[] | undefined,\n    format: string\n): ReactTimebombDate {\n    if (isArray(date)) {\n        const dates = date\n            .map(date => {\n                const instance = moment(date, format, true);\n\n                return instance.isValid() ? instance.toDate() : undefined;\n            })\n            .filter(d => Boolean(d)) as Date[];\n\n        return dates.length === 0 ? undefined : dates;\n    } else {\n        const instance = moment(date, format, true);\n\n        return instance.isValid() ? instance.toDate() : undefined;\n    }\n}\n\nexport function getFormatType(format: string): FormatType | undefined {\n    if (/^D/.test(format)) {\n        return 'day';\n    }\n\n    if (/^M/.test(format)) {\n        return 'month';\n    }\n\n    if (/^Y/.test(format)) {\n        return 'year';\n    }\n\n    if (/^H/.test(format)) {\n        return 'hour';\n    }\n\n    if (/^m/.test(format)) {\n        return 'minute';\n    }\n\n    if (/^s/.test(format)) {\n        return 'second';\n    }\n\n    return undefined;\n}\n\nexport function formatIsActualNumber(format: string) {\n    // day / year\n    if (/D|Y|H|m|s/.test(format)) {\n        return true;\n    }\n\n    // month\n    if (format === 'M' || format === 'MM') {\n        return true;\n    }\n\n    return false;\n}\n\n/** @return returns a string with transformed value, true for valid input or false for invalid input */\nexport function validateFormatGroup(\n    input: string | number,\n    format: string\n): boolean | string {\n    const formatType = getFormatType(format);\n\n    return validateFormatType(input, formatType);\n}\n\n/** @return returns a string with transformed value, true for valid input or false for invalid input */\nexport function validateFormatType(\n    input: string | number,\n    formatType?: FormatType\n) {\n    if (isFinite(input as any)) {\n        const int = typeof input === 'string' ? parseInt(input, 10) : input;\n        const char = String(input);\n        const strLen = char.length;\n\n        switch (formatType) {\n            case 'day':\n                if (strLen === 1) {\n                    if (int >= 0 && int <= 3) {\n                        return true;\n                    } else {\n                        return `0${input}`;\n                    }\n                }\n\n                if (strLen === 2 && int >= 1 && int <= 31) {\n                    return true;\n                }\n                break;\n            case 'month':\n                if (strLen === 1) {\n                    if (int === 0 || int === 1) {\n                        return true;\n                    } else {\n                        return `0${input}`;\n                    }\n                }\n\n                if (strLen === 2 && int >= 0 && int <= 12) {\n                    return true;\n                }\n                break;\n            case 'year':\n                if (strLen === 1 && (int === 1 || int === 2)) {\n                    return true;\n                }\n\n                if (\n                    strLen >= 2 &&\n                    (char.startsWith('19') || char.startsWith('20'))\n                ) {\n                    return true;\n                }\n                break;\n            case 'hour':\n                if (strLen === 1) {\n                    if (int >= 0 && int <= 2) {\n                        return true;\n                    } else {\n                        return `0${input}`;\n                    }\n                }\n\n                if (strLen >= 2 && int >= 0 && int <= 24) {\n                    return true;\n                }\n                break;\n            case 'minute':\n            case 'second':\n                if (strLen === 1) {\n                    if (int >= 0 && int <= 5) {\n                        return true;\n                    } else {\n                        return `0${input}`;\n                    }\n                }\n\n                if (strLen >= 2 && int >= 0 && int <= 59) {\n                    return true;\n                }\n                break;\n        }\n    }\n\n    return false;\n}\n\nconst ALLOWED_CHARS = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n\nexport function stringFromCharCode(keyCode: number): string {\n    const charCode = keyCode - 48 * Math.floor(keyCode / 48);\n    const char = String.fromCharCode(96 <= keyCode ? charCode : keyCode);\n\n    if (ALLOWED_CHARS.includes(char)) {\n        return char;\n    }\n\n    return '';\n}\n\nexport function formatNumber(number: number): string {\n    if (number <= 1) {\n        return '01';\n    }\n\n    if (number <= 9) {\n        return `0${number}`;\n    }\n\n    return String(number);\n}\n\nexport function formatNumberRaw(number: number): string {\n    if (number <= 9) {\n        return `0${number || 0}`;\n    }\n\n    return String(number);\n}\n\nexport function splitDate(date: Date, format: string): string[] {\n    const formattedDate = dateFormat(date, format);\n\n    return formattedDate\n        .split(formatSplitExpr)\n        .filter(group => group && formatSplitExpr.test(group) === false);\n}\n\nexport function joinDates(\n    parts: (string | HTMLElement)[],\n    format: string\n): string {\n    const strParts = parts\n        .map(part => (part instanceof HTMLElement ? part.innerText : part))\n        .filter(val => val);\n    const splittedFormat = format.split(formatSplitExpr);\n\n    if (strParts.length !== splittedFormat.length) {\n        return '';\n    }\n\n    const date = strParts.join(' ');\n    const spaceFormat = splittedFormat.join(' ');\n    const momentDate = moment(date, spaceFormat);\n    const parsingFlags = momentDate.parsingFlags();\n\n    if (parsingFlags.overflow === 2) {\n        return moment(\n            // @ts-ignore\n            new Date(...parsingFlags.parsedDateParts)\n        ).format(format);\n    }\n\n    return momentDate.format(format);\n}\n\nexport function clearSelection(): void {\n    const sel = getSelection();\n\n    if (sel.empty) {\n        // Chrome\n        sel.empty();\n    } else if (sel.removeAllRanges) {\n        // Firefox\n        sel.removeAllRanges();\n    }\n}\n\nexport function selectElement(\n    el: HTMLElement | undefined,\n    caret?: number[]\n): void {\n    if (el) {\n        const range = document.createRange();\n        const sel = getSelection();\n\n        if (caret === undefined) {\n            range.selectNodeContents(el);\n        } else {\n            const [start, end] = caret;\n\n            range.setStart(el, start);\n            range.setEnd(el, end);\n        }\n\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n}\n\nexport function getWeekOfYear(date: Date): number {\n    return moment(date).isoWeek();\n}\n\nexport function startOfWeek(date: Date): Date {\n    return moment(date)\n        .startOf('isoWeek')\n        .toDate();\n}\n\nexport function endOfWeek(date: Date): Date {\n    return moment(date)\n        .endOf('isoWeek')\n        .toDate();\n}\n\nexport function startOfDay(date: Date): Date {\n    const newDate = new Date(date);\n\n    newDate.setHours(0, 0, 0, 0);\n\n    return newDate;\n}\n\nexport function endOfDay(date: Date): Date {\n    const newDate = new Date(date);\n\n    newDate.setHours(23, 59, 59, 999);\n\n    return newDate;\n}\n\nexport function addDays(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'days')\n        .toDate();\n}\n\nexport function addMonths(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'months')\n        .toDate();\n}\n\nexport function addYears(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'years')\n        .toDate();\n}\n\nexport function addHours(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'hours')\n        .toDate();\n}\n\nexport function addMinutes(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'minutes')\n        .toDate();\n}\n\nexport function addSeconds(date: Date, num: number): Date {\n    return moment(date)\n        .add(num, 'seconds')\n        .toDate();\n}\n\nexport function subtractSeconds(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'seconds')\n        .toDate();\n}\n\nexport function subtractMinutes(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'minutes')\n        .toDate();\n}\n\nexport function subtractHours(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'hours')\n        .toDate();\n}\n\nexport function subtractDays(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'days')\n        .toDate();\n}\n\nexport function subtractMonths(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'months')\n        .toDate();\n}\n\nexport function subtractYears(date: Date, num: number): Date {\n    return moment(date)\n        .subtract(num, 'years')\n        .toDate();\n}\n\nexport function manipulateDate(\n    date: Date,\n    formatType: FormatType,\n    direction: 'add' | 'subtract',\n    timeStep?: number\n): Date {\n    switch (formatType) {\n        case 'day':\n            if (direction === 'add') return addDays(date, 1);\n            if (direction === 'subtract') return subtractDays(date, 1);\n            break;\n        case 'month':\n            if (direction === 'add') return addMonths(date, 1);\n            if (direction === 'subtract') return subtractMonths(date, 1);\n            break;\n        case 'year':\n            if (direction === 'add') return addYears(date, 1);\n            if (direction === 'subtract') return subtractYears(date, 1);\n            break;\n        case 'hour':\n            if (direction === 'add') return addHours(date, 1);\n            if (direction === 'subtract') return subtractHours(date, 1);\n            break;\n        case 'minute':\n            if (direction === 'add') return addMinutes(date, timeStep || 1);\n            if (direction === 'subtract')\n                return subtractMinutes(date, timeStep || 1);\n            break;\n        case 'second':\n            if (direction === 'add') return addSeconds(date, timeStep || 1);\n            if (direction === 'subtract')\n                return subtractSeconds(date, timeStep || 1);\n            break;\n    }\n\n    return new Date();\n}\n\nexport function startOfMonth(date: Date): Date {\n    const newDate = new Date(date);\n\n    newDate.setDate(1);\n    newDate.setHours(0, 0, 0, 0);\n\n    return newDate;\n}\n\nexport function endOfMonth(date: Date): Date {\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n}\n\nexport function isUndefined(val): val is undefined {\n    return val === null || val === undefined;\n}\n\nexport function setDate(date: Date, hour: number, min?: number): Date {\n    const newDate = new Date(date);\n\n    newDate.setHours(hour, min);\n\n    return newDate;\n}\n\nexport function isToday(date: Date): boolean {\n    return moment(date).isSame(new Date(), 'day');\n}\n\nexport function isBefore(date: Date, inp: Date) {\n    return moment(date).isBefore(inp, 'day');\n}\n\nexport function isAfter(date: Date, inp: Date) {\n    return moment(date).isAfter(inp, 'day');\n}\n\nexport function isBetween(\n    date: Date,\n    cmpDateA?: Date,\n    cmpDateB?: Date,\n    context: momentImport.unitOfTime.StartOf = 'day'\n) {\n    return moment(date).isBetween(cmpDateA, cmpDateB, context, '[]');\n}\n\nexport function dateEqual(\n    dateA?: ReactTimebombDate,\n    dateB?: ReactTimebombDate,\n    considerTime = false\n) {\n    if (!dateA || !dateB) {\n        return false;\n    }\n\n    if (considerTime) {\n        if (isArray(dateA)) {\n            dateA = dateA.map(startOfDay);\n        } else {\n            dateA = startOfDay(dateA);\n        }\n\n        if (isArray(dateB)) {\n            dateB = dateB.map(startOfDay);\n        } else {\n            dateB = startOfDay(dateB);\n        }\n    }\n\n    if (isArray(dateA) && isArray(dateB)) {\n        return dateA.every((date, i) => {\n            const dBi = dateB![i];\n\n            if (date && dBi) {\n                return date.getTime() === dBi.getTime();\n            }\n\n            return false;\n        });\n    } else if (isArray(dateA) && dateB instanceof Date) {\n        return dateA.some(d => d.getTime() === (dateB as Date).getTime());\n    } else if (isArray(dateB) && dateA instanceof Date) {\n        return dateB.some(d => d.getTime() === (dateA as Date).getTime());\n    } else if (!isArray(dateA) && !isArray(dateB)) {\n        return dateA.getTime() === dateB.getTime();\n    }\n\n    return false;\n}\n\nexport function getMonthNames(short?: boolean): string[] {\n    if (short) {\n        return moment.monthsShort();\n    }\n\n    return moment.months();\n}\n\nexport function getWeekdayNames() {\n    return moment.weekdaysShort();\n}\n\nexport function isEnabled(\n    context: momentImport.unitOfTime.StartOf,\n    date: Date,\n    { minDate, maxDate }: { minDate?: Date; maxDate?: Date }\n): boolean {\n    if (!minDate && !maxDate) {\n        return true;\n    }\n\n    if (minDate && !maxDate) {\n        return moment(date).isSameOrAfter(minDate, context);\n    }\n\n    if (!minDate && maxDate) {\n        return moment(date).isSameOrBefore(maxDate, context);\n    }\n\n    return isBetween(date, minDate, maxDate, context);\n}\n\nexport function getAttribute(input: Element, attr: string): string {\n    return input.getAttribute(attr)!;\n}\n\nexport function isDateFormat(format: string) {\n    return Boolean(/D|M|Y/.test(format));\n}\n\nexport function isTimeFormat(format: string) {\n    return Boolean(/H|h|m|k|a|S|s/.test(format));\n}\n\nexport function sortDates(a: Date, b: Date) {\n    return a.getTime() - b.getTime();\n}\n\nexport function isArray(val: any): val is any[] {\n    return Array.isArray(val);\n}\n\nexport function fillZero(value: string | number, formatType: FormatType) {\n    value = String(value);\n\n    switch (formatType) {\n        case 'day':\n            if (value === '1' || value === '2' || value === '3') {\n                return `0${value}`;\n            }\n            break;\n        case 'month':\n            if (value === '1') {\n                return `0${value}`;\n            }\n            break;\n    }\n\n    return undefined;\n}\n\nexport function replaceSpaceWithNbsp(str?: string) {\n    if (!str) {\n        return str;\n    }\n\n    return str.replace(' ', ' ');\n}\n\nexport const keys = {\n    ARROW_UP: 38,\n    ARROW_RIGHT: 39,\n    ARROW_DOWN: 40,\n    ARROW_LEFT: 37,\n    ENTER: 13,\n    TAB: 9,\n    ESC: 27,\n    BACKSPACE: 8,\n    DELETE: 46,\n    SPACE: 32,\n    SHIFT: 16,\n    DOT: 190,\n    COMMA: 188\n};\n","import * as React from 'react';\nimport styled, { css } from 'styled-components';\n\nexport interface ButtonProps {\n    selected?: boolean;\n    mobile?: boolean;\n}\n\nconst StyledButton = styled.button`\n    margin-right: 5px;\n    border: 1px solid #ccc;\n    border-radius: 3px;\n    padding: 3px 6px;\n    height: 21px;\n    box-sizing: border-box;\n    background: ${(props: ButtonProps) => (props.selected ? '#ccc' : '#fff')};\n\n    ${(props: ButtonProps) =>\n        props.mobile\n            ? css`\n                  font-size: 16px;\n                  margin-right: 6px;\n                  padding: 6px 12px;\n                  height: auto;\n                  min-height: 21px;\n              `\n            : ''}\n\n    &:focus {\n        outline: none;\n    }\n\n    &:disabled {\n        cursor: not-allowed;\n    }\n\n    &:not(:disabled) {\n        cursor: pointer;\n    }\n\n    &:not(:disabled):hover {\n        background-color: ${(props: ButtonProps) =>\n            props.selected ? '#ccc' : '#efefef'};\n    }\n\n    &:last-child {\n        margin-right: 0;\n    }\n`;\n\nexport const Button = (props: ButtonProps & React.ButtonHTMLAttributes<{}>) => (\n    <StyledButton\n        data-react-timebomb-selectable\n        data-role=\"button\"\n        type=\"button\"\n        {...props}\n    />\n);\n\nexport const SmallButton = styled(Button)`\n    font-size: 13px;\n    color: #ccc;\n    cursor: pointer;\n    border: none;\n    line-height: 1;\n\n    &:hover:not(:disabled) {\n        color: #333;\n    }\n\n    &:focus {\n        outline: none;\n    }\n`;\n\nexport interface ArrowButtonProps {\n    open?: boolean;\n    disabled?: boolean;\n    id?: string;\n}\n\nexport const ArrowButton = (props: ArrowButtonProps) => (\n    <SmallButton\n        className=\"react-timebomb-arrow\"\n        id={props.id}\n        disabled={props.disabled}\n        tabIndex={-1}\n    >\n        {props.open ? '▲' : '▼'}\n    </SmallButton>\n);\n","import * as React from 'react';\nimport {\n    ReactTimebombProps,\n    ReactTimebombState,\n    ReactTimebombDate\n} from '../typings';\nimport {\n    startOfMonth,\n    startOfWeek,\n    endOfWeek,\n    addDays,\n    getWeekdayNames,\n    getWeekOfYear,\n    isArray\n} from '../utils';\nimport styled, { css } from 'styled-components';\nimport { WeekNum, Day } from './day';\n\ninterface MenuTableProps {\n    className?: string;\n    showTime: ReactTimebombState['showTime'];\n    showConfirm: ReactTimebombProps['showConfirm'];\n    showCalendarWeek: ReactTimebombProps['showCalendarWeek'];\n    selectWeek: ReactTimebombProps['selectWeek'];\n    selectRange: ReactTimebombProps['selectRange'];\n    value: ReactTimebombProps['value'];\n    minDate: ReactTimebombProps['minDate'];\n    maxDate: ReactTimebombProps['maxDate'];\n    date: ReactTimebombState['date'];\n    selectedRange: ReactTimebombState['selectedRange'];\n    mobile: ReactTimebombProps['mobile'];\n    onSelectDay(date: Date): void;\n    onSubmit(): void;\n}\n\ninterface TableProps {\n    selectWeek?: boolean;\n    mobile?: boolean;\n}\n\nconst Table = styled.table`\n    width: 100%;\n    height: 100%;\n    font-size: inherit;\n    user-select: none;\n    padding: 5px 10px;\n    box-sizing: border-box;\n\n    td.calendar-week {\n        color: #aaa;\n    }\n\n    th.calendar-week {\n        text-align: left;\n        color: #aaa;\n    }\n\n    tr {\n        ${(props: TableProps) =>\n            props.selectWeek\n                ? css`\n                      &:hover {\n                          cursor: pointer;\n\n                          td.day {\n                              background-color: #eee;\n                          }\n                      }\n                  `\n                : ''};\n\n        th {\n            padding: 3px 2px;\n            width: 14.285714286%;\n        }\n\n        td {\n            width: 14.285714286%;\n        }\n    }\n`;\n\nexport function MenuTable(props: MenuTableProps) {\n    const {\n        showCalendarWeek,\n        selectRange,\n        selectedRange,\n        selectWeek,\n        mobile,\n        showConfirm,\n        onSubmit\n    } = props;\n    const [hoverDay, setHoverDay] = React.useState<Date | undefined>(undefined);\n    const [weekdayNames] = React.useState(getWeekdayNames());\n    const [sun, mon, tue, wed, thu, fri, sat] = weekdayNames;\n    const className = ['month', props.className]\n        .filter(c => Boolean(c))\n        .join(' ');\n\n    const monthMatrix = React.useMemo(() => {\n        const date = getDate(props.date);\n        const dateMonth = date.getMonth();\n        const dateYear = date.getFullYear();\n        const weeks: (Date)[][] = [];\n\n        let base = startOfMonth(date);\n        let week = 0;\n\n        while (\n            startOfWeek(base).getMonth() === dateMonth ||\n            endOfWeek(base).getMonth() === dateMonth\n        ) {\n            const weekStart = startOfWeek(\n                new Date(dateYear, dateMonth, week++ * 7 + 1)\n            );\n\n            weeks.push([\n                weekStart,\n                addDays(weekStart, 1),\n                addDays(weekStart, 2),\n                addDays(weekStart, 3),\n                addDays(weekStart, 4),\n                addDays(weekStart, 5),\n                addDays(weekStart, 6)\n            ]);\n\n            base = addDays(base, 7);\n        }\n\n        return weeks;\n    }, [getCacheKey()]);\n\n    function getCacheKey() {\n        const date = getDate(props.date);\n        const dateMonth = date.getMonth();\n        const dateYear = date.getFullYear();\n\n        // cache\n        return `${dateMonth}-${dateYear}`;\n    }\n\n    function getDate(date: ReactTimebombDate) {\n        return (isArray(date) ? date[selectedRange] : date)!;\n    }\n\n    function onSelectDay(date: Date): void {\n        props.onSelectDay(date);\n\n        if (!showConfirm) {\n            onSubmit();\n        }\n    }\n\n    function onDayMouseEnter(day: Date) {\n        if (selectRange) {\n            setHoverDay(day);\n        }\n    }\n\n    function onDayMouseLeave() {\n        if (selectRange) {\n            setHoverDay(undefined);\n        }\n    }\n\n    return (\n        <Table\n            className={className}\n            selectWeek={selectWeek}\n            mobile={mobile}\n            cellSpacing={0}\n            cellPadding={0}\n        >\n            <thead>\n                <tr>\n                    {showCalendarWeek && <th className=\"calendar-week\" />}\n                    <th>{mon}</th>\n                    <th>{tue}</th>\n                    <th>{wed}</th>\n                    <th>{thu}</th>\n                    <th>{fri}</th>\n                    <th>{sat}</th>\n                    <th>{sun}</th>\n                </tr>\n            </thead>\n            <tbody>\n                {monthMatrix.map(dates => {\n                    const weekNum = getWeekOfYear(dates[0]);\n\n                    return (\n                        <tr key={weekNum}>\n                            {showCalendarWeek && (\n                                <td className=\"calendar-week\">\n                                    <WeekNum\n                                        day={dates[0]}\n                                        onClick={onSelectDay}\n                                    >\n                                        {weekNum}\n                                    </WeekNum>\n                                </td>\n                            )}\n                            {dates.map(date => (\n                                <td className=\"day\" key={date.toISOString()}>\n                                    <Day\n                                        day={date}\n                                        hoverDay={hoverDay}\n                                        date={props.date}\n                                        value={props.value}\n                                        minDate={props.minDate}\n                                        maxDate={props.maxDate}\n                                        selectWeek={props.selectWeek}\n                                        selectRange={props.selectRange}\n                                        showTime={props.showTime}\n                                        onSelectDay={onSelectDay}\n                                        onMouseEnter={onDayMouseEnter}\n                                        onMouseLeave={onDayMouseLeave}\n                                    />\n                                </td>\n                            ))}\n                        </tr>\n                    );\n                })}\n            </tbody>\n        </Table>\n    );\n}\n","import * as React from 'react';\nimport {\n    getWeekOfYear,\n    dateEqual,\n    isEnabled,\n    isToday,\n    isArray\n} from '../utils';\nimport styled from 'styled-components';\nimport { MenuProps } from '.';\n\ninterface DayProps {\n    day: Date;\n    hoverDay?: Date;\n    value: MenuProps['value'];\n    date: MenuProps['date'];\n    selectWeek: MenuProps['selectWeek'];\n    selectRange: MenuProps['selectRange'];\n    minDate: MenuProps['minDate'];\n    maxDate: MenuProps['maxDate'];\n    showTime: MenuProps['showTime'];\n    onSelectDay: MenuProps['onSelectDay'];\n    onMouseEnter(day: Date): void;\n    onMouseLeave(day: Date): void;\n}\n\ninterface StyledDayProps {\n    selected?: boolean;\n    disabled?: boolean;\n    current: boolean;\n    today: boolean;\n}\n\nconst Flex = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst StyledDay = styled(Flex)`\n    padding: 8px 2px;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    color: ${(props: StyledDayProps) => (props.current ? 'inherit' : '#aaa')};\n    background-color: ${(props: StyledDayProps) =>\n        props.selected\n            ? '#ddd'\n            : props.today\n            ? 'rgba(172, 206, 247, 0.4)'\n            : 'transparent'};\n    font-weight: ${(props: StyledDayProps) =>\n        props.selected ? 'bold' : 'normal'};\n    pointer-events: ${(props: StyledDayProps) =>\n        props.disabled ? 'none' : 'auto'};\n    user-select: none;\n    opacity: ${(props: StyledDayProps) => (props.disabled ? 0.3 : 1)};\n\n    &:hover {\n        background-color: ${(props: StyledDayProps) =>\n            props.selected ? '#ddd' : '#eee'};\n    }\n`;\n\nexport function Day(props: DayProps) {\n    const {\n        day,\n        date,\n        value,\n        selectWeek,\n        selectRange,\n        hoverDay,\n        minDate,\n        maxDate,\n        showTime\n    } = props;\n    const [enabled, setEnabled] = React.useState(true);\n    const [today, setToday] = React.useState(false);\n    const current = React.useMemo(getCurrent, [date, day, showTime]);\n    const selected = React.useMemo(getSelected, [\n        day,\n        value,\n        selectWeek,\n        selectRange,\n        hoverDay\n    ]);\n\n    React.useEffect(() => {\n        setToday(isToday(day));\n    }, [day.getTime()]);\n\n    React.useEffect(() => {\n        setEnabled(isEnabled('day', day, props));\n    }, [\n        minDate ? minDate.getTime() : minDate,\n        maxDate ? maxDate.getTime() : maxDate\n    ]);\n\n    function getSelected() {\n        if (value) {\n            if (selectWeek) {\n                const dayWeekOfYear = getWeekOfYear(day);\n\n                if (isArray(value)) {\n                    return value.some(v => getWeekOfYear(v) === dayWeekOfYear);\n                }\n\n                return getWeekOfYear(value) === dayWeekOfYear;\n            }\n\n            if (selectRange && isArray(value)) {\n                const [minDate, maxDate] = value;\n\n                if (value.length === 1 && hoverDay) {\n                    return isEnabled('day', day, {\n                        minDate: minDate < hoverDay ? minDate : hoverDay,\n                        maxDate: minDate > hoverDay ? minDate : hoverDay\n                    });\n                }\n\n                if (value.length === 2) {\n                    return isEnabled('day', day, {\n                        minDate,\n                        maxDate\n                    });\n                }\n            }\n        }\n\n        return dateEqual(value, day, showTime);\n    }\n\n    function getCurrent() {\n        const dayMonth = day.getMonth();\n\n        if (isArray(date)) {\n            return date.some(d => d.getMonth() === dayMonth);\n        }\n\n        if (date) {\n            return dayMonth === date.getMonth();\n        }\n\n        return false;\n    }\n\n    function onSelectDay() {\n        props.onSelectDay(day);\n    }\n\n    function onMouseEnter() {\n        props.onMouseEnter(day);\n    }\n\n    function onMouseLeave() {\n        props.onMouseLeave(day);\n    }\n\n    return (\n        <StyledDay\n            className={selected ? 'value selected' : 'value'}\n            selected={selected}\n            current={current}\n            disabled={!enabled}\n            today={today}\n            onClick={onSelectDay}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n        >\n            {day.getDate()}\n        </StyledDay>\n    );\n}\n\ninterface WeekNumProps {\n    day: Date;\n    children: React.ReactNode;\n    onClick(day: Date): void;\n}\n\nexport function WeekNum(props: WeekNumProps) {\n    function onClick() {\n        props.onClick(props.day);\n    }\n\n    return <div onClick={onClick}>{props.children}</div>;\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { ReactTimebombState, FormatType } from '../typings';\nimport { isArray } from '../utils';\nimport { ReactTimebombProps } from 'src';\nimport { NumberInput } from '../components/number-input';\n\nconst Container = styled.div`\n    padding: 0;\n    display: flex;\n    align-items: center;\n    margin: 0 auto;\n    width: 100%;\n    border-top: ${(props: { topDivider?: boolean }) =>\n        props.topDivider ? '1px solid #ccc' : 'none'};\n\n    &:not(:last-child) {\n        border-bottom: 1px solid #ccc;\n    }\n`;\n\nconst Divider = styled.span`\n    margin: 0 5px;\n    font-weight: bold;\n`;\n\ninterface MenuTimeProps {\n    date: ReactTimebombState['date'];\n    timeStep: ReactTimebombProps['timeStep'];\n    topDivider?: boolean;\n    onChange(date: Date, mode: FormatType): void;\n    onSubmit(date: Date, mode: FormatType): void;\n    onCancel(date: undefined, mode: FormatType): void;\n}\n\nexport function MenuTime(props: MenuTimeProps) {\n    const { date, timeStep, topDivider, onChange, onSubmit, onCancel } = props;\n\n    if (isArray(date) || !date) {\n        return null;\n    }\n\n    return (\n        <Container topDivider={topDivider} className=\"react-timebomb-time\">\n            <NumberInput\n                date={date}\n                step={1}\n                mode=\"hour\"\n                onChange={onChange}\n                onSubmit={onSubmit}\n                onCancel={onCancel}\n            />\n            <Divider className=\"divider\">:</Divider>\n            <NumberInput\n                date={date}\n                step={timeStep}\n                mode=\"minute\"\n                onChange={onChange}\n                onSubmit={onSubmit}\n                onCancel={onCancel}\n            />\n        </Container>\n    );\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { FormatType } from '../typings';\nimport { formatNumberRaw, keys } from '../utils';\n\nconst Steps = styled.div`\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 24px;\n    height: 100%;\n    border-width: 0 1px;\n    border-style: solid;\n    border-color: #ccc;\n    visibility: hidden;\n`;\n\nconst Step = styled.button`\n    margin: 0;\n    padding: 0;\n    line-height: 1;\n    border: none;\n    flex: 1;\n    font-size: 8px;\n    color: #ccc;\n    cursor: pointer;\n    -webkit-appearance: none;\n\n    &:focus {\n        outline: none;\n    }\n\n    &:hover {\n        background: #eee;\n        color: #000;\n    }\n`;\n\nconst InputContainer = styled.div`\n    position: relative;\n    flex: 1;\n    display: flex;\n\n    &:hover {\n        ${Steps} {\n            visibility: visible;\n        }\n    }\n\n    &:last-child {\n        ${Steps} {\n            border-right: none;\n        }\n    }\n`;\n\nconst Input = styled.input`\n    flex: 1;\n    padding: 0 25px 0 6px;\n    margin: 0;\n    width: 50%;\n    min-height: 32px;\n    text-align: center;\n    border: none;\n\n    // @see https://stackoverflow.com/a/4298216/1138860\n    &::-webkit-outer-spin-button,\n    &::-webkit-inner-spin-button {\n        /* display: none; <- Crashes Chrome on hover */\n        -webkit-appearance: none;\n        margin: 0; /* <-- Apparently some margin are still there even though it's hidden */\n    }\n\n    &:focus {\n        outline: none;\n    }\n\n    &:focus {\n        background: #eee;\n\n        + ${Steps} {\n            visibility: visible;\n        }\n    }\n`;\n\ninterface NumberInputProps {\n    date: Date;\n    mode: FormatType;\n    step?: number;\n    onChange(date: Date, mode: FormatType): void;\n    onSubmit(date: Date, mode: FormatType): void;\n    onCancel(date: undefined, mode: FormatType): void;\n}\n\nexport function NumberInput(props: NumberInputProps) {\n    const { date, step, mode, onCancel, onSubmit } = props;\n    const ref = React.useRef<HTMLInputElement | null>(null);\n    const [focused, setFocused] = React.useState(false);\n    const [value, setValue] = React.useState<number | string | undefined>(\n        getDateValue(date)\n    );\n\n    React.useEffect(() => {\n        setValue(getDateValue(props.date));\n    }, [date.getTime()]);\n\n    React.useEffect(() => {\n        if (value && focused) {\n            const newDate = setDateValue(value);\n\n            props.onChange(newDate, mode);\n        }\n    }, [value]);\n\n    function setDateValue(value: string | number) {\n        const newDate = new Date(date);\n        const newValue = parseInt((value as any) || '0', 10);\n\n        switch (mode) {\n            case 'hour':\n                newDate.setHours(newValue);\n                break;\n            case 'minute':\n                newDate.setMinutes(newValue);\n                break;\n        }\n\n        return newDate;\n    }\n\n    function getDateValue(date: Date) {\n        switch (mode) {\n            case 'hour':\n                return date.getHours();\n            case 'minute':\n                return date.getMinutes();\n        }\n\n        return 0;\n    }\n\n    function getRenderedValue() {\n        if (focused) {\n            return value;\n        } else {\n            return isFinite(value as any) ? formatNumberRaw(value as any) : '';\n        }\n    }\n\n    function onFocusIn() {\n        setFocused(true);\n    }\n\n    function onFocusOut() {\n        if (document.querySelector(':focus') !== ref.current) {\n            setFocused(false);\n        }\n    }\n\n    function onChange(e: React.SyntheticEvent<HTMLInputElement>) {\n        const { value } = e.currentTarget;\n\n        if (value.length > 2) {\n            e.preventDefault();\n            return;\n        }\n\n        if (value === '') {\n            setValue(value);\n        } else if (date) {\n            const newDate = setDateValue(value);\n\n            setValue(getDateValue(newDate));\n        }\n    }\n\n    function onStepUp() {\n        if (date && value !== undefined && typeof value === 'number') {\n            const newDate = setDateValue(value + step!);\n\n            setValue(getDateValue(newDate));\n        }\n    }\n\n    function onStepDown() {\n        if (date && value !== undefined && typeof value === 'number') {\n            const newDate = setDateValue(value - step!);\n\n            setValue(getDateValue(newDate));\n        }\n    }\n\n    function onKeyUp(e: React.KeyboardEvent<HTMLInputElement>) {\n        switch (e.keyCode) {\n            case keys.ENTER:\n                onSubmit(date, mode);\n                break;\n            case keys.ESC:\n                onCancel(undefined, mode);\n                break;\n        }\n    }\n\n    return (\n        <InputContainer\n            className={`react-timebomb-number-input ${mode}`}\n            onMouseEnter={onFocusIn}\n            onMouseLeave={onFocusOut}\n        >\n            <Input\n                data-react-timebomb-selectable\n                type=\"number\"\n                ref={ref}\n                step={step}\n                value={getRenderedValue()}\n                onChange={onChange}\n                onFocus={onFocusIn}\n                onBlur={onFocusOut}\n                onKeyUp={onKeyUp}\n            />\n            <Steps>\n                <Step\n                    data-react-timebomb-selectable\n                    tabIndex={-1}\n                    onClick={onStepUp}\n                >\n                    ▲\n                </Step>\n                <Step\n                    data-react-timebomb-selectable\n                    tabIndex={-1}\n                    onClick={onStepDown}\n                >\n                    ▼\n                </Step>\n            </Steps>\n        </InputContainer>\n    );\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { ReactTimebombProps, ReactTimebombState } from '../typings';\nimport { Button } from '../components/button';\nimport {\n    subtractDays,\n    startOfMonth,\n    endOfMonth,\n    addDays,\n    getMonthNames,\n    isArray\n} from '../utils';\n\ninterface MenuTitleProps {\n    date: ReactTimebombState['date'];\n    minDate: ReactTimebombProps['minDate'];\n    maxDate: ReactTimebombProps['maxDate'];\n    mobile: ReactTimebombProps['mobile'];\n    mode: ReactTimebombState['mode'];\n    selectedRange: ReactTimebombState['selectedRange'];\n    showTime: ReactTimebombState['showTime'];\n    showDate: ReactTimebombState['showDate'];\n    onPrevMonth(): void;\n    onNextMonth(): void;\n    onReset(): void;\n    onMonth(): void;\n    onYear(): void;\n}\n\nconst Container = styled.div`\n    display: ${(props: { show: boolean }) => (props.show ? 'flex' : 'none')};\n    align-items: center;\n    width: 100%;\n    padding: 10px;\n    justify-content: space-between;\n    box-sizing: border-box;\n    white-space: nowrap;\n`;\n\nexport function MenuTitle(props: MenuTitleProps) {\n    const {\n        mode,\n        minDate,\n        maxDate,\n        mobile,\n        showDate,\n        selectedRange,\n        onNextMonth,\n        onPrevMonth,\n        onMonth,\n        onReset,\n        onYear\n    } = props;\n    const [monthNames] = React.useState(getMonthNames());\n    const show =\n        (mode === 'day' ||\n            mode === 'hour' ||\n            mode === 'minute' ||\n            mode === 'second') &&\n        Boolean(showDate);\n    const date = getDate();\n\n    function prevDisabled(): boolean {\n        if (minDate && props.date) {\n            return subtractDays(startOfMonth(date), 1) < minDate;\n        }\n\n        return false;\n    }\n\n    function nextDisabled(): boolean {\n        if (maxDate && props.date) {\n            const lastDate = isArray(props.date)\n                ? props.date[props.date.length - 1]\n                : props.date;\n\n            return addDays(endOfMonth(lastDate), 1) > maxDate;\n        }\n\n        return false;\n    }\n\n    function getDate() {\n        return (isArray(props.date) ? props.date[selectedRange] : props.date)!;\n    }\n\n    return (\n        <Container className=\"react-timebomb-menu-title\" show={show}>\n            <div>\n                <Button\n                    className=\"react-timebomb-button-month\"\n                    tabIndex={-1}\n                    mobile={mobile}\n                    onClick={onMonth}\n                >\n                    <b>{monthNames[date.getMonth()]}</b>\n                </Button>\n                <Button\n                    className=\"react-timebomb-button-year\"\n                    tabIndex={-1}\n                    mobile={mobile}\n                    onClick={onYear}\n                >\n                    {date.getFullYear()}\n                </Button>\n            </div>\n            <div>\n                <Button\n                    className=\"react-timebomb-button-month-prev\"\n                    tabIndex={-1}\n                    disabled={prevDisabled()}\n                    mobile={mobile}\n                    onClick={onPrevMonth}\n                >\n                    ◀\n                </Button>\n                <Button\n                    className=\"react-timebomb-button-month-reset\"\n                    tabIndex={-1}\n                    mobile={mobile}\n                    onClick={onReset}\n                >\n                    ○\n                </Button>\n                <Button\n                    className=\"react-timebomb-button-month-next\"\n                    tabIndex={-1}\n                    disabled={nextDisabled()}\n                    mobile={mobile}\n                    onClick={onNextMonth}\n                >\n                    ▶\n                </Button>\n            </div>\n        </Container>\n    );\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport {\n    keys,\n    formatNumber,\n    splitDate,\n    joinDates,\n    stringFromCharCode,\n    validateFormatGroup,\n    getAttribute,\n    getFormatType,\n    manipulateDate,\n    isEnabled,\n    selectElement,\n    fillZero,\n    clearSelection,\n    formatSplitExpr,\n    formatIsActualNumber,\n    replaceSpaceWithNbsp\n} from '../utils';\nimport { ReactTimebombProps, ReactTimebombState, IconProps } from '../typings';\nimport { ArrowButton, SmallButton } from '../components/button';\n\nexport interface ValueProps {\n    open?: boolean;\n    value?: Date;\n    format: string;\n    placeholder: ReactTimebombProps['placeholder'];\n    minDate: ReactTimebombProps['minDate'];\n    maxDate: ReactTimebombProps['maxDate'];\n    showDate: ReactTimebombState['showDate'];\n    showTime: ReactTimebombState['showTime'];\n    mode: ReactTimebombState['mode'];\n    allowValidation: ReactTimebombState['allowValidation'];\n    arrowButtonComponent: ReactTimebombProps['arrowButtonComponent'];\n    arrowButtonId: ReactTimebombProps['arrowButtonId'];\n    iconComponent: ReactTimebombProps['iconComponent'];\n    disabled: ReactTimebombProps['disabled'];\n    mobile: ReactTimebombProps['mobile'];\n    timeStep: ReactTimebombProps['timeStep'];\n    onToggle(): void;\n    onChangeValueText(valueText?: string, commit?: boolean): void;\n    onChangeFormatGroup(formatGroup: string): void;\n    onAllSelect(): void;\n    onSubmit(): void;\n    onClear(): void;\n}\n\ninterface ValueState {\n    allSelected?: boolean;\n}\n\ninterface InputProps {\n    disabled?: boolean;\n}\n\nexport const Flex = styled.div`\n    display: flex;\n    align-items: center;\n    white-space: nowrap;\n    position: relative;\n    line-height: 1;\n`;\n\nexport const Container = styled(Flex)`\n    justify-content: space-between;\n    align-items: center;\n    padding: 5px 10px;\n    border: 1px solid #ccc;\n    cursor: ${(props: { disabled?: boolean }) =>\n        props.disabled ? 'not-allowed' : 'pointer'};\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n`;\n\nconst Input = styled.span`\n    padding: 2px 0 2px 0;\n    min-width: 1px;\n    cursor: ${(props: InputProps) => (props.disabled ? 'not-allowed' : 'text')};\n    pointer-events: ${(props: InputProps) =>\n        props.disabled ? 'none' : 'auto'};\n\n    &:focus {\n        outline: none;\n    }\n\n    &:last-of-type {\n        padding: 2px 10px 2px 0;\n    }\n\n    &:not(:last-of-type):after {\n        content: attr(data-separator);\n        min-width: 4px;\n        display: inline-block;\n    }\n\n    &:empty:before {\n        content: attr(data-placeholder);\n        color: #aaa;\n    }\n\n    &:empty:not(:last-of-type):after {\n        color: #aaa;\n    }\n\n    &:not([contenteditable='true']) {\n        user-select: none;\n    }\n`;\n\nexport const ClearButton = styled(SmallButton)`\n    font-size: 18px;\n`;\n\nconst ClearButtonX = styled.span`\n    position: relative;\n    left: -1px;\n    top: -2px;\n`;\n\nexport const Placeholder = styled.span`\n    color: #aaa;\n    user-select: none;\n`;\n\nexport const Icon = styled.span`\n    margin-right: 5px;\n    user-select: none;\n\n    &:after {\n        content: '${(props: { icon: string }) => props.icon}';\n    }\n`;\n\nconst DefaultIcon = (props: IconProps) => {\n    function getIconClass(): 'time' | 'calendar' {\n        const { showTime, showDate } = props;\n\n        if (!showDate && showTime) {\n            return 'time';\n        }\n\n        return 'calendar';\n    }\n\n    function getIcon() {\n        switch (getIconClass()) {\n            case 'calendar':\n                return '📅';\n            case 'time':\n                return '⏱';\n        }\n    }\n\n    return (\n        <Icon\n            icon={getIcon()}\n            className={`react-timebomb-icon ${getIconClass()}`}\n        />\n    );\n};\n\nconst META_KEYS = [keys.BACKSPACE, keys.DELETE, keys.TAB];\n\nconst FORBIDDEN_KEYS = [\n    keys.SHIFT,\n    keys.ARROW_LEFT,\n    keys.ARROW_RIGHT,\n    keys.ARROW_UP,\n    keys.ARROW_DOWN,\n    keys.TAB\n];\n\nexport class Value extends React.PureComponent<ValueProps, ValueState> {\n    private inputs: HTMLSpanElement[] = [];\n\n    private get formatGroups(): string[] {\n        return this.props.format.split('').reduce(\n            (memo, char) => {\n                const prevChar = memo[memo.length - 1];\n\n                if (\n                    (prevChar && char === prevChar.substr(0, 1)) ||\n                    (formatSplitExpr.test(prevChar) &&\n                        formatSplitExpr.test(char))\n                ) {\n                    memo[memo.length - 1] += char;\n                } else {\n                    memo = [...memo, char];\n                }\n\n                return memo;\n            },\n            [] as string[]\n        );\n    }\n\n    private get focused(): HTMLElement | null {\n        return document.querySelector(':focus');\n    }\n\n    constructor(props: ValueProps) {\n        super(props);\n\n        this.state = {};\n\n        this.onSearchRef = this.onSearchRef.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onKeyUp = this.onKeyUp.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.onDblClick = this.onDblClick.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onClear = this.onClear.bind(this);\n        this.onToggle = this.onToggle.bind(this);\n    }\n\n    public componentDidUpdate(prevProps: ValueProps): void {\n        setTimeout(() => {\n            const { open, value, format, mode, allowValidation } = this.props;\n            const hasFocus = this.inputs.some(inp => inp === this.focused);\n            const allowTextSelection =\n                mode === 'day' || mode === 'month' || mode === 'year';\n\n            if (!hasFocus) {\n                if (open) {\n                    if (prevProps.value !== value && value) {\n                        const parts = splitDate(value, format);\n                        const input = this.inputs[0];\n\n                        this.inputs.forEach(\n                            (input, i) => (input.innerText = parts[i])\n                        );\n\n                        if (input && allowTextSelection) {\n                            input.focus();\n                        }\n                    }\n\n                    if (allowTextSelection) {\n                        if (!prevProps.open || value !== prevProps.value) {\n                            const [input] = this.inputs;\n\n                            if (input) {\n                                selectElement(input);\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (\n                open &&\n                prevProps.mode !== mode &&\n                !this.state.allSelected &&\n                allowTextSelection\n            ) {\n                const input = this.inputs.find(el => {\n                    const format = getAttribute(el, 'data-group');\n                    const type = getFormatType(format);\n\n                    return type === mode;\n                });\n\n                selectElement(input);\n            }\n\n            if (!open && value) {\n                const parts = splitDate(value, format);\n\n                this.inputs.forEach((input, i) => (input.innerText = parts[i]));\n            }\n\n            if (open && prevProps.value && !value && !allowValidation) {\n                this.inputs.forEach(input => (input.innerText = ''));\n            }\n\n            if (!open) {\n                this.setState({ allSelected: false });\n            }\n        }, 16);\n    }\n\n    public componentDidMount() {\n        if (this.props.value) {\n            this.forceUpdate();\n        }\n    }\n\n    public render(): React.ReactNode {\n        const {\n            placeholder,\n            value,\n            showDate,\n            showTime,\n            disabled,\n            arrowButtonId,\n            iconComponent,\n            open\n        } = this.props;\n        const ArrowButtonComp = this.props.arrowButtonComponent || ArrowButton;\n        const showPlaceholder = placeholder && !open;\n        const showClearer = value && !disabled;\n        const timeOnly = showTime && !showDate;\n        const IconComponent =\n            iconComponent !== undefined ? iconComponent : DefaultIcon;\n\n        return (\n            <Container\n                data-role=\"value\"\n                className=\"react-slct-value react-timebomb-value\"\n                disabled={disabled}\n                onClick={this.onToggle}\n            >\n                <Flex>\n                    {IconComponent && (\n                        <IconComponent\n                            showDate={showDate}\n                            showTime={showTime}\n                        />\n                    )}\n                    <Flex>\n                        {this.renderValue()}\n                        {showPlaceholder && (\n                            <Placeholder className=\"react-timebomb-placeholder\">\n                                {placeholder}\n                            </Placeholder>\n                        )}\n                    </Flex>\n                </Flex>\n                <Flex>\n                    {showClearer && (\n                        <ClearButton\n                            className=\"react-timebomb-clearer\"\n                            tabIndex={-1}\n                            onClick={this.onClear}\n                        >\n                            <ClearButtonX>×</ClearButtonX>\n                        </ClearButton>\n                    )}\n                    {!timeOnly && (\n                        <ArrowButtonComp\n                            id={arrowButtonId}\n                            disabled={disabled}\n                            open={open}\n                        />\n                    )}\n                </Flex>\n            </Container>\n        );\n    }\n\n    private renderValue(): React.ReactNode {\n        const { open, disabled, mobile, value } = this.props;\n        const contentEditable = !disabled && !mobile;\n\n        if (!open && !value) {\n            return null;\n        }\n\n        const formatGroups = this.formatGroups;\n\n        return (\n            <Flex>\n                {formatGroups.map((group, i) => {\n                    if (group.split('').some(g => formatSplitExpr.test(g))) {\n                        return null;\n                    } else {\n                        const separator = formatGroups[i + 1];\n\n                        return (\n                            <Input\n                                data-react-timebomb-selectable\n                                contentEditable={contentEditable}\n                                disabled={disabled}\n                                data-placeholder={group}\n                                data-separator={replaceSpaceWithNbsp(separator)}\n                                key={group}\n                                data-group={group}\n                                ref={this.onSearchRef}\n                                onKeyDown={this.onKeyDown}\n                                onKeyUp={this.onKeyUp}\n                                onFocus={this.onFocus}\n                                onBlur={this.onBlur}\n                                onClick={this.onClick}\n                                onDoubleClick={this.onDblClick}\n                                onChange={this.onChange}\n                            />\n                        );\n                    }\n                })}\n            </Flex>\n        );\n    }\n\n    private onSearchRef(el: HTMLSpanElement | null): void {\n        if (el) {\n            this.inputs.push(el);\n        } else {\n            this.inputs = [];\n        }\n    }\n\n    private onKeyDown(e: React.KeyboardEvent<HTMLSpanElement>): void {\n        const {\n            onChangeValueText,\n            format,\n            value,\n            allowValidation,\n            timeStep\n        } = this.props;\n        const input = e.currentTarget;\n        const { innerText, nextSibling, previousSibling } = input;\n        const formatGroup = getAttribute(input, 'data-group');\n        const numericFormat = formatIsActualNumber(formatGroup);\n        const sel = getSelection();\n        const hasSelection = Boolean(sel.focusOffset - sel.baseOffset);\n        let numericValue = parseInt(innerText, 10);\n\n        switch (e.keyCode) {\n            case keys.ENTER:\n            case keys.ESC:\n            case keys.BACKSPACE:\n            case keys.DOT:\n            case keys.COMMA:\n                e.preventDefault();\n                return;\n            case keys.ARROW_RIGHT:\n                e.preventDefault();\n\n                if (nextSibling instanceof HTMLSpanElement) {\n                    nextSibling.focus();\n                } else {\n                    selectElement(input);\n                }\n                return;\n            case keys.ARROW_LEFT:\n                e.preventDefault();\n\n                if (previousSibling instanceof HTMLSpanElement) {\n                    previousSibling.focus();\n                } else {\n                    selectElement(input);\n                }\n                return;\n            case keys.ARROW_UP:\n            case keys.ARROW_DOWN:\n                e.preventDefault();\n\n                if (!numericFormat) {\n                    return;\n                }\n\n                const isArrowUp = e.keyCode === keys.ARROW_UP;\n\n                if (isNaN(numericValue)) {\n                    numericValue = 0;\n                }\n\n                if (isFinite(numericValue)) {\n                    const formatType = getFormatType(formatGroup);\n\n                    if (!allowValidation) {\n                        const add = formatType === 'minute' ? timeStep || 1 : 1;\n                        const nextValue =\n                            numericValue + (isArrowUp ? add : -add);\n                        const valid = validateFormatGroup(\n                            nextValue,\n                            formatGroup\n                        );\n\n                        if (valid) {\n                            input.innerText =\n                                typeof valid === 'string'\n                                    ? valid\n                                    : formatNumber(nextValue);\n                        }\n                    } else {\n                        if (value && formatType) {\n                            const direction = isArrowUp ? 'add' : 'subtract';\n\n                            const newDate = manipulateDate(\n                                value,\n                                formatType,\n                                direction,\n                                timeStep\n                            );\n                            const enabled = isEnabled(\n                                'day',\n                                newDate,\n                                this.props\n                            );\n\n                            if (enabled) {\n                                const dateParts = splitDate(newDate, format);\n\n                                this.inputs.map(\n                                    (inp, i) => (inp.innerText = dateParts[i])\n                                );\n                            }\n                        }\n                    }\n\n                    selectElement(input);\n                    onChangeValueText(joinDates(this.inputs, format));\n                }\n                return;\n        }\n\n        const char = stringFromCharCode(e.keyCode);\n        const groupValue = innerText && !hasSelection ? innerText + char : char;\n\n        if (META_KEYS.includes(e.keyCode) || e.metaKey || e.ctrlKey) {\n            return;\n        }\n\n        if (!numericFormat) {\n            e.preventDefault();\n            return;\n        }\n\n        const valid = validateFormatGroup(groupValue, formatGroup);\n\n        if (!valid) {\n            e.preventDefault();\n        } else if (typeof valid === 'string') {\n            e.preventDefault();\n\n            input.innerText = valid;\n        }\n\n        if (\n            this.state.allSelected &&\n            e.keyCode !== keys.BACKSPACE &&\n            e.keyCode !== keys.DELETE\n        ) {\n            const [firstInput] = this.inputs;\n            let validatedChar = validateFormatGroup(char, formatGroup);\n\n            if (validatedChar && validatedChar === true) {\n                validatedChar = char;\n            }\n\n            if (validatedChar) {\n                e.preventDefault();\n\n                this.inputs.forEach((el, i) => i !== 0 && (el.innerText = ''));\n\n                if (validatedChar.length === 2) {\n                    selectElement(firstInput);\n                } else {\n                    clearSelection();\n\n                    firstInput.innerText = validatedChar;\n                    firstInput.focus();\n\n                    selectElement(firstInput, [1, 1]);\n                }\n            }\n        }\n\n        // validate group\n        if (!hasSelection && innerText.length >= formatGroup.length) {\n            e.preventDefault();\n        }\n    }\n\n    private onKeyUp(e: React.KeyboardEvent<HTMLSpanElement>): void {\n        const { onChangeValueText, format, onSubmit, onToggle } = this.props;\n        const input = e.currentTarget;\n        const { innerText, nextSibling, previousSibling } = input;\n\n        if (e.keyCode === keys.ENTER) {\n            e.preventDefault();\n\n            if (this.focused) {\n                this.focused.blur();\n            }\n            onSubmit();\n            return;\n        }\n\n        if (e.keyCode === keys.ESC) {\n            onToggle();\n            return;\n        }\n\n        if (this.state.allSelected) {\n            if (e.keyCode === keys.BACKSPACE || e.keyCode === keys.DELETE) {\n                // delete all\n                this.inputs.forEach(el => (el.innerText = ''));\n\n                selectElement(this.inputs[0]);\n            }\n\n            this.setState({ allSelected: false });\n        }\n\n        // remove text / focus prev\n        else if (e.keyCode === keys.BACKSPACE) {\n            if (innerText) {\n                input.innerText = '';\n            } else if (previousSibling instanceof HTMLSpanElement) {\n                selectElement(previousSibling);\n            }\n        }\n\n        // focus next\n        else if (\n            (innerText.length >= getAttribute(input, 'data-group').length &&\n                !FORBIDDEN_KEYS.includes(e.keyCode)) ||\n            e.keyCode === keys.DOT ||\n            e.keyCode === keys.COMMA\n        ) {\n            if (!nextSibling) {\n                selectElement(input);\n            } else if (nextSibling instanceof HTMLSpanElement) {\n                selectElement(nextSibling);\n            }\n\n            onChangeValueText(joinDates(this.inputs, format));\n        }\n    }\n\n    private onClick(e: React.SyntheticEvent<HTMLSpanElement>): void {\n        selectElement(e.currentTarget);\n    }\n\n    private onDblClick(e: React.SyntheticEvent<HTMLSpanElement>) {\n        const input = e.currentTarget;\n\n        if (input.parentNode && this.inputs.some(el => Boolean(el.innerText))) {\n            selectElement(this.inputs[0]);\n            selectElement(input.parentNode as HTMLElement);\n            this.setState({ allSelected: true }, this.props.onAllSelect);\n        }\n    }\n\n    private onFocus = (() => {\n        let timeout = 0;\n\n        return (e: React.SyntheticEvent<HTMLSpanElement>) => {\n            clearTimeout(timeout);\n\n            const input = e.currentTarget;\n\n            selectElement(input);\n\n            timeout = setTimeout(() => {\n                if (!this.state.allSelected) {\n                    const formatGroup = getAttribute(input, 'data-group');\n\n                    this.props.onChangeFormatGroup(formatGroup);\n                }\n            }, 16);\n        };\n    })();\n\n    private onBlur(e: React.SyntheticEvent<HTMLSpanElement>): void {\n        if (!this.state.allSelected) {\n            const input = e.target as HTMLSpanElement;\n            const value = input.innerText;\n            const dataGroup = getAttribute(input, 'data-group');\n            const formatType = getFormatType(dataGroup);\n\n            if (formatType) {\n                const filledValue = fillZero(value, formatType);\n\n                if (filledValue) {\n                    input.innerText = filledValue;\n                }\n            }\n        }\n\n        // check if timebomb is still focused\n        setTimeout(() => {\n            const { focused } = this;\n\n            if (\n                this.props.open &&\n                focused &&\n                !getAttribute(focused, 'data-react-timebomb-selectable')\n            ) {\n                this.props.onToggle();\n            }\n        }, 0);\n    }\n\n    private onChange(e: React.KeyboardEvent<HTMLSpanElement>): void {\n        const { format, onChangeValueText } = this.props;\n        const input = e.currentTarget;\n        const { innerText, nextSibling } = input;\n\n        onChangeValueText(joinDates(this.inputs, format));\n\n        if (innerText.length >= getAttribute(input, 'data-group').length) {\n            if (nextSibling instanceof HTMLSpanElement) {\n                nextSibling.focus();\n            }\n        }\n    }\n\n    private onClear(e: React.MouseEvent<HTMLButtonElement>): void {\n        e.stopPropagation();\n\n        this.props.onClear();\n    }\n\n    private onToggle(e: React.SyntheticEvent<HTMLSpanElement>): void {\n        const { open, disabled, onToggle } = this.props;\n\n        if (disabled) {\n            return;\n        }\n\n        if (!this.inputs.some(inp => inp === e.target) || !open) {\n            onToggle();\n        }\n    }\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport {\n    Container,\n    Flex,\n    Icon,\n    ValueProps,\n    Placeholder,\n    ClearButton\n} from './value';\nimport { dateFormat, keys } from '../utils';\nimport { ArrowButton } from '../components/button';\n\ninterface MultiValueProps {\n    value: undefined | Date[];\n    placeholder: ValueProps['placeholder'];\n    open: ValueProps['open'];\n    arrowButtonComponent: ValueProps['arrowButtonComponent'];\n    arrowButtonId: ValueProps['arrowButtonId'];\n    iconComponent: ValueProps['iconComponent'];\n    disabled: ValueProps['disabled'];\n    onToggle(): void;\n    onClear(): void;\n}\n\nconst ClearButtonX = styled.span`\n    position: relative;\n    left: -1px;\n    top: -2px;\n`;\n\nconst DefaultIcon = () => <Icon className=\"react-timebomb-icon\" icon=\"📅\" />;\n\nfunction Value(props: MultiValueProps) {\n    const { value } = props;\n\n    if (!value) {\n        return null;\n    }\n\n    return <>{value.map(d => dateFormat(d, 'DD.MM.YYYY')).join(' – ')}</>;\n}\n\nexport function ValueMulti(props: MultiValueProps) {\n    const {\n        placeholder,\n        value,\n        open,\n        disabled,\n        arrowButtonId,\n        iconComponent,\n        onToggle\n    } = props;\n    const ArrowButtonComp = props.arrowButtonComponent || ArrowButton;\n    const showPlaceholder = placeholder && !open;\n    const IconComponent =\n        iconComponent !== undefined ? iconComponent : DefaultIcon;\n\n    React.useEffect(() => {\n        document.body.addEventListener('keyup', onKeyUp);\n\n        return () => {\n            document.body.removeEventListener('keyup', onKeyUp);\n        };\n    }, []);\n\n    function onClear(e: React.MouseEvent<HTMLButtonElement>): void {\n        e.stopPropagation();\n\n        props.onClear();\n    }\n\n    function onKeyUp(e: KeyboardEvent) {\n        switch (e.keyCode) {\n            case keys.ESC:\n                if (open) {\n                    onToggle();\n                }\n                break;\n        }\n    }\n\n    return (\n        <Container\n            data-role=\"value\"\n            className=\"react-slct-value react-timebomb-value\"\n            disabled={disabled}\n            onClick={disabled ? undefined : onToggle}\n        >\n            <Flex>\n                {IconComponent && <IconComponent />}\n                <Flex>\n                    <Value {...props} />\n                    {showPlaceholder && (\n                        <Placeholder className=\"react-timebomb-placeholder\">\n                            {placeholder}\n                        </Placeholder>\n                    )}\n                </Flex>\n            </Flex>\n            <Flex>\n                {value && (\n                    <ClearButton\n                        className=\"react-timebomb-clearer\"\n                        disabled={disabled}\n                        tabIndex={-1}\n                        onClick={onClear}\n                    >\n                        <ClearButtonX>×</ClearButtonX>\n                    </ClearButton>\n                )}\n                <ArrowButtonComp\n                    id={arrowButtonId}\n                    disabled={disabled}\n                    open={open}\n                />\n            </Flex>\n        </Container>\n    );\n}\n"]}