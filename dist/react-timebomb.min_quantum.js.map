{"version":3,"sources":["src/menu-title.tsx"],"names":["React","$fsx","r","styled_components_1","button_1","utils_1","util_1","Container","default","div","props","show","exports","MenuTitle","PureComponent","prevDisabled","minDate","date","this","subtractDays","startOfMonth","nextDisabled","maxDate","lastDate","isArray","length","addDays","endOfMonth","selectedRange","[object Object]","super","monthNames","getMonthNames","mode","onNextMonth","onPrevMonth","onMonth","onReset","onYear","createElement","Button","className","tabIndex","onClick","getMonth","getFullYear","disabled"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4/DAAA,MAAAA,EAAAC,EAAAC,EAAA,SACAC,EAAAF,EAAAC,EAAA,qBAEAE,EAAAH,EAAAC,EAAA,GACAG,EAAAJ,EAAAC,EAAA,GAOAI,EAAAL,EAAAC,EAAA,QAeMK,EAAYJ,EAAAK,QAAOC;eACVC,GAA+BA,EAAMC,KAAO,OAAS;;;;;;;EASpEC,EAAAC,UAAA,cAA+Bb,EAAMc,cAGjCC,mBACI,MAAMC,QAAEA,EAAAC,KAASA,GAASC,KAAKR,MAE/B,SAAIM,IAAWC,IACJZ,EAAAc,aAAad,EAAAe,aAAaF,KAAKD,MAAO,GAAKD,EAM1DK,mBACI,MAAMC,QAAEA,EAAAL,KAASA,GAASC,KAAKR,MAE/B,GAAIY,GAAWL,EAAM,CACjB,MAAMM,EAAWjB,EAAAkB,QAAQP,GAAQA,EAAKA,EAAKQ,OAAS,GAAKR,EAEzD,OAAOZ,EAAAqB,QAAQrB,EAAAsB,WAAWJ,GAAW,GAAKD,EAG9C,OAAO,EAGXL,WACI,MAAMA,KAAEA,EAAAW,cAAMA,GAAkBV,KAAKR,MAErC,OAAQJ,EAAAkB,QAAQP,GAAQA,EAAKW,GAAiBX,EAGlDY,YAAYnB,GACRoB,MAAMpB,GAENQ,KAAKa,WAAa1B,EAAA2B,gBAGfH,SACH,MAAMI,KACFA,EAAAC,YACAA,EAAAC,YACAA,EAAAC,QACAA,EAAAC,QACAA,EAAAC,OACAA,GACApB,KAAKR,MACHC,EAAgB,QAATsB,EACPhB,EAAOC,KAAKD,KAElB,OACIjB,EAAAuC,cAAChC,EAAS,CAACI,KAAMA,GACbX,EAAAuC,cAAA,MAAA,KACIvC,EAAAuC,cAACnC,EAAAoC,OAAM,CACHC,UAAU,8BACVC,UAAW,EACXC,QAASP,GAETpC,EAAAuC,cAAA,IAAA,KAAIrB,KAAKa,WAAWd,EAAK2B,cAE7B5C,EAAAuC,cAACnC,EAAAoC,OAAM,CACHC,UAAU,6BACVC,UAAW,EACXC,QAASL,GAERrB,EAAK4B,gBAGd7C,EAAAuC,cAAA,MAAA,KACIvC,EAAAuC,cAACnC,EAAAoC,OAAM,CACHC,UAAU,mCACVC,UAAW,EACXI,SAAU5B,KAAKH,aACf4B,QAASR,GAAW,KAIxBnC,EAAAuC,cAACnC,EAAAoC,OAAM,CACHC,UAAU,oCACVC,UAAW,EACXC,QAASN,GAAO,KAIpBrC,EAAAuC,cAACnC,EAAAoC,OAAM,CACHC,UAAU,mCACVC,UAAW,EACXI,SAAU5B,KAAKG,aACfsB,QAAST,GAAW","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { ReactTimebombProps, ReactTimebombState } from './typings';\nimport { Button } from './button';\nimport {\n    subtractDays,\n    startOfMonth,\n    endOfMonth,\n    addDays,\n    getMonthNames\n} from './utils';\nimport { isArray } from 'util';\n\ninterface MenuTitleProps {\n    date: ReactTimebombState['date'];\n    minDate: ReactTimebombProps['minDate'];\n    maxDate: ReactTimebombProps['maxDate'];\n    mode: ReactTimebombState['mode'];\n    selectedRange: ReactTimebombState['selectedRange'];\n    onPrevMonth(): void;\n    onNextMonth(): void;\n    onReset(): void;\n    onMonth(): void;\n    onYear(): void;\n}\n\nconst Container = styled.div`\n    display: ${(props: { show: boolean }) => (props.show ? 'flex' : 'none')};\n    align-items: center;\n    width: 100%;\n    padding: 10px 10px 15px;\n    justify-content: space-between;\n    min-height: 21px;\n    box-sizing: border-box;\n`;\n\nexport class MenuTitle extends React.PureComponent<MenuTitleProps> {\n    private monthNames!: string[];\n\n    private get prevDisabled(): boolean {\n        const { minDate, date } = this.props;\n\n        if (minDate && date) {\n            return subtractDays(startOfMonth(this.date), 1) < minDate;\n        }\n\n        return false;\n    }\n\n    private get nextDisabled(): boolean {\n        const { maxDate, date } = this.props;\n\n        if (maxDate && date) {\n            const lastDate = isArray(date) ? date[date.length - 1] : date;\n\n            return addDays(endOfMonth(lastDate), 1) > maxDate;\n        }\n\n        return false;\n    }\n\n    private get date() {\n        const { date, selectedRange } = this.props;\n\n        return (isArray(date) ? date[selectedRange] : date)!;\n    }\n\n    constructor(props: MenuTitleProps) {\n        super(props);\n\n        this.monthNames = getMonthNames();\n    }\n\n    public render(): React.ReactNode {\n        const {\n            mode,\n            onNextMonth,\n            onPrevMonth,\n            onMonth,\n            onReset,\n            onYear\n        } = this.props;\n        const show = mode === 'day';\n        const date = this.date;\n\n        return (\n            <Container show={show}>\n                <div>\n                    <Button\n                        className=\"react-timebomb-button-month\"\n                        tabIndex={-1}\n                        onClick={onMonth}\n                    >\n                        <b>{this.monthNames[date.getMonth()]}</b>\n                    </Button>\n                    <Button\n                        className=\"react-timebomb-button-year\"\n                        tabIndex={-1}\n                        onClick={onYear}\n                    >\n                        {date.getFullYear()}\n                    </Button>\n                </div>\n                <div>\n                    <Button\n                        className=\"react-timebomb-button-month-prev\"\n                        tabIndex={-1}\n                        disabled={this.prevDisabled}\n                        onClick={onPrevMonth}\n                    >\n                        ◀\n                    </Button>\n                    <Button\n                        className=\"react-timebomb-button-month-reset\"\n                        tabIndex={-1}\n                        onClick={onReset}\n                    >\n                        ○\n                    </Button>\n                    <Button\n                        className=\"react-timebomb-button-month-next\"\n                        tabIndex={-1}\n                        disabled={this.nextDisabled}\n                        onClick={onNextMonth}\n                    >\n                        ▶\n                    </Button>\n                </div>\n            </Container>\n        );\n    }\n}\n"]}