{"version":3,"sources":["src/menu/mobile.tsx"],"names":["React","$fsx","r","react_with_gesture_1","MobileMenuTableWrapper","default","div","props","animate","GestureWrapper","PureComponent","[object Object]","super","this","state","prevProps","down","xDir","direction","x","setState","cooldown","setTimeout","undefined","onChangeMonth","deltaX","delta","translateX","cancel","createElement","Boolean","style","transform","children","__decorate","withGesture","mouse","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;m+EAAA,MAAAA,EAAAC,EAAAC,EAAA,SACAC,EAAAF,EAAAC,EAAA,sBAGME,EAFNH,EAAAC,EAAA,qBAE+BG,QAAOC;;;;;kBAKpBC,GACVA,EAAMC,QAAU,2BAA6B;EAWrD,IAAaC,EAAb,cAAoCT,EAAMU,cAItCC,YAAYJ,GACRK,MAAML,GAENM,KAAKC,MAAQ,GAGVH,mBAAmBI,GACtB,MAAMR,EAAQM,KAAKN,MAEnB,GAAIQ,EAAUC,OAAST,EAAMS,KAAM,CAC/B,MAAOC,GAAQV,EAAMW,UACrB,IACIA,EADAC,EAAI,GAGJF,EAAO,GACPE,EAAI,QACJD,EAAY,QACLD,EAAO,IACdE,EAAI,SACJD,EAAY,QAGZC,GAAKD,GACLL,KAAKO,SAAS,CAAED,EAAAA,EAAGE,UAAU,GAAQ,KACjCC,WAAW,KACPT,KAAKO,SAAS,CAAED,OAAGI,GAAa,KAC5BV,KAAKN,MAAMiB,cAAcN,GACzBL,KAAKO,SAAS,CAAEC,UAAU,OAE/B,QAMZV,SACH,MAAMJ,EAAQM,KAAKN,OACbY,EAAEA,EAAAE,SAAGA,GAAaR,KAAKC,OACtBW,GAAUlB,EAAMmB,MACjBC,EAAaR,MAAQZ,EAAMS,KAAOS,EAAS,MAMjD,OAJIJ,GAAYd,EAAMqB,QAClBrB,EAAMqB,SAIN5B,EAAA6B,cAACzB,EAAsB,CACnBI,QAASsB,QAAQX,GACjBY,MAAO,CAAEC,wBAAyBL,OAEjCpB,EAAM0B,YAtDVxB,EAAcyB,EAAA,CADzB/B,EAAAgC,YAAY,CAAEC,OAAO,qCACV3B,GAAA4B,EAAA5B,eAAAA","sourcesContent":["import * as React from 'react';\nimport { withGesture, GestureState } from 'react-with-gesture';\nimport styled from 'styled-components';\n\nconst MobileMenuTableWrapper = styled.div`\n    display: flex;\n    width: 300%;\n    position: relative;\n    left: -100%;\n    transition: ${(props: { animate: boolean }) =>\n        props.animate ? 'transform 0.15s ease-out' : 'none'};\n`;\n\nexport type GestureDirection = 'next' | 'prev';\n\ninterface GestureWrapperProps extends GestureState {\n    children: React.ReactNode;\n    onChangeMonth(direction: GestureDirection): void;\n}\n\n@(withGesture({ mouse: false }) as any)\nexport class GestureWrapper extends React.PureComponent<\n    { onChangeMonth(direction: GestureDirection): void },\n    { x?: string; cooldown?: boolean }\n> {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    public componentDidUpdate(prevProps: GestureWrapperProps) {\n        const props = this.props as GestureWrapperProps;\n\n        if (prevProps.down && !props.down) {\n            const [xDir] = props.direction;\n            let x = '';\n            let direction: GestureDirection | undefined;\n\n            if (xDir > 0) {\n                x = '33.3%';\n                direction = 'prev';\n            } else if (xDir < 0) {\n                x = '-33.3%';\n                direction = 'next';\n            }\n\n            if (x && direction) {\n                this.setState({ x, cooldown: true }, () => {\n                    setTimeout(() => {\n                        this.setState({ x: undefined }, () => {\n                            this.props.onChangeMonth(direction!);\n                            this.setState({ cooldown: false });\n                        });\n                    }, 167);\n                });\n            }\n        }\n    }\n\n    public render() {\n        const props = this.props as GestureWrapperProps;\n        const { x, cooldown } = this.state;\n        const [deltaX] = props.delta;\n        const translateX = x || `${props.down ? deltaX : 0}px`;\n\n        if (cooldown && props.cancel) {\n            props.cancel();\n        }\n\n        return (\n            <MobileMenuTableWrapper\n                animate={Boolean(x)}\n                style={{ transform: `translateX(${translateX})` }}\n            >\n                {props.children}\n            </MobileMenuTableWrapper>\n        );\n    }\n}\n"]}