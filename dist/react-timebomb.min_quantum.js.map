{"version":3,"sources":["src/value-multi.tsx"],"names":["React","$fsx","r","value_1","utils_1","arrow_button_1","exports","ValueMulti","PureComponent","[object Object]","props","super","this","onClear","bind","onKeyUp","document","body","addEventListener","removeEventListener","placeholder","value","open","disabled","onToggle","ArrowButtonComp","arrowButtonComponent","ArrowButton","showPlaceholder","createElement","Container","data-role","className","onClick","undefined","Flex","Icon","icon","renderValue","Placeholder","ClearButton","tabIndex","map","d","dateFormat","join","e","stopPropagation","keyCode","keys","ESC"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ywMAAA,MAAAA,EAAAC,EAAAC,EAAA,SACAC,EAAAF,EAAAC,EAAA,GAQAE,EAAAH,EAAAC,EAAA,GACAG,EAAAJ,EAAAC,EAAA,GAYAI,EAAAC,WAAA,cAAgCP,EAAMQ,cAClCC,YAAYC,GACRC,MAAMD,GAENE,KAAKC,QAAUD,KAAKC,QAAQC,KAAKF,MACjCA,KAAKG,QAAUH,KAAKG,QAAQD,KAAKF,MAG9BH,oBACHO,SAASC,KAAKC,iBAAiB,QAASN,KAAKG,SAG1CN,uBACHO,SAASC,KAAKE,oBAAoB,QAASP,KAAKG,SAG7CN,SACH,MAAMW,YAAEA,EAAAC,MAAaA,EAAAC,KAAOA,EAAAC,SAAMA,EAAAC,SAAUA,GAAaZ,KAAKF,MACxDe,EAAkBb,KAAKF,MAAMgB,sBAAwBrB,EAAAsB,YACrDC,EAAkBR,IAAgBE,EAExC,OACItB,EAAA6B,cAAC1B,EAAA2B,UAAS,CAAAC,YACI,QACVC,UAAU,wCACVT,SAAUA,EACVU,QAASV,OAAWW,EAAYV,GAEhCxB,EAAA6B,cAAC1B,EAAAgC,KAAI,KACDnC,EAAA6B,cAAC1B,EAAAiC,KAAI,CAACJ,UAAU,sBAAsBK,KAAK,OAC3CrC,EAAA6B,cAAC1B,EAAAgC,KAAI,KACAvB,KAAK0B,cACLV,GACG5B,EAAA6B,cAAC1B,EAAAoC,YAAW,CAACP,UAAU,8BAClBZ,KAKjBpB,EAAA6B,cAAC1B,EAAAgC,KAAI,KACAd,GACGrB,EAAA6B,cAAC1B,EAAAqC,YAAW,CACRR,UAAU,yBACVT,SAAUA,EACVkB,UAAW,EACXR,QAASrB,KAAKC,SAAO,KAK7Bb,EAAA6B,cAACJ,EAAe,CAACF,SAAUA,EAAUD,KAAMA,MAMnDb,cACJ,MAAMY,MAAEA,GAAUT,KAAKF,MAEvB,OAAKW,EAIEA,EAAMqB,IAAIC,GAAKvC,EAAAwC,WAAWD,EAAG,eAAeE,KAAK,OAH7C,KAMPpC,QAAQqC,GACZA,EAAEC,kBAEFnC,KAAKF,MAAMG,UAGPJ,QAAQqC,GACZ,MAAMxB,KAAEA,EAAAE,SAAMA,GAAaZ,KAAKF,MAEhC,OAAQoC,EAAEE,SACN,KAAK5C,EAAA6C,KAAKC,IACF5B,GACAE","sourcesContent":["import * as React from 'react';\nimport {\n    Container,\n    Flex,\n    Icon,\n    ValueProps,\n    Placeholder,\n    ClearButton\n} from './value';\nimport { dateFormat, keys } from './utils';\nimport { ArrowButton } from './arrow-button';\n\ninterface MultiValueProps {\n    value: undefined | Date[];\n    placeholder: ValueProps['placeholder'];\n    open: ValueProps['open'];\n    arrowButtonComponent: ValueProps['arrowButtonComponent'];\n    disabled: ValueProps['disabled'];\n    onToggle(): void;\n    onClear(): void;\n}\n\nexport class ValueMulti extends React.PureComponent<MultiValueProps> {\n    constructor(props: MultiValueProps) {\n        super(props);\n\n        this.onClear = this.onClear.bind(this);\n        this.onKeyUp = this.onKeyUp.bind(this);\n    }\n\n    public componentDidMount() {\n        document.body.addEventListener('keyup', this.onKeyUp);\n    }\n\n    public componentWillUnmount() {\n        document.body.removeEventListener('keyup', this.onKeyUp);\n    }\n\n    public render() {\n        const { placeholder, value, open, disabled, onToggle } = this.props;\n        const ArrowButtonComp = this.props.arrowButtonComponent || ArrowButton;\n        const showPlaceholder = placeholder && !open;\n\n        return (\n            <Container\n                data-role=\"value\"\n                className=\"react-slct-value react-timebomb-value\"\n                disabled={disabled}\n                onClick={disabled ? undefined : onToggle}\n            >\n                <Flex>\n                    <Icon className=\"react-timebomb-icon\" icon=\"ðŸ“…\" />\n                    <Flex>\n                        {this.renderValue()}\n                        {showPlaceholder && (\n                            <Placeholder className=\"react-timebomb-placeholder\">\n                                {placeholder}\n                            </Placeholder>\n                        )}\n                    </Flex>\n                </Flex>\n                <Flex>\n                    {value && (\n                        <ClearButton\n                            className=\"react-timebomb-clearer\"\n                            disabled={disabled}\n                            tabIndex={-1}\n                            onClick={this.onClear}\n                        >\n                            Ã—\n                        </ClearButton>\n                    )}\n                    <ArrowButtonComp disabled={disabled} open={open} />\n                </Flex>\n            </Container>\n        );\n    }\n\n    private renderValue() {\n        const { value } = this.props;\n\n        if (!value) {\n            return null;\n        }\n\n        return value.map(d => dateFormat(d, 'DD.MM.YYYY')).join(' â€“ ');\n    }\n\n    private onClear(e: React.MouseEvent<HTMLButtonElement>): void {\n        e.stopPropagation();\n\n        this.props.onClear();\n    }\n\n    private onKeyUp(e: KeyboardEvent) {\n        const { open, onToggle } = this.props;\n\n        switch (e.keyCode) {\n            case keys.ESC:\n                if (open) {\n                    onToggle();\n                }\n                break;\n        }\n    }\n}\n"]}